{"version":3,"names":["searchcraftBaseSearchFormModuleCss","SearchcraftBaseSearchFormStyle0","SearchcraftBaseSearchForm","this","clearInput","searchStore","useSearchcraftStore","getState","themeStore","useThemeStore","handleFormSubmit","async","event","preventDefault","query","trim","error","setQuery","search","searchResults","JSON","stringify","handleSearchInputChange","detail","handleClearInput","toggleTheme","apiKey","endpointURL","index","componentDidLoad","searchcraft","SearchcraftCore","config","initialize","render","formClass","rightToLeftOrientation","h","key","class","classNames","onSubmit","label","labelForInput","onClearInput","onSearchInputChange","onButtonClick","errorMessage"],"sources":["src/components/searchcraft-base-search-form/searchcraft-base-search-form.module.scss?tag=searchcraft-base-search-form","src/components/searchcraft-base-search-form/searchcraft-base-search-form.tsx"],"sourcesContent":[":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.formLTR {\n  font-family: var(--font-stack);\n  text-align: left;\n}\n\n.formRTL {\n  font-family: var(--font-stack);\n  text-align: right;\n}\n\n.searchContainer {\n  align-items: center;\n  display: flex;\n}","import { Component, h, Event, Prop, State } from '@stencil/core';\nimport classNames from 'classnames';\n\nimport {\n  type CoreConfigSDK,\n  CoreSDK as SearchcraftCore,\n} from '@searchcraft/core';\n\nimport { useSearchcraftStore, useThemeStore } from '@provider/store';\n\nimport type { ScInputCustomEvent } from '@components/searchcraft-input/searchcraft-input';\n\n@Component({\n  tag: 'searchcraft-base-search-form',\n  styleUrl: 'searchcraft-base-search-form.module.scss',\n  shadow: false,\n})\nexport class SearchcraftBaseSearchForm {\n  @Prop() config: CoreConfigSDK = {\n    apiKey: '',\n    endpointURL: '',\n    index: [],\n  };\n  @Prop() errorMessage = 'Search was unsuccessful';\n  @Prop() labelForInput = 'Search';\n  @Prop() rightToLeftOrientation = false;\n\n  @Event() clearInput = () => {};\n\n  @State() error = false;\n  @State() query = '';\n  @State() searchResults: string | null = null;\n\n  private searchStore = useSearchcraftStore.getState();\n  private themeStore = useThemeStore.getState();\n\n  componentDidLoad() {\n    const searchcraft = new SearchcraftCore(this.config);\n    this.searchStore.initialize(searchcraft, true);\n  }\n\n  handleFormSubmit = async (event) => {\n    event.preventDefault();\n    if (this.query.trim() === '') {\n      this.error = true;\n    } else {\n      this.error = false;\n      this.searchStore.setQuery(this.query);\n      await this.searchStore.search();\n      this.searchResults = JSON.stringify(this.searchStore.searchResults);\n    }\n  };\n\n  handleSearchInputChange = (event: ScInputCustomEvent<string>) => {\n    this.query = event.detail;\n  };\n\n  handleClearInput = () => {\n    this.query = '';\n    this?.clearInput();\n  };\n\n  toggleTheme = () => {\n    this.themeStore.toggleTheme();\n  };\n\n  render() {\n    const formClass = this.rightToLeftOrientation ? 'formRTL' : 'formLTR';\n    return (\n      <form\n        class={classNames(`${formClass}`, 'searchcraft-base-search-form')}\n        onSubmit={this.handleFormSubmit}\n      >\n        <searchcraft-input-label label={this.labelForInput} />\n        <div\n          class={classNames(\n            'searchContainer',\n            'searchcraft-base-search-form-input-container',\n          )}\n        >\n          {this.rightToLeftOrientation && <searchcraft-button />}\n          <searchcraft-input\n            onClearInput={this.handleClearInput}\n            onSearchInputChange={this.handleSearchInputChange}\n            query={this.query}\n            rightToLeftOrientation={this.rightToLeftOrientation}\n          />\n          {!this.rightToLeftOrientation && (\n            <searchcraft-button onButtonClick={this.handleFormSubmit} />\n          )}\n        </div>\n        {this.error && (\n          <searchcraft-error-message errorMessage={this.errorMessage} />\n        )}\n      </form>\n    );\n  }\n}\n"],"mappings":"wIAAA,MAAMA,EAAqC,mNAC3C,MAAAC,EAAeD,E,MCgBFE,EAAyB,M,gEAU3BC,KAAAC,WAAa,OAMdD,KAAAE,YAAcC,EAAoBC,WAClCJ,KAAAK,WAAaC,EAAcF,WAOnCJ,KAAAO,iBAAmBC,MAAOC,IACxBA,EAAMC,iBACN,GAAIV,KAAKW,MAAMC,SAAW,GAAI,CAC5BZ,KAAKa,MAAQ,I,KACR,CACLb,KAAKa,MAAQ,MACbb,KAAKE,YAAYY,SAASd,KAAKW,aACzBX,KAAKE,YAAYa,SACvBf,KAAKgB,cAAgBC,KAAKC,UAAUlB,KAAKE,YAAYc,c,GAIzDhB,KAAAmB,wBAA2BV,IACzBT,KAAKW,MAAQF,EAAMW,MAAM,EAG3BpB,KAAAqB,iBAAmB,KACjBrB,KAAKW,MAAQ,GACbX,OAAI,MAAJA,YAAI,SAAJA,KAAMC,YAAY,EAGpBD,KAAAsB,YAAc,KACZtB,KAAKK,WAAWiB,aAAa,E,YA7CC,CAC9BC,OAAQ,GACRC,YAAa,GACbC,MAAO,I,kBAEc,0B,mBACC,S,4BACS,M,WAIhB,M,WACA,G,mBACuB,I,CAKxC,gBAAAC,GACE,MAAMC,EAAc,IAAIC,EAAgB5B,KAAK6B,QAC7C7B,KAAKE,YAAY4B,WAAWH,EAAa,K,CA4B3C,MAAAI,GACE,MAAMC,EAAYhC,KAAKiC,uBAAyB,UAAY,UAC5D,OACEC,EAAA,QAAAC,IAAA,2CACEC,MAAOC,EAAW,GAAGL,IAAa,gCAClCM,SAAUtC,KAAKO,kBAEf2B,EAAA,2BAAAC,IAAA,2CAAyBI,MAAOvC,KAAKwC,gBACrCN,EAAA,OAAAC,IAAA,2CACEC,MAAOC,EACL,kBACA,iDAGDrC,KAAKiC,wBAA0BC,EAAA,sBAAAC,IAAA,6CAChCD,EAAA,qBAAAC,IAAA,2CACEM,aAAczC,KAAKqB,iBACnBqB,oBAAqB1C,KAAKmB,wBAC1BR,MAAOX,KAAKW,MACZsB,uBAAwBjC,KAAKiC,0BAE7BjC,KAAKiC,wBACLC,EAAA,sBAAAC,IAAA,2CAAoBQ,cAAe3C,KAAKO,oBAG3CP,KAAKa,OACJqB,EAAA,6BAAAC,IAAA,2CAA2BS,aAAc5C,KAAK4C,e","ignoreList":[]}
{"version":3,"names":["searchcraftAutoSearchFormModuleCss","SearchcraftAutoSearchFormStyle0","SearchcraftAutoSearchForm","this","debounceTimeout","debounceDelay","searchStore","useSearchcraftStore","getState","handleInputChange","event","query","detail","setQuery","trim","searchResults","inputClearedOrNoResults","emit","setSearchResults","handleInputKeyUp","target","clearTimeout","setTimeout","querySubmit","runSearch","handleClearInput","clearInput","error","async","setSelectedFilters","search","handleFormSubmit","preventDefault","apiKey","endpointURL","index","componentDidLoad","searchcraft","SearchcraftCore","config","initialize","unsubscribe","subscribe","state","isRequesting","Object","assign","disconnectedCallback","render","formClass","rightToLeftOrientation","parsedCustomStyles","parseCustomStyles","customStylesForInput","h","key","class","classNames","onSubmit","label","labelForInput","customStyles","inputCaptionValue","inputIconHeight","inputIconWidth","onClearInput","onInputKeyUp","onSearchInputChange","placeholderValue","errorMessage","searchcraftBaseSearchResultModuleCss","SearchcraftBaseSearchResultStyle0","SearchcraftBaseSearchResult","buttonCallback","keyDownCallback","resultCallback","handleButtonClick","parseStyles","JSON","parse","console","isLightTheme","themeMode","styles","imageStyle","imageContainer","imageSource","alt","imageDescription","src","style","image","contentContainer","title","titleContent","subtitle","subtitleContent","primaryContent","secondaryContent","tertiaryContent","buttonText","onClick","button","type","isInteractive","onKeyDown","href","linkHref","rel","container","tabindex","placeImageRight","Fragment","searchcraftBaseSearchResultsModuleCss","SearchcraftBaseSearchResultsStyle0","SearchcraftBaseSearchResults","documentAttributesForDisplay","length","warn","hasSearched","name","_a","data","parsedSearchKeys","parseSearchKeys","serializedStyles","customStylesForResults","serializeStyles","resultsComponents","_d","_c","_b","hits","map","document","doc","result","dynamicProperties","extractDynamicProperties","formatTime","value","Number","isNaN","Date","getFormattedTimeFromNow","log","document_id","placeResultImageRight","finalComponents","placeAdAtStart","push","adInterval","forEach","component","placeAdAtEnd","_g","_f","_e","noResults","_k","_j","_h","SearchcraftCheckIcon","width","height","viewBox","fill","d","stroke","SearchcraftClearIconSet","xmlns","id","searchcraftClearInputButtonModuleCss","SearchcraftClearInputButtonStyle0","SearchcraftClearInputButton","theme","handleClearClick","SearchcraftDashIcon","x1","y1","x2","y2","searchcraftErrorMessageModuleCss","SearchcraftErrorMessageStyle0","SearchcraftErrorMessage","errorMessageStyle","searchcraftFiltersListModuleCss","SearchcraftFiltersListStyle0","SearchcraftFiltersList","autoSearchFormElement","handleSearchRequest","selectedFilters","emitFiltersUpdate","formatLabel","count","replace","char","toUpperCase","connectedCallback","facets","populateFiltersFromFacets","resultsCount","querySelector","addEventListener","removeEventListener","flattened","flattenFacets","section","dynamicFilters","filter","children","handleCheckboxChange","isChecked","isParent","parentFilter","find","childValues","child","includes","filtersUpdated","isChildSelected","some","checked","onChange","display","split","pop","searchcraftInputModuleCss","SearchcraftInputStyle0","SearchcraftInput","input","searchInputChange","inputKeyUp","containerClassName","inputClassName","validatedCustomStyles","placeholderStyle","fontSize","placeholderFontSize","formClassName","autoComplete","bind","onKeyUp","placeholder","inputCaptionClassName","searchcraftInputCaptionModuleCss","SearchcraftInputCaptionStyle0","SearchcraftInputCaption","searchcraftInputIconModuleCss","SearchcraftInputIconStyle0","SearchcraftInputIcon","searchcraftInputLabelModuleCss","SearchcraftInputLabelStyle0","SearchcraftInputLabel","labelStyle","inputLabelClassName","htmlFor","searchcraftResultsInfoModuleCss","SearchcraftResultsInfoStyle0","SearchcraftResultsInfo","responseTime","time_taken","toFixed","formattedResults","formatNumberWithCommas","SearchcraftSearchIconSet","searchcraftSliderModuleCss","SearchcraftSliderStyle0","YearRangeSlider","updateYears","setYearsRange","startYear","endYear","getFullYear","maxYear","minYear","handleStartChange","parseInt","handleEndChange","rangeMin","rangeMax","startPercent","endPercent","left","max","min","onInput","searchcraftToggleButtonModuleCss","SearchcraftToggleButtonStyle0","SearchcraftToggleButton","isActive","setSearchParams","mode","sort","handleToggle","toggleContainerStyle","toggleSwitchStyle"],"sources":["src/components/searchcraft-auto-search-form/searchcraft-auto-search-form.module.scss?tag=searchcraft-auto-search-form","src/components/searchcraft-auto-search-form/searchcraft-auto-search-form.tsx","src/components/searchcraft-base-search-result/searchcraft-base-search-result.module.scss?tag=searchcraft-base-search-result","src/components/searchcraft-base-search-result/searchcraft-base-search-result.tsx","src/components/searchcraft-base-search-results/searchcraft-base-search-results.module.scss?tag=searchcraft-base-search-results","src/components/searchcraft-base-search-results/searchcraft-base-search-results.tsx","src/assets/searchcraft-check-icon.tsx","src/assets/searchcraft-clear-icon-set.tsx","src/components/searchcraft-clear-input-button/searchcraft-clear-input-button.module.scss?tag=searchcraft-clear-input-button","src/components/searchcraft-clear-input-button/searchcraft-clear-input-button.tsx","src/assets/searchcraft-dash-icon.tsx","src/components/searchcraft-error-message/searchcraft-error-message.module.scss?tag=searchcraft-error-message","src/components/searchcraft-error-message/searchcraft-error-message.tsx","src/components/searchcraft-filters-list/searchcraft-filters-list.module.scss?tag=searchcraft-filters-list","src/components/searchcraft-filters-list/searchcraft-filters-list.tsx","src/components/searchcraft-input/searchcraft-input.module.scss?tag=searchcraft-input","src/components/searchcraft-input/searchcraft-input.tsx","src/components/searchcraft-input-caption/searchcraft-input-caption.module.scss?tag=searchcraft-input-caption","src/components/searchcraft-input-caption/searchcraft-input-caption.tsx","src/components/searchcraft-input-icon/searchcraft-input-icon.module.scss?tag=searchcraft-input-icon","src/components/searchcraft-input-icon/searchcraft-input-icon.tsx","src/components/searchcraft-input-label/searchcraft-input-label.module.scss?tag=searchcraft-input-label","src/components/searchcraft-input-label/searchcraft-input-label.tsx","src/components/searchcraft-results-info/searchcraft-results-info.module.scss?tag=searchcraft-results-info","src/components/searchcraft-results-info/searchcraft-results-info.tsx","src/assets/searchcraft-search-icon-set.tsx","src/components/searchcraft-slider/searchcraft-slider.module.scss?tag=searchcraft-slider","src/components/searchcraft-slider/searchcraft-slider.tsx","src/components/searchcraft-toggle-button/searchcraft-toggle-button.module.scss?tag=searchcraft-toggle-button","src/components/searchcraft-toggle-button/searchcraft-toggle-button.tsx"],"sourcesContent":[":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.formLTR {\n  font-family: var(--font-stack);\n  text-align: left;\n  width: 100%;\n}\n\n.formRTL {\n  font-family: var(--font-stack);\n  text-align: right;\n  width: 100%;\n}","import {\n  Component,\n  Prop,\n  State,\n  Event,\n  type EventEmitter,\n  h,\n} from '@stencil/core';\nimport classNames from 'classnames';\n\nimport {\n  type CoreConfigSDK,\n  CoreSDK as SearchcraftCore,\n  type SearchcraftResponse,\n} from '@searchcraft/core';\n\nimport { useSearchcraftStore } from '@provider/store';\nimport { parseCustomStyles } from '@utils/utils';\nimport type { ScInputCustomEvent } from '@components/searchcraft-input/searchcraft-input';\n\n@Component({\n  tag: 'searchcraft-auto-search-form',\n  styleUrl: 'searchcraft-auto-search-form.module.scss',\n  shadow: false,\n})\nexport class SearchcraftAutoSearchForm {\n  @Prop() autoSearchFormClass = '';\n  @Prop() clearInput: () => void = () => {};\n  @Prop() config: CoreConfigSDK = {\n    apiKey: '',\n    endpointURL: '',\n    index: [],\n  };\n  @Prop() customStylesForInput: string | Record<string, string> = {};\n  @Prop() inputCaptionValue = '';\n  @Prop() inputIconHeight = 20;\n  @Prop() inputIconWidth = 20;\n  @Prop() labelForInput = '';\n  @Prop() placeholderValue = 'Search here';\n  @Prop() rightToLeftOrientation = false;\n  @Prop() searchContainerClass = '';\n\n  @Event() inputClearedOrNoResults: EventEmitter<void>;\n  @Event() querySubmit: EventEmitter<string>;\n\n  @State() error = false;\n  @State() isRequesting = false;\n  @State() query = '';\n  @State() searchResults: SearchcraftResponse | null = null;\n\n  private debounceTimeout: ReturnType<typeof setTimeout> | null = null;\n  private debounceDelay = 0;\n  private searchStore = useSearchcraftStore.getState();\n  unsubscribe: () => void;\n\n  componentDidLoad() {\n    const searchcraft = new SearchcraftCore(this.config);\n    this.searchStore.initialize(searchcraft, true);\n\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      this.isRequesting = state.isRequesting;\n      this.searchResults = { ...state.searchResults };\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  handleInputChange = (event: ScInputCustomEvent<string>) => {\n    this.query = event.detail;\n    this.searchStore.setQuery(this.query);\n    if (this.query.trim() === '') {\n      this.searchResults = null;\n      this.inputClearedOrNoResults.emit();\n      this.searchStore.setSearchResults(null);\n    }\n  };\n\n  handleInputKeyUp = (event: ScInputCustomEvent<string>) => {\n    const target = event.detail;\n    if (target === this.query) {\n      return;\n    }\n    this.query = target;\n\n    if (this.debounceTimeout) {\n      clearTimeout(this.debounceTimeout);\n    }\n\n    this.debounceTimeout = setTimeout(() => {\n      if (this.query.trim() === '') {\n        this.searchResults = null;\n        this.searchStore.setSearchResults(null);\n        this.inputClearedOrNoResults.emit();\n      } else {\n        this.searchStore.setQuery(this.query);\n        this.querySubmit.emit(this.query);\n        this.runSearch();\n      }\n    }, this.debounceDelay);\n  };\n\n  handleClearInput = () => {\n    if (this.query === '' && !this.searchResults) {\n      return;\n    }\n    this.query = '';\n    this.searchResults = null;\n    this.searchStore.setQuery('');\n    this.searchStore.setSearchResults(null);\n\n    if (typeof this.clearInput === 'function') {\n      this.clearInput();\n    }\n\n    if (this.debounceTimeout) {\n      clearTimeout(this.debounceTimeout);\n    }\n\n    this.error = false;\n    this.inputClearedOrNoResults.emit();\n  };\n\n  private runSearch = async () => {\n    if (this.query.trim() === '') {\n      this.error = true;\n      this.inputClearedOrNoResults.emit();\n    } else {\n      this.error = false;\n      this.searchStore.setQuery(this.query);\n      this.searchStore.setSelectedFilters([]);\n\n      try {\n        await this.searchStore.search();\n      } catch (error) {\n        this.error = true;\n        this.inputClearedOrNoResults.emit();\n      }\n    }\n  };\n\n  handleFormSubmit = async (event: Event) => {\n    event.preventDefault();\n    await this.runSearch();\n  };\n\n  render() {\n    const formClass = this.rightToLeftOrientation ? 'formRTL' : 'formLTR';\n    const parsedCustomStyles = parseCustomStyles(this.customStylesForInput);\n    return (\n      <form\n        class={classNames(`${formClass}`, 'searchcraft-auto-search-form')}\n        onSubmit={this.handleFormSubmit}\n      >\n        <searchcraft-input-label label={this.labelForInput} />\n        <searchcraft-input\n          customStyles={parsedCustomStyles}\n          input-caption-value={this.inputCaptionValue}\n          input-icon-height={this.inputIconHeight}\n          input-icon-width={this.inputIconWidth}\n          is-requesting={this.isRequesting}\n          onClearInput={this.handleClearInput}\n          onInputKeyUp={this.handleInputKeyUp}\n          onSearchInputChange={this.handleInputChange}\n          placeholder-value={this.placeholderValue}\n          query={this.query}\n          right-to-left-orientation={this.rightToLeftOrientation}\n        />\n        {this.error && (\n          <searchcraft-error-message errorMessage='Please enter a search query.' />\n        )}\n      </form>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin interactive-result-container-base {\n  align-items: flex-start;\n  border-radius: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 8px;\n  position: relative;\n\n  @media (min-width: 900px) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n}\n\n.interactiveResultContainerLight {\n  @include interactive-result-container-base;\n  background-color: $surface-primary-active;\n}\n\n.interactiveResultContainerDark {\n  @include interactive-result-container-base;\n  background-color: $surface-brand-primary-hover;\n}\n\n.resultContainer {\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  all: unset;\n  display: inline;\n  color: inherit;\n  text-decoration: none;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  @media (min-width: 900px) {\n    flex-direction: row;\n  }\n}\n\n.interactiveIconLarge {\n  display: inline-block;\n  position: absolute;\n  right: 5px;\n  top: 8px;\n\n\n  @media (max-width: 900px) {\n    display: none;\n  }\n}\n\n.interactiveIconSmall {\n  display: inline-block;\n  position: absolute;\n  right: 5px;\n  top: -2px;\n\n\n  @media (min-width: 900px) {\n   display: none;\n  }\n}\n\n.imageContainer {\n  max-width: 100%;\n\n  @media (min-width: 900px) {\n    max-width: 400px;\n   }\n}\n\n.contentContainer {\n  max-height: 100%;\n  max-width: 100%;\n\n  @media (min-width: 900px) {\n    max-width: 50%;\n  }\n}\n\n.secondaryContentContainer {\n  display: flex;\n\n}\n\n@mixin image-base {\n  border-radius: 8px;\n  max-height: 100%;\n  max-width: 100%;\n}\n\n.imageLight {\n  @include image-base;\n}\n\n.imageDark {\n  @include image-base;\n\n}\n\n@mixin title-base {\n  font-family: var(--font-stack);\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 20px;\n  margin-bottom: 4px;\n  margin-top: 0;\n  position: relative;\n  -webkit-font-smoothing: antialiased;\n}\n\n.titleLight {\n  @include title-base;\n  color: $content-primary;\n}\n\n.titleDark {\n  @include title-base;\n  color: $content-on-brand-primary;\n}\n\n@mixin subtitle-base {\n  font-family: var(--font-stack);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-bottom: 4px;\n  margin-top: 0px;\n  -webkit-font-smoothing: antialiased;\n}\n\n.subtitleContentLight {\n  @include subtitle-base;\n  color: $content-disabled;\n}\n\n.subtitleContentDark {\n  @include subtitle-base;\n  color: $content-disabled-secondary;\n}\n\n@mixin body-content-base {\n  font-family: var(--font-stack);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 20px;\n  margin-bottom: 4px;\n  margin-top: 0px;\n  -webkit-font-smoothing: antialiased;\n}\n\n.primaryContentLight {\n  @include body-content-base;\n  color: $surface-success-secondary;\n}\n\n.primaryContentDark {\n  @include body-content-base;\n  color: $border-primary;\n}\n\n.secondaryContentLight {\n  @include body-content-base;\n  color: $surface-success-secondary;\n}\n\n.secondaryContentDark {\n  @include body-content-base;\n  color: $border-primary;\n}\n\n.tertiaryContentLight {\n  @include body-content-base;\n  color: $surface-success-secondary;\n}\n\n.tertiaryContentLight.hasContent::before {\n  color: $surface-success-secondary;\n  content: \"•\";\n  font-size: 10px;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n\n.tertiaryContentDark {\n  @include body-content-base;\n  color: $border-primary;\n}\n\n.tertiaryContentDark.hasContent::before {\n  color: $surface-success-secondary;\n  content: \"•\";\n  font-size: 10px;\n  margin-left: 5px;\n  margin-right: 5px;\n}","import { Component, Event, Fragment, h, Prop } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-base-search-result',\n  styleUrl: 'searchcraft-base-search-result.module.scss',\n  shadow: false,\n})\nexport class SearchcraftBaseSearchResult {\n  @Prop() buttonText = '';\n  @Prop() customStyles = '{}';\n  @Prop() titleContent = '';\n  @Prop() imageDescription = '';\n  @Prop() imageSource = '';\n  @Prop() isInteractive = false;\n  @Prop() linkHref = '';\n  @Prop() primaryContent = '';\n  @Prop() secondaryContent = '';\n  @Prop() subtitleContent = '';\n  @Prop() tertiaryContent = '';\n  @Prop() themeMode: 'light' | 'dark' = 'light';\n  @Prop() placeImageRight = false;\n\n  @Event() buttonCallback: () => void = () => {};\n  @Event() keyDownCallback: () => void = () => {};\n  @Event() resultCallback: () => void = () => {};\n\n  private handleButtonClick = () => {\n    this.buttonCallback();\n  };\n\n  private parseStyles = (): Record<string, { [key: string]: string }> => {\n    try {\n      return JSON.parse(this.customStyles);\n    } catch (error) {\n      console.error('Error parsing custom styles:', error);\n      return {};\n    }\n  };\n\n  render() {\n    const isLightTheme = this.themeMode === 'light';\n    const styles = this.parseStyles();\n    const imageStyle = isLightTheme ? 'imageLight' : 'imageDark';\n    const imageContainer = this.imageSource && (\n      <div\n        class={classNames(\n          'imageContainer',\n          'searchcraft-base-search-result-image-container',\n        )}\n      >\n        <img\n          alt={this.imageDescription}\n          class={classNames(imageStyle, 'searchcraft-search-result-image')}\n          src={this.imageSource}\n          style={styles.image || {}}\n        />\n      </div>\n    );\n\n    const contentContainer = (\n      <div\n        class={classNames(\n          'contentContainer',\n          'searchcraft-base-search-result-content-container',\n        )}\n      >\n        <h2\n          class={classNames(\n            isLightTheme ? 'titleLight' : 'titleDark',\n            'searchcraft-base-search-result-title',\n          )}\n          style={styles.title || {}}\n        >\n          {this.titleContent}\n        </h2>\n        <h3\n          class={classNames(\n            isLightTheme ? 'subtitleContentLight' : 'subtitleContentDark',\n            'searchcraft-base-search-result-subtitle',\n          )}\n          style={styles.subtitle || {}}\n        >\n          {this.subtitleContent}\n        </h3>\n        <p\n          class={classNames(\n            isLightTheme ? 'primaryContentLight' : 'primaryContentDark',\n            'searchcraft-base-search-result-primary-content',\n          )}\n          style={styles.primaryContent || {}}\n        >\n          {this.primaryContent}\n        </p>\n        <div\n          class={classNames(\n            'secondaryContentContainer',\n            'searchcraft-base-search-result-secondary-content-container',\n          )}\n        >\n          <p\n            class={classNames(\n              isLightTheme ? 'secondaryContentLight' : 'secondaryContentDark',\n              'searchcraft-base-search-result-secondary-content',\n            )}\n            style={styles.secondaryContent || {}}\n          >\n            {this.secondaryContent}\n          </p>\n          <p\n            class={classNames(\n              `${isLightTheme ? 'tertiaryContentLight' : 'tertiaryContentDark'}${this.tertiaryContent ? ' hasContent' : ''}`,\n              'searchcraft-base-search-result-tertiary-content',\n            )}\n            style={styles.tertiaryContent || {}}\n          >\n            {this.tertiaryContent}\n          </p>\n        </div>\n        {this.buttonText && (\n          <button\n            onClick={this.handleButtonClick}\n            style={styles.button || {}}\n            type='button'\n          >\n            {this.buttonText}\n          </button>\n        )}\n      </div>\n    );\n\n    return (\n      <a\n        class={classNames(\n          this.isInteractive\n            ? isLightTheme\n              ? 'interactiveResultContainerLight'\n              : 'interactiveResultContainerDark'\n            : 'resultContainer',\n          'searchcraft-search-result-container',\n        )}\n        onKeyDown={this.keyDownCallback}\n        href={this.linkHref}\n        rel='noreferrer'\n        style={styles.container || {}}\n        tabindex='0'\n        target='_blank'\n      >\n        {this.placeImageRight ? (\n          <Fragment>\n            {contentContainer}\n            {imageContainer}\n          </Fragment>\n        ) : (\n          <Fragment>\n            {imageContainer}\n            {contentContainer}\n          </Fragment>\n        )}\n      </a>\n    );\n  }\n}\n",":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.resultsContainer {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 16px 0;\n\n  & > p {\n    align-self: center;\n  }\n\n  & > div {\n    margin-bottom: 20px;\n    img {\n      height: 300px;\n      width: 200px;\n    }\n  }\n}\n\n.adSection {\n  align-items: center;\n  background-color: #F1F1F1;\n  border: 1px solid #DCDDDE;\n  border-radius: 16px;\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  justify-content: center;\n  margin: auto;\n  min-height: 150px;\n  text-align: center;\n  width: 100%;\n\n  p {\n    margin-top: 5px;\n  }\n}\n\n.emptyState {\n  text-align: center;\n  width: 100%;\n}\n\n.errorMessageContainer {\n  text-align: center;\n}\n","import {\n  Component,\n  h,\n  Event,\n  Prop,\n  State,\n  type EventEmitter,\n} from '@stencil/core';\nimport classNames from 'classnames';\n\nimport type { SearchcraftResponse } from '@searchcraft/core';\n\nimport { useSearchcraftStore } from '@provider/store';\n\nimport {\n  extractDynamicProperties,\n  getFormattedTimeFromNow,\n  parseSearchKeys,\n  serializeStyles,\n} from '@utils/utils';\n\n@Component({\n  tag: 'searchcraft-base-search-results',\n  styleUrl: 'searchcraft-base-search-results.module.scss',\n  shadow: false,\n})\nexport class SearchcraftBaseSearchResults {\n  @Prop() adInterval = 4;\n  @Prop() customStylesForResults:\n    | string\n    | Record<string, Record<string, string>> = {};\n  @Prop() documentAttributesForDisplay = '';\n  @Prop() fallbackElement: HTMLElement | null = null;\n  @Prop() formatTime = true;\n  @Prop() placeAdAtEnd = false;\n  @Prop() placeAdAtStart = true;\n  @Prop() placeResultImageRight = false;\n  @Prop() isInteractive = false;\n\n  @Event() noResults: EventEmitter<void>;\n\n  @State() hasSearched = false;\n  @State() query = '';\n  @State() searchResults: SearchcraftResponse | null = null;\n\n  private unsubscribe: () => void;\n\n  componentDidLoad() {\n    if (\n      !this.documentAttributesForDisplay ||\n      this.documentAttributesForDisplay.length === 0\n    ) {\n      console.warn('No document attributes provided; using empty keys array.');\n      this.documentAttributesForDisplay = '';\n    }\n\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      if (state.query.length > 0) {\n        this.hasSearched = true;\n      } else {\n        this.hasSearched = false;\n      }\n      this.searchResults = { ...state.searchResults };\n      this.query = state.query;\n    });\n\n    const { searchResults, query } = useSearchcraftStore.getState();\n    this.searchResults = searchResults;\n    this.query = query;\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  render() {\n    if (!this.hasSearched) {\n      return (\n        <div\n          class={classNames(\n            'emptyState',\n            'searchcraft-search-results-empty-state-container',\n          )}\n        >\n          <slot name='empty-search' />\n        </div>\n      );\n    }\n\n    if (!this.searchResults?.data) {\n      return;\n    }\n\n    const parsedSearchKeys = parseSearchKeys(this.documentAttributesForDisplay);\n    const serializedStyles =\n      typeof this.customStylesForResults === 'string'\n        ? this.customStylesForResults\n        : serializeStyles(this.customStylesForResults);\n\n    const resultsComponents = this.searchResults?.data?.hits?.map(\n      (document, index) => {\n        const { doc: result } = document;\n        const dynamicProperties = extractDynamicProperties(\n          result,\n          parsedSearchKeys,\n        );\n\n        if (this.formatTime) {\n          for (const key of parsedSearchKeys) {\n            if (dynamicProperties[key]) {\n              const value = dynamicProperties[key];\n              if (\n                typeof value === 'string' &&\n                !Number.isNaN(Date.parse(value))\n              ) {\n                dynamicProperties[key] = getFormattedTimeFromNow(value);\n              }\n            }\n          }\n        }\n\n        return (\n          <searchcraft-base-search-result\n            button-callback={() => console.log('button callback')}\n            custom-styles={serializedStyles}\n            image-source={dynamicProperties[parsedSearchKeys[5]]}\n            is-interactive={this.isInteractive}\n            key={`${document.document_id}-${index}`}\n            keydown-callback={() => console.log('keydown')}\n            linkHref={dynamicProperties[parsedSearchKeys[6]] as string}\n            place-image-right={this.placeResultImageRight}\n            primary-content={dynamicProperties[parsedSearchKeys[2]]}\n            result-callback={() => console.log('interactive element')}\n            secondary-content={dynamicProperties[parsedSearchKeys[3]]}\n            subtitle-content={dynamicProperties[parsedSearchKeys[1]]}\n            tertiary-content={dynamicProperties[parsedSearchKeys[4]]}\n            title-content={dynamicProperties[parsedSearchKeys[0]]}\n          />\n        );\n      },\n    );\n\n    const finalComponents: JSX.Element[] = [];\n\n    if (this.placeAdAtStart) {\n      finalComponents.push(\n        <div\n          key='ad-section-start'\n          class={classNames(\n            'adSection',\n            'searchcraft-beginning-injected-ad-section',\n          )}\n        >\n          <span>##</span>\n          <p> Ad Impressions</p>\n        </div>,\n      );\n    }\n\n    if (this.adInterval > 0) {\n      resultsComponents.forEach((component, index) => {\n        finalComponents.push(component);\n        if ((index + 1) % this.adInterval === 0) {\n          finalComponents.push(\n            <div\n              key={`ad-section-${index + 1}`}\n              class={classNames(\n                'adSection',\n                'searchcraft-dynamic-injected-ad-section',\n              )}\n            >\n              <span>##</span>\n              <p> Ad Impressions</p>\n            </div>,\n          );\n        }\n      });\n    } else {\n      finalComponents.push(...resultsComponents);\n    }\n\n    if (this.placeAdAtEnd) {\n      finalComponents.push(\n        <div\n          key='ad-section-end'\n          class={classNames('adSection', 'searchcraft-end-injected-ad-section')}\n        >\n          <span>##</span>\n          <p> Ad Impressions</p>\n        </div>,\n      );\n    }\n\n    if (this.query.length > 0 && this.searchResults?.data?.hits?.length === 0) {\n      this.noResults.emit();\n    }\n\n    return (\n      <div\n        class={classNames(\n          'resultsContainer',\n          'searchcraft-search-results-container',\n        )}\n      >\n        {finalComponents}\n        {this.query.length > 0 &&\n          this.searchResults?.data?.hits?.length === 0 && (\n            <div\n              class={classNames(\n                'errorMessageContainer',\n                'searchcraft-search-results-error-message-container',\n              )}\n            >\n              <searchcraft-error-message\n                error-message={`No search results found for \"${this.query}\" query`}\n              />\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-check-icon',\n  shadow: true,\n})\nexport class SearchcraftCheckIcon {\n  render() {\n    return (\n      <svg width='16' height='16' viewBox='0 0 16 16' fill='none'>\n        <title>Checkbox Check</title>\n        <path\n          d='M13.9999 2L5.74988 10L1.99988 6.36364'\n          stroke='white'\n          stroke-width='3'\n          stroke-linecap='round'\n          stroke-linejoin='round'\n        />\n      </svg>\n    );\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-clear-icon-set',\n  shadow: true,\n})\nexport class SearchcraftClearIconSet {\n  /**\n   * Type of the icon to display.\n   * Options: 'clear-light', 'clear-dark', 'arrow-light', 'arrow-dark'\n   */\n  @Prop() type: 'clear-light' | 'clear-dark' | 'arrow-light' | 'arrow-dark' =\n    'clear-light';\n\n  render() {\n    switch (this.type) {\n      case 'clear-light':\n        return (\n          <svg\n            width='22'\n            height='22'\n            viewBox='0 0 22 22'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='icon-title'\n          >\n            <title id='icon-title'>Searchcraft Clear Input Icon Light</title>\n            <path\n              d='M14 8L8 14M8 8L14 14M21 11C21 16.5228 16.5228 21 11 21C5.47715 21 1 16.5228 1 11C1 5.47715 5.47715 1 11 1C16.5228 1 21 5.47715 21 11Z'\n              stroke='black'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'clear-dark':\n        return (\n          <svg\n            width='22'\n            height='22'\n            viewBox='0 0 22 22'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='icon-title'\n          >\n            <title id='icon-title'>Searchcraft Clear Input Icon Dark</title>\n            <path\n              d='M14 8L8 14M8 8L14 14M21 11C21 16.5228 16.5228 21 11 21C5.47715 21 1 16.5228 1 11C1 5.47715 5.47715 1 11 1C16.5228 1 21 5.47715 21 11Z'\n              stroke='white'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'arrow-light':\n        return (\n          <svg\n            width='20'\n            height='21'\n            viewBox='0 0 20 21'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='icon-title'\n          >\n            <title id='icon-title'>Searchcraft Arrow Right Icon Light</title>\n            <path\n              d='M7.5 15.0444L12.5 10.0444L7.5 5.04443'\n              stroke='#737373'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'arrow-dark':\n        return (\n          <svg\n            width='8'\n            height='12'\n            viewBox='0 0 8 12'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='icon-title'\n          >\n            <title id='icon-title'>Searchcraft Arrow Right Icon Dark</title>\n            <path\n              d='M1.5 11L6.5 6L1.5 1'\n              stroke='#BFBFBF'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n\n      default:\n        return null;\n    }\n  }\n}\n",":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.inputClearButtonLTR {\n  align-items: center;\n  background: none;\n  border: none;\n  display: flex;\n  height: 20px;\n  justify-content: center;\n  padding: 0;\n  position: absolute;\n  right: 16px;\n  top: 52%;\n  transform: translateY(-50%);\n  width: 20px;\n}\n\n.inputClearButtonRTL {\n  align-items: center;\n  background: none;\n  border: none;\n  display: flex;\n  height: 20px;\n  justify-content: center;\n  left: 0px;\n  padding: 0;\n  position: absolute;\n  top: 52%;\n  transform: translateY(-50%);\n  width: 20px;\n}","import {\n  Component,\n  Event,\n  type EventEmitter,\n  Prop,\n  h,\n  State,\n} from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-clear-input-button',\n  styleUrl: 'searchcraft-clear-input-button.module.scss',\n  shadow: false,\n})\nexport class SearchcraftClearInputButton {\n  @Prop() isRequesting? = false;\n  @Prop() rightToLeftOrientation = false;\n\n  @Event() clearInput: EventEmitter<void>;\n\n  @State() theme = 'light';\n\n  private isLightTheme = () => {\n    return this.theme === 'light';\n  };\n\n  private handleClearClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.clearInput.emit();\n  };\n\n  render() {\n    return this.rightToLeftOrientation ? (\n      <button\n        class={classNames(\n          'inputClearButtonRTL',\n          'searchcraft-clear-input-button-rtl',\n        )}\n        onClick={this.handleClearClick}\n        type='button'\n      >\n        {this.isLightTheme ? (\n          <searchcraft-clear-icon-set type='clear-light' />\n        ) : (\n          <searchcraft-clear-icon-set type='clear-dark' />\n        )}\n      </button>\n    ) : (\n      <button\n        class={classNames(\n          'inputClearButtonLTR',\n          'searchcraft-clear-input-button-ltr',\n        )}\n        onClick={this.handleClearClick}\n        type='button'\n      >\n        {this.isLightTheme ? (\n          <searchcraft-clear-icon-set type='clear-light' />\n        ) : (\n          <searchcraft-clear-icon-set type='clear-dark' />\n        )}\n      </button>\n    );\n  }\n}\n","import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-dash-icon',\n  shadow: true,\n})\nexport class SearchcraftDashIcon {\n  render() {\n    return (\n      <svg width='14' height='3' viewBox='0 0 14 3' fill='none'>\n        <title>Checkbox Dash</title>\n        <line\n          x1='1.5'\n          y1='1.5'\n          x2='12.5'\n          y2='1.5'\n          stroke='white'\n          stroke-width='3'\n          stroke-linecap='round'\n        />\n      </svg>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin error-message-base {\n  font-family: var(--font-stack);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-top: 4px;\n}\n\n.errorMessageLight {\n  @include error-message-base;\n  color: $content-danger;\n}\n\n.errorMessageDark {\n  @include error-message-base;\n  color: $surface-danger-secondary-active;\n}","import { Component, Prop, h } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-error-message',\n  styleUrl: 'searchcraft-error-message.module.scss',\n  shadow: false,\n})\nexport class SearchcraftErrorMessage {\n  @Prop() errorMessage?: string;\n  @Prop() theme: 'light' | 'dark' = 'light';\n\n  render() {\n    const errorMessageStyle =\n      this.theme === 'light' ? 'errorMessageLight' : 'errorMessageDark';\n\n    return (\n      <p class={classNames(errorMessageStyle, 'searchcraft-error-message')}>\n        {this.errorMessage || 'Search term is required.'}\n      </p>\n    );\n  }\n}\n",":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.filtersListContainer {\n  width: 100%;\n}\n\n.filterCheckboxLabel {\n  align-items: center;\n  color: $content-primary;\n  display: flex;\n  font-family: var(--font-stack);\n  font-size: 14px;\n  font-weight: 600;\n  gap: 14px;\n  position: relative;\n  -webkit-font-smoothing: antialiased;\n}\n\n.filterCheckboxLabel input[type=\"checkbox\"] {\n  align-items: center;\n  appearance: none;\n  background-color: $surface-brand-secondary-hover;\n  border: 1px solid $surface-disabled;\n  border-radius: 8px;\n  cursor: pointer;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  width: 24px;\n}\n\n.filterCheckboxLabel input[type=\"checkbox\"]:focus {\n  outline: 2px solid $surface-brand-primary;\n}\n\n.filterCheckboxLabel input[type=\"checkbox\"]:checked {\n  background-color: $surface-brand-primary;\n  position: relative;\n}\n\n.filterCheckboxLabel input[type=\"checkbox\"]:checked + .checkContainer {\n  display: block;\n}\n\n.filterCheckboxLabel input[type=\"checkbox\"]:checked + .dashContainer {\n  display: block;\n}\n\n.childFilterCheckboxLabel {\n  align-items: center;\n  color: $content-primary;\n  display: flex;\n  font-family: var(--font-stack);\n  font-size: 14px;\n  font-weight: 600;\n  gap: 12px;\n  margin-left: 24px;\n  position: relative;\n}\n\n.childFilterCheckboxLabel input[type=\"checkbox\"] {\n  align-items: center;\n  appearance: none;\n  background-color: $surface-brand-secondary-hover;\n  border: 1px solid $surface-disabled;\n  border-radius: 8px;\n  cursor: pointer;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  position: relative;\n  width: 24px;\n  -webkit-font-smoothing: antialiased;\n}\n\n.childFilterCheckboxLabel input[type=\"checkbox\"]:focus {\n  outline: 2px solid $surface-brand-primary;\n}\n\n.childFilterCheckboxLabel input[type=\"checkbox\"]:checked {\n  background-color: $surface-brand-primary;\n  position: relative;\n}\n\n.childFilterCheckboxLabel input[type=\"checkbox\"]:checked + .checkContainer {\n  display: block;\n}\n\n.childFilterCheckboxLabel input[type=\"checkbox\"]:checked + .dashContainer {\n  display: block;\n}\n\n.checkContainer {\n  display: none;\n  height: 16px;\n  width: 16px;\n  position: absolute;\n  top: 9px;\n  left: 8px;\n}\n\n.dashContainer {\n  display: none;\n  height: 3px;\n  width: 14px;\n  position: absolute;\n  top: 3px;\n  left: 9px;\n}","import {\n  Component,\n  h,\n  State,\n  Prop,\n  Event,\n  type EventEmitter,\n  Fragment,\n} from '@stencil/core';\nimport classNames from 'classnames';\n\nimport type { Facets } from '@searchcraft/core';\n\nimport { useSearchcraftStore } from '@provider/store';\n\nimport { flattenFacets } from '@utils/utils';\n\n@Component({\n  tag: 'searchcraft-filters-list',\n  styleUrl: 'searchcraft-filters-list.module.scss',\n  shadow: false,\n})\nexport class SearchcraftFiltersList {\n  @Prop() filters: Array<{ label: string; value: string }> = [];\n\n  @Event() filtersUpdated: EventEmitter<string[]>;\n\n  @State() dynamicFilters: Array<{\n    label: string;\n    value: string;\n    count: number;\n    children?: Array<{\n      label: string;\n      value: string;\n      count: number;\n    }>;\n  }> = [];\n  @State() selectedFilters: string[] = [];\n  @State() query = '';\n  @State() isRequesting = false;\n  @State() resultsCount = 0;\n\n  private searchStore = useSearchcraftStore.getState();\n  private autoSearchFormElement: HTMLElement | null = null;\n  unsubscribe: () => void;\n\n  connectedCallback() {\n    const state = this.searchStore;\n    const facets = state.searchResults?.data.facets;\n\n    if (facets) {\n      this.populateFiltersFromFacets(facets);\n    }\n\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      const query = state.query?.trim();\n      const facets = state.searchResults?.data.facets;\n      this.query = query || '';\n      this.isRequesting = state.isRequesting;\n      this.resultsCount = state.searchResults?.data?.hits?.length || 0;\n\n      if (facets && this.selectedFilters.length === 0) {\n        this.populateFiltersFromFacets(facets);\n      }\n    });\n\n    this.autoSearchFormElement = document.querySelector(\n      'searchcraft-auto-search-form',\n    );\n    if (this.autoSearchFormElement) {\n      this.autoSearchFormElement.addEventListener(\n        'querySubmit',\n        this.handleSearchRequest,\n      );\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n\n    if (this.autoSearchFormElement) {\n      this.autoSearchFormElement.removeEventListener(\n        'querySubmit',\n        this.handleSearchRequest,\n      );\n    }\n  }\n\n  handleSearchRequest = () => {\n    this.selectedFilters = [];\n    this.searchStore.setSelectedFilters([]);\n    this.emitFiltersUpdate();\n  };\n\n  populateFiltersFromFacets(facets: Facets) {\n    const flattened = flattenFacets(facets[0]?.section || []);\n    this.dynamicFilters = flattened.map((filter) => ({\n      label: filter.label,\n      value: filter.value,\n      count: filter.count,\n      children: filter.children || [],\n    }));\n  }\n\n  handleCheckboxChange(value: string, isChecked: boolean, isParent = false) {\n    if (isParent) {\n      const parentFilter = this.dynamicFilters.find(\n        (filter) => filter.value === value,\n      );\n      const childValues =\n        parentFilter?.children?.map((child) => child.value) || [];\n\n      if (!isChecked) {\n        this.selectedFilters = this.selectedFilters.filter(\n          (filter) => filter !== value && !childValues.includes(filter),\n        );\n      } else {\n        this.selectedFilters = [...this.selectedFilters, value];\n      }\n    } else {\n      this.selectedFilters = isChecked\n        ? [...this.selectedFilters, value]\n        : this.selectedFilters.filter((filter) => filter !== value);\n    }\n    this.emitFiltersUpdate();\n  }\n\n  emitFiltersUpdate() {\n    this.filtersUpdated.emit(this.selectedFilters);\n    this.searchStore.setSelectedFilters(this.selectedFilters);\n    this.searchStore.search();\n  }\n\n  formatLabel = (label: string, count: number): string =>\n    `${label.replace(/-/g, ' ').replace(/\\b\\w/g, (char) => char.toUpperCase())} (${count})`;\n\n  render() {\n    if (!this.query || this.resultsCount === 0) {\n      return null;\n    }\n    return (\n      <div\n        class={classNames(\n          'filtersListContainer',\n          'searchcraft-filters-list-container',\n        )}\n      >\n        {this.dynamicFilters.map((filter) => {\n          const isChildSelected = filter.children\n            ? filter.children.some((child) =>\n                this.selectedFilters.includes(child.value),\n              )\n            : false;\n\n          return (\n            <div\n              key={filter.value}\n              class={classNames('searchcraft-filters-list-item')}\n            >\n              <label\n                class={classNames(\n                  'filterCheckboxLabel',\n                  'searchcraft-filters-list-checkbox-label',\n                )}\n              >\n                <input\n                  checked={this.selectedFilters.includes(filter.value)}\n                  onChange={(event: Event) =>\n                    this.handleCheckboxChange(\n                      filter.value,\n                      (event.target as HTMLInputElement).checked,\n                      true,\n                    )\n                  }\n                  type='checkbox'\n                />\n                {isChildSelected ? (\n                  <div\n                    class={classNames(\n                      'dashContainer',\n                      'searchcraft-filter-list-dash-container',\n                    )}\n                  >\n                    <searchcraft-dash-icon />\n                  </div>\n                ) : (\n                  <div\n                    class={classNames(\n                      'checkContainer',\n                      'searchcraft-filter-list-check-container',\n                    )}\n                  >\n                    <searchcraft-check-icon />\n                  </div>\n                )}\n                {this.formatLabel(filter.label, filter.count)}\n              </label>\n              {filter.children && filter.children.length > 0 && (\n                <Fragment>\n                  {filter.children.map((child) => (\n                    <label\n                      key={child.value}\n                      class={classNames(\n                        'childFilterCheckboxLabel',\n                        'searchcraft-child-filter-checkbox-label',\n                      )}\n                      style={{\n                        display: this.selectedFilters.includes(filter.value)\n                          ? 'flex'\n                          : 'none',\n                      }}\n                    >\n                      <input\n                        checked={this.selectedFilters.includes(child.value)}\n                        onChange={(event: Event) =>\n                          this.handleCheckboxChange(\n                            child.value,\n                            (event.target as HTMLInputElement).checked,\n                          )\n                        }\n                        type='checkbox'\n                      />\n                      <div\n                        class={classNames(\n                          'checkContainer',\n                          'searchcraft-filter-list-check-container',\n                        )}\n                      >\n                        <searchcraft-check-icon />\n                      </div>\n                      {this.formatLabel(\n                        child.label.includes('/')\n                          ? child.label.split('/').pop() || child.label\n                          : child.label,\n                        child.count,\n                      )}\n                    </label>\n                  ))}\n                </Fragment>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin input-container-base {\n  position: relative;\n  width: 100%;\n}\n\n@mixin input-base {\n  border: none;\n  border-radius: 8px;\n  font-family: var(--font-stack);\n  outline: none;\n  padding-bottom: 15px;\n  padding-top: 15px;\n\n  &::placeholder {\n    font-family: var(--font-stack);\n    font-size: 16px;\n    font-weight: 400;\n  }\n}\n\n@mixin input-base-light {\n  @include input-base;\n  background-color: $surface-secondary;\n  color: $content-primary;\n\n  &::placeholder {\n    color: $content-disabled;\n  }\n\n  &:focus {\n    outline: 2px solid $surface-brand-primary;\n  }\n}\n\n@mixin input-base-dark {\n  @include input-base;\n  background-color: $surface-middle-active;\n  color: $content-on-brand-primary;\n\n  &::placeholder {\n    color: $content-disabled-secondary;\n  }\n\n  &:focus {\n    outline: 2px solid $content-on-brand-primary;\n  }\n}\n\n@mixin input-error-base-light {\n  @include input-base-light;\n  outline: 2px solid $border-danger;\n\n  &:focus-visible {\n    outline: 2px solid $border-danger;\n  }\n}\n\n@mixin input-error-base-dark {\n  @include input-base-dark;\n  outline: 2px solid $surface-danger-secondary-active;\n\n  &:focus-visible {\n    outline: 2px solid $surface-danger-secondary-active;\n  }\n}\n\n.inputContainerLTR {\n  @include input-container-base;\n}\n\n.inputContainerRTL {\n  @include input-container-base;\n  margin-left: 8px;\n}\n\n@mixin align-LTR {\n  margin-right: 8px;\n  padding-left: 36px;\n  padding-right: 16px;\n}\n\n.inputLightLTR {\n  @include input-base-light;\n  @include align-LTR;\n}\n\n.inputDarkLTR {\n  @include input-base-dark;\n  @include align-LTR;\n}\n\n.inputErrorLightLTR {\n  @include input-error-base-light;\n  @include align-LTR;\n}\n\n.inputErrorDarkLTR {\n  @include input-error-base-dark;\n  @include align-LTR;\n}\n\n@mixin align-RTL {\n  margin-left: 8px;\n  padding-left: 16px;\n  padding-right: 36px;\n  text-align: right;\n}\n\n.inputLightRTL {\n  @include input-base-light;\n  @include align-RTL;\n}\n\n.inputDarkRTL {\n  @include input-base-dark;\n  @include align-RTL;\n}\n\n.inputErrorLightRTL {\n  @include input-error-base-light;\n  @include align-RTL;\n}\n\n.inputErrorDarkRTL {\n  @include input-error-base-dark;\n  @include align-RTL;\n}\n\n.inputWrapper {\n  align-items: center;\n  display: flex;\n  position: relative;\n  width: 100%;\n}\n","import {\n  Component,\n  h,\n  Prop,\n  State,\n  Event,\n  Fragment,\n  type EventEmitter,\n} from '@stencil/core';\nimport classNames from 'classnames';\n\nimport { parseCustomStyles } from '@utils/utils';\n\nexport interface ScInputCustomEvent<T> extends CustomEvent<T> {\n  detail: T;\n  target: HTMLSearchcraftInputElement;\n}\n\n@Component({\n  tag: 'searchcraft-input',\n  styleUrl: 'searchcraft-input.module.scss',\n  shadow: false,\n})\nexport class SearchcraftInput {\n  @Prop() customStyles: string | Record<string, string> = {};\n  @Prop() error = false;\n  @Prop() formClassName = '';\n  @Prop() inputCaptionClassName = '';\n  @Prop() inputCaptionValue = '';\n  @Prop() inputClassName = '';\n  @Prop() inputIconHeight = 20;\n  @Prop() inputIconWidth = 20;\n  @Prop() isRequesting = false;\n  @Prop() placeholderValue = 'Enter Search';\n  @Prop() rightToLeftOrientation = false;\n  @Prop() query = '';\n\n  @Event() clearInput: EventEmitter<void>;\n  @Event() searchInputChange: EventEmitter<string>;\n  @Event() inputKeyUp: EventEmitter<string>;\n\n  @State() theme = 'light';\n\n  private get isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  handleInputChange = (event: Event) => {\n    const input = event.target as HTMLInputElement;\n    this.searchInputChange.emit(input.value);\n  };\n\n  handleInputKeyUp = (event: KeyboardEvent) => {\n    const input = event.target as HTMLInputElement;\n    this.inputKeyUp.emit(input.value);\n  };\n\n  handleClearInput = () => {\n    if (this.query === '') {\n      return;\n    }\n    this.query = '';\n    if (this.clearInput) {\n      this.clearInput.emit();\n    }\n  };\n\n  render() {\n    const containerClassName = this.rightToLeftOrientation\n      ? 'inputContainerRTL'\n      : 'inputContainerLTR';\n\n    const inputClassName = this.error\n      ? this.isLightTheme\n        ? 'inputErrorLightRTL'\n        : 'inputErrorDarkRTL'\n      : this.isLightTheme\n        ? 'inputLightLTR'\n        : 'inputDarkLTR';\n\n    const validatedCustomStyles = parseCustomStyles(this.customStyles);\n\n    const placeholderStyle = {\n      fontSize: validatedCustomStyles.placeholderFontSize || '16px',\n    };\n    return (\n      <div\n        class={classNames(\n          containerClassName,\n          this.formClassName,\n          'searchcraft-input-form',\n        )}\n      >\n        {this.rightToLeftOrientation ? (\n          <Fragment>\n            <input\n              autoComplete='off'\n              class={classNames(inputClassName, 'searchcraft-input')}\n              id='searchcraft-input-id'\n              onChange={this.handleInputChange.bind(this)}\n              onKeyUp={this.handleInputKeyUp.bind(this)}\n              placeholder={this.placeholderValue}\n              style={validatedCustomStyles}\n              type='text'\n              value={this.query}\n            />\n            <style>\n              {`\n                #searchcraft-input-id::placeholder {\n                  font-size: ${placeholderStyle.fontSize};\n                }\n              `}\n            </style>\n            {this.inputCaptionValue && (\n              <searchcraft-input-caption\n                inputCaptionClassName={this.inputCaptionClassName}\n                inputCaptionValue={this.inputCaptionValue}\n                rightToLeftOrientation={this.rightToLeftOrientation}\n              />\n            )}\n            {this.query.length > 0 && (\n              <searchcraft-clear-input-button\n                isRequesting={this.isRequesting}\n                onClearInput={this.handleClearInput}\n                rightToLeftOrientation={this.rightToLeftOrientation}\n              />\n            )}\n            <searchcraft-input-icon\n              error={this.error}\n              height={this.inputIconHeight}\n              rightToLeftOrientation={this.rightToLeftOrientation}\n              width={this.inputIconWidth}\n            />\n          </Fragment>\n        ) : (\n          <Fragment>\n            <searchcraft-input-icon\n              error={this.error}\n              height={this.inputIconHeight}\n              rightToLeftOrientation={this.rightToLeftOrientation}\n              width={this.inputIconWidth}\n            />\n            <input\n              autoComplete='off'\n              class={classNames(inputClassName, 'searchcraft-input')}\n              id='searchcraft-input-id'\n              onChange={this.handleInputChange.bind(this)}\n              onKeyUp={this.handleInputKeyUp.bind(this)}\n              placeholder={this.placeholderValue}\n              type='text'\n              value={this.query}\n              style={validatedCustomStyles}\n            />\n            <style>\n              {`\n                #searchcraft-input-id::placeholder {\n                  font-size: ${placeholderStyle.fontSize};\n                }\n              `}\n            </style>\n            {this.inputCaptionValue && (\n              <searchcraft-input-caption\n                inputCaptionClassName={this.inputCaptionClassName}\n                inputCaptionValue={this.inputCaptionValue}\n                rightToLeftOrientation={this.rightToLeftOrientation}\n              />\n            )}\n            {this.query.length > 0 && (\n              <searchcraft-clear-input-button\n                isRequesting={this.isRequesting}\n                onClearInput={this.handleClearInput}\n                rightToLeftOrientation={this.rightToLeftOrientation}\n              />\n            )}\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin input-caption-base {\n  font-family: var(--font-stack);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-top: 4px;\n}\n\n@mixin input-caption-base-light {\n  @include input-caption-base;\n  color: $content-secondary;\n}\n\n@mixin input-caption-base-dark {\n  @include input-caption-base;\n  color: $border-primary;\n}\n\n.inputCaptionLightLTR {\n  @include input-caption-base-light;\n}\n\n.inputCaptionDarkLTR {\n  @include input-caption-base-dark;\n}\n\n.inputCaptionErrorLightLTR {\n  @include input-caption-base;\n  color: $content-danger;\n}\n\n.inputCaptionErrorDarkLTR {\n  @include input-caption-base;\n  color: $surface-danger-secondary-active;\n}\n\n.inputCaptionLightRTL {\n  @include input-caption-base-light;\n  text-align: right;\n}\n\n.inputCaptionDarkRTL {\n  @include input-caption-base-dark;\n  text-align: right;\n}\n\n.inputCaptionErrorLightRTL {\n  @include input-caption-base;\n  color: $content-danger;\n  text-align: right;\n}\n\n.inputCaptionErrorDarkRTL {\n  @include input-caption-base;\n  color: $surface-danger-secondary-active;\n  text-align: right;\n}","import { Component, Prop, h, State } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-input-caption',\n  styleUrl: 'searchcraft-input-caption.module.scss',\n  shadow: false,\n})\nexport class SearchcraftInputCaption {\n  @Prop() error?: boolean;\n  @Prop() inputCaptionClassName? = '';\n  @Prop() inputCaptionValue = 'Enter Search';\n  @Prop() rightToLeftOrientation = false;\n\n  @State() theme = 'light';\n\n  private isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  render() {\n    return this.rightToLeftOrientation ? (\n      <p\n        class={classNames(\n          this.error\n            ? this.isLightTheme\n              ? 'inputCaptionErrorLightRTL'\n              : 'inputCaptionErrorDarkRTL'\n            : this.isLightTheme\n              ? 'inputCaptionLightRTL'\n              : 'inputCaptionDarkRTL',\n          this.inputCaptionClassName,\n          'searchcraft-input-caption',\n        )}\n      >\n        {this.inputCaptionValue}\n      </p>\n    ) : (\n      <p\n        class={classNames(\n          this.error\n            ? this.isLightTheme\n              ? 'inputCaptionErrorLightLTR'\n              : 'inputCaptionErrorDarkLTR'\n            : this.isLightTheme\n              ? 'inputCaptionLightLTR'\n              : 'inputCaptionDarkLTR',\n          this.inputCaptionClassName,\n          'searchcraft-input-caption',\n        )}\n      >\n        {this.inputCaptionValue}\n      </p>\n    );\n  }\n}\n",":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.inputIconLTR {\n  left: 15px;\n  position: absolute;\n  top: 52%;\n  transform: translateY(-50%);\n}\n\n.inputIconRTL {\n  position: absolute;\n  right: 15px;\n  top: 52%;\n  transform: translateY(-50%);\n}","import { Component, Prop, h, State } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-input-icon',\n  styleUrl: 'searchcraft-input-icon.module.scss',\n  shadow: false,\n})\nexport class SearchcraftInputIcon {\n  @Prop() error?: boolean;\n  @Prop() height = 20;\n  @Prop() rightToLeftOrientation = false;\n  @Prop() width = 20;\n\n  @State() theme = 'light';\n\n  private isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  render() {\n    return this.error ? (\n      <div\n        class={classNames(\n          this.rightToLeftOrientation ? 'inputIconRTL' : 'inputIconLTR',\n          'searchcraft-input-icon-container',\n        )}\n      >\n        {this.isLightTheme() ? (\n          <searchcraft-search-icon-set\n            height={this.height}\n            type='error-light'\n            width={this.width}\n          />\n        ) : (\n          <searchcraft-search-icon-set\n            height={this.height}\n            type='error-dark'\n            width={this.width}\n          />\n        )}\n      </div>\n    ) : (\n      <div\n        class={classNames(\n          this.rightToLeftOrientation ? 'inputIconRTL' : 'inputIconLTR',\n          'searchcraft-input-icon-container',\n        )}\n      >\n        {this.isLightTheme() ? (\n          <searchcraft-search-icon-set\n            height={this.height}\n            type='search-light'\n            width={this.width}\n          />\n        ) : (\n          <searchcraft-search-icon-set\n            height={this.height}\n            type='search-dark'\n            width={this.width}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin input-label-base {\n  font-family: var(--font-stack);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-top: 4px;\n}\n\n.labelLight {\n  @include input-label-base;\n  color: $content-primary;\n}\n\n.labelDark {\n  @include input-label-base;\n  color: $content-on-brand-primary;\n}","import { Component, Prop, h, State } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-input-label',\n  styleUrl: 'searchcraft-input-label.module.scss',\n  shadow: false,\n})\nexport class SearchcraftInputLabel {\n  @Prop() inputLabelClassName? = '';\n  @Prop() label?: string;\n  @State() theme = 'light';\n\n  private isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  render() {\n    if (!this.label) {\n      return null;\n    }\n    const labelStyle = this.isLightTheme() ? 'labelLight' : 'labelDark';\n    return (\n      <label\n        class={classNames(\n          labelStyle,\n          this.inputLabelClassName,\n          'searchcraft-input-label',\n        )}\n        htmlFor='searchcraft-input-id'\n      >\n        {this.label}\n      </label>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.resultsInfoContainer {\n  border-bottom: 1px solid $surface-disabled;\n  display: flex;\n  justify-content: flex-start;\n  width: 100%;\n}\n\n.resultsInfoContent {\n  color: $content-primary;\n  font-family: var(--font-stack);\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 20px;\n  margin: 24px 0 8px;\n\n  @media (max-width: 900px) {\n    margin: 0;\n    margin-bottom: 8px;\n  }\n}","import { Component, h, State } from '@stencil/core';\nimport classNames from 'classnames';\n\nimport { useSearchcraftStore } from '@provider/store';\n\nimport { formatNumberWithCommas } from '@utils/utils';\n\n@Component({\n  tag: 'searchcraft-results-info',\n  styleUrl: 'searchcraft-results-info.module.scss',\n  shadow: false,\n})\nexport class SearchcraftResultsInfo {\n  @State() isRequesting = false;\n  @State() resultsCount = 0;\n  @State() responseTime = '';\n  @State() query = '';\n\n  unsubscribe: () => void;\n\n  connectedCallback = () => {\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      this.isRequesting = state.isRequesting;\n      this.resultsCount = state.searchResults?.data?.count || 0;\n      this.responseTime = (\n        (state.searchResults?.data?.time_taken || 0) * 1000\n      ).toFixed(2);\n      this.query = state.query || '';\n    });\n  };\n\n  disconnectedCallback = () => {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  };\n\n  render() {\n    if (!this.query || this.resultsCount === 0) {\n      return null;\n    }\n    const formattedResults = formatNumberWithCommas(this.resultsCount);\n    return (\n      <div\n        class={classNames(\n          'resultsInfoContainer',\n          'searchcraft-results-info-container',\n        )}\n      >\n        <p\n          class={classNames(\n            'resultsInfoContent',\n            'searchcraft-results-info-content',\n          )}\n        >\n          {formattedResults} results found in {this.responseTime}ms\n        </p>\n      </div>\n    );\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-search-icon-set',\n  shadow: true,\n})\nexport class SearchcraftSearchIconSet {\n  /**\n   * Type of the icon to display.\n   * Options: 'search-light', 'search-dark', 'error-light', 'error-dark'\n   */\n  @Prop() type: 'search-light' | 'search-dark' | 'error-light' | 'error-dark' =\n    'search-dark';\n  @Prop() width = 20;\n  @Prop() height = 20;\n\n  render() {\n    const { width, height } = this;\n    switch (this.type) {\n      case 'search-light':\n        return (\n          <svg\n            width={width}\n            height={height}\n            viewBox='0 0 20 20'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='searchcraft-title'\n          >\n            <title id='searchcraft-title'>Searchcraft Search Icon Light</title>\n            <path\n              d='M17.5 17.5L13.875 13.875M15.8333 9.16667C15.8333 12.8486 12.8486 15.8333 9.16667 15.8333C5.48477 15.8333 2.5 12.8486 2.5 9.16667C2.5 5.48477 5.48477 2.5 9.16667 2.5C12.8486 2.5 15.8333 5.48477 15.8333 9.16667Z'\n              stroke='#404040'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'search-dark':\n        return (\n          <svg\n            width={width}\n            height={height}\n            viewBox='0 0 18 18'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='searchcraft-title'\n          >\n            <title id='searchcraft-title'>Searchcraft Search Icon Dark</title>\n            <path\n              d='M16.5 16.5L12.875 12.875M14.8333 8.16667C14.8333 11.8486 11.8486 14.8333 8.16667 14.8333C4.48477 14.8333 1.5 11.8486 1.5 8.16667C1.5 4.48477 4.48477 1.5 8.16667 1.5C11.8486 1.5 14.8333 4.48477 14.8333 8.16667Z'\n              stroke='#E6E6E6'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'error-light':\n        return (\n          <svg\n            width={width}\n            height={height}\n            viewBox='0 0 20 20'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='searchcraft-title'\n          >\n            <title id='searchcraft-title'>\n              Searchcraft Error Search Icon Light\n            </title>\n            <path\n              d='M17.5 17.5L13.875 13.875M15.8333 9.16667C15.8333 12.8486 12.8486 15.8333 9.16667 15.8333C5.48477 15.8333 2.5 12.8486 2.5 9.16667C2.5 5.48477 5.48477 2.5 9.16667 2.5C12.8486 2.5 15.8333 5.48477 15.8333 9.16667Z'\n              stroke='#737373'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'error-dark':\n        return (\n          <svg\n            width={width}\n            height={height}\n            viewBox='0 0 18 18'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='searchcraft-title'\n          >\n            <title id='searchcraft-title'>\n              Searchcraft Error Search Icon Dark\n            </title>\n            <path\n              d='M16.5 16.5L12.875 12.875M14.8333 8.16667C14.8333 11.8486 11.8486 14.8333 8.16667 14.8333C4.48477 14.8333 1.5 11.8486 1.5 8.16667C1.5 4.48477 4.48477 1.5 8.16667 1.5C11.8486 1.5 14.8333 4.48477 14.8333 8.16667Z'\n              stroke='#BFBFBF'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      default:\n        return null;\n    }\n  }\n}\n",".sliderContainer {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 100%;\n}\n\n.sliders {\n  height: 40px;\n  position: relative;\n  width: 100%;\n\n  .activeRange {\n    background: $surface-brand-primary;\n    border-radius: 2px;\n    height: 4px;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    z-index: 0;\n  }\n}\n\n.sliderPrimary {\n  appearance: none;\n  background: none;\n  pointer-events: none;\n  position: absolute;\n  top: 10px;\n  width: 50%;\n  -webkit-appearance: none;\n}\n\n.sliderSecondary {\n  appearance: none;\n  background: none;\n  position: absolute;\n  left: 50%;\n  pointer-events: none;\n  top: 10px;\n  width: 50%;\n  -webkit-appearance: none;\n}\n\n.startSlider {\n  background: transparent;\n  pointer-events: auto;\n}\n\n.endSlider {\n  background: transparent;\n  pointer-events: auto;\n}\n\ninput[type=\"range\"]::-webkit-slider-thumb {\n  appearance: none;\n  background-color: $content-on-brand-primary;\n  border: 2px solid $border-primary;\n  border-radius: 50%;\n  cursor: pointer;\n  height: 16px;\n  pointer-events: auto;\n  width: 16px;\n  -webkit-appearance: none;\n}\n\ninput[type=\"range\"]::-moz-range-thumb {\n  background-color: $content-on-brand-primary;\n  border: 2px solid $border-primary;\n  border-radius: 50%;\n  cursor: pointer;\n  height: 16px;\n  width: 16px;\n}\n\n.slider-labels {\n  display: flex;\n  font-size: 12px;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.yearLabelContainer {\n  color: $content-primary;\n  display: flex;\n  font-family: var(--font-stack);\n  font-size: 15px;\n  font-weight: 600;\n  justify-content: space-between;\n  margin-top: 10px;\n  width: 100%;\n}\n\n.yearLabel {\n  min-width: 30px;\n  text-align: center;\n}","import {\n  Component,\n  h,\n  State,\n  Prop,\n  Event,\n  type EventEmitter,\n} from '@stencil/core';\nimport classNames from 'classnames';\n\nimport { useSearchcraftStore } from '@provider/store';\n\n@Component({\n  tag: 'searchcraft-slider',\n  styleUrl: 'searchcraft-slider.module.scss',\n  shadow: false,\n})\nexport class YearRangeSlider {\n  @Prop() maxYear = new Date().getFullYear();\n  @Prop() minYear = 2014;\n\n  @State() endYear = this.maxYear;\n  @State() hasSearched = false;\n  @State() query = '';\n  @State() resultsCount = 0;\n  @State() startYear = this.minYear;\n\n  @Event() rangeChanged: EventEmitter<{ startYear: number; endYear: number }>;\n\n  private searchStore = useSearchcraftStore.getState();\n\n  unsubscribe: () => void;\n\n  componentDidLoad = () => {\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      if (state.query.length > 0) {\n        this.hasSearched = true;\n        this.resultsCount = state.searchResults?.data?.hits?.length || 0;\n      }\n      this.query = state.query;\n    });\n  };\n\n  disconnectedCallback = () => {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  };\n\n  private updateYears = async () => {\n    this.searchStore.setYearsRange([this.startYear, this.endYear]);\n\n    try {\n      if (typeof this.query === 'string' && this.query.trim() !== '') {\n        await this.searchStore.search();\n      }\n    } catch (error) {\n      console.error('Search failed:', error);\n    }\n  };\n\n  handleStartChange(event: InputEvent) {\n    this.startYear = Number.parseInt(\n      (event.target as HTMLInputElement).value,\n      10,\n    );\n    this.updateYears();\n  }\n\n  handleEndChange(event: InputEvent) {\n    this.endYear = Number.parseInt(\n      (event.target as HTMLInputElement).value,\n      10,\n    );\n    this.updateYears();\n  }\n\n  render() {\n    if (!this.query || this.resultsCount === 0) {\n      return null;\n    }\n\n    const rangeMin = this.minYear;\n    const rangeMax = this.maxYear;\n    const startPercent =\n      ((this.startYear - rangeMin) / (rangeMax - rangeMin)) * 100;\n    const endPercent =\n      ((this.endYear - rangeMin) / (rangeMax - rangeMin)) * 100;\n\n    return (\n      <div class='sliderContainer'>\n        <div class='sliders'>\n          <div\n            class={classNames('activeRange', 'searchcraft-slider-active-range')}\n            style={{\n              left: `${startPercent}.65%`,\n              width: `${endPercent - startPercent}%`,\n            }}\n          />\n          <input\n            class={classNames(\n              'sliderPrimary startSlider',\n              'searchcraft-slider-range-slider-start',\n            )}\n            max={this.minYear + 5}\n            min={this.minYear}\n            onInput={(event) => this.handleStartChange(event)}\n            type='range'\n            value={this.startYear}\n          />\n          <input\n            class={classNames(\n              'sliderSecondary endSlider',\n              'searchcraft-slider-range-slider-end',\n            )}\n            max={this.maxYear}\n            min={this.minYear + 5}\n            onInput={(event) => this.handleEndChange(event)}\n            type='range'\n            value={this.endYear}\n          />\n        </div>\n        <div\n          class={classNames(\n            'yearLabelContainer',\n            'searchcraft-slider-year-label-container',\n          )}\n        >\n          <span\n            class={classNames(\n              'yearLabel',\n              'searchcraft-slider-start-year-label',\n            )}\n          >\n            {this.startYear}\n          </span>\n          <span\n            class={classNames('yearLabel', 'searchcraft-slider-end-year-label')}\n          >\n            {this.endYear}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n",".toggleWrapper {\n  background: $surface-disabled;\n  border: none;\n  border-radius: 16px;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.05);\n  cursor: pointer;\n  height: 26px;\n  margin-left: 10px;\n  position: relative;\n  width: 44px;\n}\n\n.toggleWrapper.active {\n  background: $surface-brand-primary;\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.05);\n}\n\n.toggleWrapper .toggleSwitch {\n  background: $content-on-brand-primary;\n  border-radius: 50%;\n  height: 18px;\n  left: 4px;\n  position: absolute;\n  top: calc(50% - 18px/2);\n  transition: transform 0.3s ease;\n  width: 18px;\n}\n\n.toggleWrapper .toggleSwitch.active {\n  transform: translateX(16px);\n}\n","import { Component, h, Prop, State } from '@stencil/core';\nimport classNames from 'classnames';\n\nimport { useSearchcraftStore } from '@provider/store';\n\n@Component({\n  tag: 'searchcraft-toggle-button',\n  styleUrl: 'searchcraft-toggle-button.module.scss',\n  shadow: false,\n})\nexport class SearchcraftToggleButton {\n  /**\n   * Type of the toggle - determines what it controls\n   * 'mode': toggles between 'fuzzy' and 'normal'\n   * 'sort': toggles between 'asc' and 'desc'\n   */\n  @Prop() type: 'mode' | 'sort' = 'mode';\n\n  @State() isActive = false;\n  @State() query = ''; // Track the query\n  @State() resultsCount = 0; // Track the count of search results\n\n  private autoSearchFormElement: HTMLElement | null = null;\n  private searchStore = useSearchcraftStore.getState();\n  private unsubscribe: () => void;\n\n  componentDidLoad() {\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      this.query = state.query || '';\n      this.resultsCount = state.searchResults?.data?.hits?.length || 0;\n    });\n\n    this.autoSearchFormElement = document.querySelector(\n      'searchcraft-auto-search-form',\n    );\n    if (this.autoSearchFormElement) {\n      this.autoSearchFormElement.addEventListener(\n        'querySubmit',\n        this.handleSearchRequest,\n      );\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n    if (this.autoSearchFormElement) {\n      this.autoSearchFormElement.addEventListener(\n        'querySubmit',\n        this.handleSearchRequest,\n      );\n    }\n  }\n\n  handleSearchRequest = () => {\n    this.isActive = false;\n    this.searchStore.setSearchParams({\n      mode: 'fuzzy',\n      sort: 'asc',\n    });\n  };\n\n  private handleToggle = async () => {\n    this.isActive = !this.isActive;\n\n    if (this.type === 'mode') {\n      const mode = this.isActive ? 'normal' : 'fuzzy';\n      this.searchStore.setSearchParams({\n        mode,\n      });\n    } else if (this.type === 'sort') {\n      const sort = this.isActive ? 'desc' : 'asc';\n      this.searchStore.setSearchParams({\n        sort,\n      });\n    }\n\n    try {\n      await this.searchStore.search();\n    } catch (error) {\n      console.error('Search failed:', error);\n    }\n  };\n\n  render() {\n    if (!this.query || this.resultsCount === 0) {\n      return null;\n    }\n    const toggleContainerStyle = `toggleWrapper ${this.isActive ? 'active' : ''}`;\n    const toggleSwitchStyle = `toggleSwitch ${this.isActive ? 'active' : ''}`;\n\n    return (\n      <button\n        class={classNames(\n          toggleContainerStyle,\n          'searchcraft-toggle-button-container',\n        )}\n        onClick={this.handleToggle}\n        type='button'\n      >\n        <div\n          class={classNames(toggleSwitchStyle, 'searchcraft-toggle-switch')}\n        />\n      </button>\n    );\n  }\n}\n"],"mappings":"yLAAA,MAAMA,EAAqC,wLAC3C,MAAAC,EAAeD,E,MCwBFE,EAAyB,M,mIAyB5BC,KAAAC,gBAAwD,KACxDD,KAAAE,cAAgB,EAChBF,KAAAG,YAAcC,EAAoBC,WAmB1CL,KAAAM,kBAAqBC,IACnBP,KAAKQ,MAAQD,EAAME,OACnBT,KAAKG,YAAYO,SAASV,KAAKQ,OAC/B,GAAIR,KAAKQ,MAAMG,SAAW,GAAI,CAC5BX,KAAKY,cAAgB,KACrBZ,KAAKa,wBAAwBC,OAC7Bd,KAAKG,YAAYY,iBAAiB,K,GAItCf,KAAAgB,iBAAoBT,IAClB,MAAMU,EAASV,EAAME,OACrB,GAAIQ,IAAWjB,KAAKQ,MAAO,CACzB,M,CAEFR,KAAKQ,MAAQS,EAEb,GAAIjB,KAAKC,gBAAiB,CACxBiB,aAAalB,KAAKC,gB,CAGpBD,KAAKC,gBAAkBkB,YAAW,KAChC,GAAInB,KAAKQ,MAAMG,SAAW,GAAI,CAC5BX,KAAKY,cAAgB,KACrBZ,KAAKG,YAAYY,iBAAiB,MAClCf,KAAKa,wBAAwBC,M,KACxB,CACLd,KAAKG,YAAYO,SAASV,KAAKQ,OAC/BR,KAAKoB,YAAYN,KAAKd,KAAKQ,OAC3BR,KAAKqB,W,IAENrB,KAAKE,cAAc,EAGxBF,KAAAsB,iBAAmB,KACjB,GAAItB,KAAKQ,QAAU,KAAOR,KAAKY,cAAe,CAC5C,M,CAEFZ,KAAKQ,MAAQ,GACbR,KAAKY,cAAgB,KACrBZ,KAAKG,YAAYO,SAAS,IAC1BV,KAAKG,YAAYY,iBAAiB,MAElC,UAAWf,KAAKuB,aAAe,WAAY,CACzCvB,KAAKuB,Y,CAGP,GAAIvB,KAAKC,gBAAiB,CACxBiB,aAAalB,KAAKC,gB,CAGpBD,KAAKwB,MAAQ,MACbxB,KAAKa,wBAAwBC,MAAM,EAG7Bd,KAAAqB,UAAYI,UAClB,GAAIzB,KAAKQ,MAAMG,SAAW,GAAI,CAC5BX,KAAKwB,MAAQ,KACbxB,KAAKa,wBAAwBC,M,KACxB,CACLd,KAAKwB,MAAQ,MACbxB,KAAKG,YAAYO,SAASV,KAAKQ,OAC/BR,KAAKG,YAAYuB,mBAAmB,IAEpC,UACQ1B,KAAKG,YAAYwB,Q,CACvB,MAAOH,GACPxB,KAAKwB,MAAQ,KACbxB,KAAKa,wBAAwBC,M,IAKnCd,KAAA4B,iBAAmBH,MAAOlB,IACxBA,EAAMsB,uBACA7B,KAAKqB,WAAW,E,yBAxHM,G,gBACG,O,YACD,CAC9BS,OAAQ,GACRC,YAAa,GACbC,MAAO,I,0BAEuD,G,uBACpC,G,qBACF,G,oBACD,G,mBACD,G,sBACG,c,4BACM,M,0BACF,G,WAKd,M,kBACO,M,WACP,G,mBACoC,I,CAOrD,gBAAAC,GACE,MAAMC,EAAc,IAAIC,EAAgBnC,KAAKoC,QAC7CpC,KAAKG,YAAYkC,WAAWH,EAAa,MAEzClC,KAAKsC,YAAclC,EAAoBmC,WAAWC,IAChDxC,KAAKyC,aAAeD,EAAMC,aAC1BzC,KAAKY,cAAa8B,OAAAC,OAAA,GAAQH,EAAM5B,cAAe,G,CAInD,oBAAAgC,GACE,GAAI5C,KAAKsC,YAAa,CACpBtC,KAAKsC,a,EAkFT,MAAAO,GACE,MAAMC,EAAY9C,KAAK+C,uBAAyB,UAAY,UAC5D,MAAMC,EAAqBC,EAAkBjD,KAAKkD,sBAClD,OACEC,EAAA,QAAAC,IAAA,2CACEC,MAAOC,EAAW,GAAGR,IAAa,gCAClCS,SAAUvD,KAAK4B,kBAEfuB,EAAA,2BAAAC,IAAA,2CAAyBI,MAAOxD,KAAKyD,gBACrCN,EAAA,qBAAAC,IAAA,2CACEM,aAAcV,EAAkB,sBACXhD,KAAK2D,kBAAiB,oBACxB3D,KAAK4D,gBAAe,mBACrB5D,KAAK6D,eAAc,gBACtB7D,KAAKyC,aACpBqB,aAAc9D,KAAKsB,iBACnByC,aAAc/D,KAAKgB,iBACnBgD,oBAAqBhE,KAAKM,kBAAiB,oBACxBN,KAAKiE,iBACxBzD,MAAOR,KAAKQ,MAAK,4BACUR,KAAK+C,yBAEjC/C,KAAKwB,OACJ2B,EAAA,6BAAAC,IAAA,2CAA2Bc,aAAa,iC,aC5KlD,MAAMC,EAAuC,u/GAC7C,MAAAC,EAAeD,E,MCOFE,EAA2B,M,wKAe7BrE,KAAAsE,eAA6B,OAC7BtE,KAAAuE,gBAA8B,OAC9BvE,KAAAwE,eAA6B,OAE9BxE,KAAAyE,kBAAoB,KAC1BzE,KAAKsE,gBAAgB,EAGftE,KAAA0E,YAAc,KACpB,IACE,OAAOC,KAAKC,MAAM5E,KAAK0D,a,CACvB,MAAOlC,GACPqD,QAAQrD,MAAM,+BAAgCA,GAC9C,MAAO,E,mBA3BU,G,kBACE,K,kBACA,G,sBACI,G,iBACL,G,mBACE,M,cACL,G,oBACM,G,sBACE,G,qBACD,G,qBACA,G,eACY,Q,qBACZ,K,CAmB1B,MAAAqB,GACE,MAAMiC,EAAe9E,KAAK+E,YAAc,QACxC,MAAMC,EAAShF,KAAK0E,cACpB,MAAMO,EAAaH,EAAe,aAAe,YACjD,MAAMI,EAAiBlF,KAAKmF,aAC1BhC,EAAA,OAAAC,IAAA,2CACEC,MAAOC,EACL,iBACA,mDAGFH,EAAA,OAAAC,IAAA,2CACEgC,IAAKpF,KAAKqF,iBACVhC,MAAOC,EAAW2B,EAAY,mCAC9BK,IAAKtF,KAAKmF,YACVI,MAAOP,EAAOQ,OAAS,MAK7B,MAAMC,EACJtC,EAAA,OAAAC,IAAA,2CACEC,MAAOC,EACL,mBACA,qDAGFH,EAAA,MAAAC,IAAA,2CACEC,MAAOC,EACLwB,EAAe,aAAe,YAC9B,wCAEFS,MAAOP,EAAOU,OAAS,IAEtB1F,KAAK2F,cAERxC,EAAA,MAAAC,IAAA,2CACEC,MAAOC,EACLwB,EAAe,uBAAyB,sBACxC,2CAEFS,MAAOP,EAAOY,UAAY,IAEzB5F,KAAK6F,iBAER1C,EAAA,KAAAC,IAAA,2CACEC,MAAOC,EACLwB,EAAe,sBAAwB,qBACvC,kDAEFS,MAAOP,EAAOc,gBAAkB,IAE/B9F,KAAK8F,gBAER3C,EAAA,OAAAC,IAAA,2CACEC,MAAOC,EACL,4BACA,+DAGFH,EAAA,KAAAC,IAAA,2CACEC,MAAOC,EACLwB,EAAe,wBAA0B,uBACzC,oDAEFS,MAAOP,EAAOe,kBAAoB,IAEjC/F,KAAK+F,kBAER5C,EAAA,KAAAC,IAAA,2CACEC,MAAOC,EACL,GAAGwB,EAAe,uBAAyB,wBAAwB9E,KAAKgG,gBAAkB,cAAgB,KAC1G,mDAEFT,MAAOP,EAAOgB,iBAAmB,IAEhChG,KAAKgG,kBAGThG,KAAKiG,YACJ9C,EAAA,UAAAC,IAAA,2CACE8C,QAASlG,KAAKyE,kBACdc,MAAOP,EAAOmB,QAAU,GACxBC,KAAK,UAEJpG,KAAKiG,aAMd,OACE9C,EAAA,KAAAC,IAAA,2CACEC,MAAOC,EACLtD,KAAKqG,cACDvB,EACE,kCACA,iCACF,kBACJ,uCAEFwB,UAAWtG,KAAKuE,gBAChBgC,KAAMvG,KAAKwG,SACXC,IAAI,aACJlB,MAAOP,EAAO0B,WAAa,GAC3BC,SAAS,IACT1F,OAAO,UAENjB,KAAK4G,gBACJzD,EAAC0D,EAAQ,KACNpB,EACAP,GAGH/B,EAAC0D,EAAQ,KACN3B,EACAO,G,aC5Jb,MAAMqB,EAAwC,mmBAC9C,MAAAC,EAAeD,E,MCyBFE,EAA4B,M,8EAClB,E,4BAGwB,G,kCACN,G,qBACO,K,gBACzB,K,kBACE,M,oBACE,K,2BACO,M,mBACR,M,iBAID,M,WACN,G,mBACoC,I,CAIrD,gBAAA/E,GACE,IACGjC,KAAKiH,8BACNjH,KAAKiH,6BAA6BC,SAAW,EAC7C,CACArC,QAAQsC,KAAK,4DACbnH,KAAKiH,6BAA+B,E,CAGtCjH,KAAKsC,YAAclC,EAAoBmC,WAAWC,IAChD,GAAIA,EAAMhC,MAAM0G,OAAS,EAAG,CAC1BlH,KAAKoH,YAAc,I,KACd,CACLpH,KAAKoH,YAAc,K,CAErBpH,KAAKY,cAAa8B,OAAAC,OAAA,GAAQH,EAAM5B,eAChCZ,KAAKQ,MAAQgC,EAAMhC,KAAK,IAG1B,MAAMI,cAAEA,EAAaJ,MAAEA,GAAUJ,EAAoBC,WACrDL,KAAKY,cAAgBA,EACrBZ,KAAKQ,MAAQA,C,CAGf,oBAAAoC,GACE,GAAI5C,KAAKsC,YAAa,CACpBtC,KAAKsC,a,EAIT,MAAAO,G,wBACE,IAAK7C,KAAKoH,YAAa,CACrB,OACEjE,EAAA,OACEE,MAAOC,EACL,aACA,qDAGFH,EAAA,QAAMkE,KAAK,iB,CAKjB,MAAKC,EAAAtH,KAAKY,iBAAa,MAAA0G,SAAA,SAAAA,EAAEC,MAAM,CAC7B,M,CAGF,MAAMC,EAAmBC,EAAgBzH,KAAKiH,8BAC9C,MAAMS,SACG1H,KAAK2H,yBAA2B,SACnC3H,KAAK2H,uBACLC,EAAgB5H,KAAK2H,wBAE3B,MAAME,GAAoBC,GAAAC,GAAAC,EAAAhI,KAAKY,iBAAa,MAAAoH,SAAA,SAAAA,EAAET,QAAI,MAAAQ,SAAA,SAAAA,EAAEE,QAAI,MAAAH,SAAA,SAAAA,EAAEI,KACxD,CAACC,EAAUnG,KACT,MAAQoG,IAAKC,GAAWF,EACxB,MAAMG,EAAoBC,EACxBF,EACAb,GAGF,GAAIxH,KAAKwI,WAAY,CACnB,IAAK,MAAMpF,KAAOoE,EAAkB,CAClC,GAAIc,EAAkBlF,GAAM,CAC1B,MAAMqF,EAAQH,EAAkBlF,GAChC,UACSqF,IAAU,WAChBC,OAAOC,MAAMC,KAAKhE,MAAM6D,IACzB,CACAH,EAAkBlF,GAAOyF,EAAwBJ,E,IAMzD,OACEtF,EAAA,oDACmB,IAAM0B,QAAQiE,IAAI,mBAAkB,gBACtCpB,EAAgB,eACjBY,EAAkBd,EAAiB,IAAG,iBACpCxH,KAAKqG,cACrBjD,IAAK,GAAG+E,EAASY,eAAe/G,IAAO,mBACrB,IAAM6C,QAAQiE,IAAI,WACpCtC,SAAU8B,EAAkBd,EAAiB,IAAa,oBACvCxH,KAAKgJ,sBAAqB,kBAC5BV,EAAkBd,EAAiB,IAAG,kBACtC,IAAM3C,QAAQiE,IAAI,uBAAsB,oBACtCR,EAAkBd,EAAiB,IAAG,mBACvCc,EAAkBd,EAAiB,IAAG,mBACtCc,EAAkBd,EAAiB,IAAG,gBACzCc,EAAkBd,EAAiB,KAClD,IAKR,MAAMyB,EAAiC,GAEvC,GAAIjJ,KAAKkJ,eAAgB,CACvBD,EAAgBE,KACdhG,EAAA,OACEC,IAAI,mBACJC,MAAOC,EACL,YACA,8CAGFH,EAAA,kBACAA,EAAA,6B,CAKN,GAAInD,KAAKoJ,WAAa,EAAG,CACvBvB,EAAkBwB,SAAQ,CAACC,EAAWtH,KACpCiH,EAAgBE,KAAKG,GACrB,IAAKtH,EAAQ,GAAKhC,KAAKoJ,aAAe,EAAG,CACvCH,EAAgBE,KACdhG,EAAA,OACEC,IAAK,cAAcpB,EAAQ,IAC3BqB,MAAOC,EACL,YACA,4CAGFH,EAAA,kBACAA,EAAA,6B,SAKH,CACL8F,EAAgBE,QAAQtB,E,CAG1B,GAAI7H,KAAKuJ,aAAc,CACrBN,EAAgBE,KACdhG,EAAA,OACEC,IAAI,iBACJC,MAAOC,EAAW,YAAa,wCAE/BH,EAAA,kBACAA,EAAA,6B,CAKN,GAAInD,KAAKQ,MAAM0G,OAAS,KAAKsC,GAAAC,GAAAC,EAAA1J,KAAKY,iBAAa,MAAA8I,SAAA,SAAAA,EAAEnC,QAAI,MAAAkC,SAAA,SAAAA,EAAExB,QAAI,MAAAuB,SAAA,SAAAA,EAAEtC,UAAW,EAAG,CACzElH,KAAK2J,UAAU7I,M,CAGjB,OACEqC,EAAA,OACEE,MAAOC,EACL,mBACA,yCAGD2F,EACAjJ,KAAKQ,MAAM0G,OAAS,KACnB0C,GAAAC,GAAAC,EAAA9J,KAAKY,iBAAa,MAAAkJ,SAAA,SAAAA,EAAEvC,QAAI,MAAAsC,SAAA,SAAAA,EAAE5B,QAAI,MAAA2B,SAAA,SAAAA,EAAE1C,UAAW,GACzC/D,EAAA,OACEE,MAAOC,EACL,wBACA,uDAGFH,EAAA,6CACiB,gCAAgCnD,KAAKQ,kB,mBClNvDuJ,EAAoB,M,yBAC/B,MAAAlH,GACE,OACEM,EAAA,OAAAC,IAAA,2CAAK4G,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,QACnDhH,EAAA,SAAAC,IAAA,8DACAD,EAAA,QAAAC,IAAA,2CACEgH,EAAE,wCACFC,OAAO,QAAO,eACD,IAAG,iBACD,QAAO,kBACN,U,SCVbC,EAAuB,M,mCAMhC,a,CAEF,MAAAzH,GACE,OAAQ7C,KAAKoG,MACX,IAAK,cACH,OACEjD,EAAA,OACE6G,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLI,MAAM,6BAA4B,kBAClB,cAEhBpH,EAAA,SAAOqH,GAAG,cAAY,sCACtBrH,EAAA,QACEiH,EAAE,wIACFC,OAAO,QAAO,eACD,MAAK,iBACH,QAAO,kBACN,WAIxB,IAAK,aACH,OACElH,EAAA,OACE6G,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLI,MAAM,6BAA4B,kBAClB,cAEhBpH,EAAA,SAAOqH,GAAG,cAAY,qCACtBrH,EAAA,QACEiH,EAAE,wIACFC,OAAO,QAAO,eACD,MAAK,iBACH,QAAO,kBACN,WAIxB,IAAK,cACH,OACElH,EAAA,OACE6G,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLI,MAAM,6BAA4B,kBAClB,cAEhBpH,EAAA,SAAOqH,GAAG,cAAY,sCACtBrH,EAAA,QACEiH,EAAE,wCACFC,OAAO,UAAS,eACH,MAAK,iBACH,QAAO,kBACN,WAIxB,IAAK,aACH,OACElH,EAAA,OACE6G,MAAM,IACNC,OAAO,KACPC,QAAQ,WACRC,KAAK,OACLI,MAAM,6BAA4B,kBAClB,cAEhBpH,EAAA,SAAOqH,GAAG,cAAY,qCACtBrH,EAAA,QACEiH,EAAE,sBACFC,OAAO,UAAS,eACH,MAAK,iBACH,QAAO,kBACN,WAKxB,QACE,OAAO,K,GClGf,MAAMI,EAAuC,mcAC7C,MAAAC,EAAeD,E,MCcFE,EAA2B,M,gEAQ9B3K,KAAA8E,aAAe,IACd9E,KAAK4K,QAAU,QAGhB5K,KAAA6K,iBAAoBtK,IAC1BA,EAAMsB,iBACN7B,KAAKuB,WAAWT,MAAM,E,kBAbA,M,4BACS,M,WAIhB,O,CAWjB,MAAA+B,GACE,OAAO7C,KAAK+C,uBACVI,EAAA,UACEE,MAAOC,EACL,sBACA,sCAEF4C,QAASlG,KAAK6K,iBACdzE,KAAK,UAEJpG,KAAK8E,aACJ3B,EAAA,8BAA4BiD,KAAK,gBAEjCjD,EAAA,8BAA4BiD,KAAK,gBAIrCjD,EAAA,UACEE,MAAOC,EACL,sBACA,sCAEF4C,QAASlG,KAAK6K,iBACdzE,KAAK,UAEJpG,KAAK8E,aACJ3B,EAAA,8BAA4BiD,KAAK,gBAEjCjD,EAAA,8BAA4BiD,KAAK,e,mBCtD9B0E,EAAmB,M,yBAC9B,MAAAjI,GACE,OACEM,EAAA,OAAAC,IAAA,2CAAK4G,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,QACjDhH,EAAA,SAAAC,IAAA,6DACAD,EAAA,QAAAC,IAAA,2CACE2H,GAAG,MACHC,GAAG,MACHC,GAAG,OACHC,GAAG,MACHb,OAAO,QAAO,eACD,IAAG,iBACD,U,GClBzB,MAAMc,EAAmC,8SACzC,MAAAC,EAAeD,E,MCOFE,EAAuB,M,gEAEA,O,CAElC,MAAAxI,GACE,MAAMyI,EACJtL,KAAK4K,QAAU,QAAU,oBAAsB,mBAEjD,OACEzH,EAAA,KAAAC,IAAA,2CAAGC,MAAOC,EAAWgI,EAAmB,8BACrCtL,KAAKkE,cAAgB,2B,aClB9B,MAAMqH,EAAkC,+vDACxC,MAAAC,EAAeD,E,MCqBFE,EAAsB,M,wEAoBzBzL,KAAAG,YAAcC,EAAoBC,WAClCL,KAAA0L,sBAA4C,KA+CpD1L,KAAA2L,oBAAsB,KACpB3L,KAAK4L,gBAAkB,GACvB5L,KAAKG,YAAYuB,mBAAmB,IACpC1B,KAAK6L,mBAAmB,EA0C1B7L,KAAA8L,YAAc,CAACtI,EAAeuI,IAC5B,GAAGvI,EAAMwI,QAAQ,KAAM,KAAKA,QAAQ,SAAUC,GAASA,EAAKC,oBAAmBH,K,aAjHtB,G,oBAatD,G,qBACgC,G,WACpB,G,kBACO,M,kBACA,C,CAMxB,iBAAAI,G,MACE,MAAM3J,EAAQxC,KAAKG,YACnB,MAAMiM,GAAS9E,EAAA9E,EAAM5B,iBAAa,MAAA0G,SAAA,SAAAA,EAAEC,KAAK6E,OAEzC,GAAIA,EAAQ,CACVpM,KAAKqM,0BAA0BD,E,CAGjCpM,KAAKsC,YAAclC,EAAoBmC,WAAWC,I,cAChD,MAAMhC,GAAQ8G,EAAA9E,EAAMhC,SAAK,MAAA8G,SAAA,SAAAA,EAAE3G,OAC3B,MAAMyL,GAASpE,EAAAxF,EAAM5B,iBAAa,MAAAoH,SAAA,SAAAA,EAAET,KAAK6E,OACzCpM,KAAKQ,MAAQA,GAAS,GACtBR,KAAKyC,aAAeD,EAAMC,aAC1BzC,KAAKsM,eAAe5C,GAAA5B,GAAAC,EAAAvF,EAAM5B,iBAAa,MAAAmH,SAAA,SAAAA,EAAER,QAAI,MAAAO,SAAA,SAAAA,EAAEG,QAAI,MAAAyB,SAAA,SAAAA,EAAExC,SAAU,EAE/D,GAAIkF,GAAUpM,KAAK4L,gBAAgB1E,SAAW,EAAG,CAC/ClH,KAAKqM,0BAA0BD,E,KAInCpM,KAAK0L,sBAAwBvD,SAASoE,cACpC,gCAEF,GAAIvM,KAAK0L,sBAAuB,CAC9B1L,KAAK0L,sBAAsBc,iBACzB,cACAxM,KAAK2L,oB,EAKX,oBAAA/I,GACE,GAAI5C,KAAKsC,YAAa,CACpBtC,KAAKsC,a,CAGP,GAAItC,KAAK0L,sBAAuB,CAC9B1L,KAAK0L,sBAAsBe,oBACzB,cACAzM,KAAK2L,oB,EAWX,yBAAAU,CAA0BD,G,MACxB,MAAMM,EAAYC,IAAcrF,EAAA8E,EAAO,MAAE,MAAA9E,SAAA,SAAAA,EAAEsF,UAAW,IACtD5M,KAAK6M,eAAiBH,EAAUxE,KAAK4E,IAAM,CACzCtJ,MAAOsJ,EAAOtJ,MACdiF,MAAOqE,EAAOrE,MACdsD,MAAOe,EAAOf,MACdgB,SAAUD,EAAOC,UAAY,M,CAIjC,oBAAAC,CAAqBvE,EAAewE,EAAoBC,EAAW,O,MACjE,GAAIA,EAAU,CACZ,MAAMC,EAAenN,KAAK6M,eAAeO,MACtCN,GAAWA,EAAOrE,QAAUA,IAE/B,MAAM4E,IACJ/F,EAAA6F,IAAY,MAAZA,SAAY,SAAZA,EAAcJ,YAAQ,MAAAzF,SAAA,SAAAA,EAAEY,KAAKoF,GAAUA,EAAM7E,UAAU,GAEzD,IAAKwE,EAAW,CACdjN,KAAK4L,gBAAkB5L,KAAK4L,gBAAgBkB,QACzCA,GAAWA,IAAWrE,IAAU4E,EAAYE,SAAST,I,KAEnD,CACL9M,KAAK4L,gBAAkB,IAAI5L,KAAK4L,gBAAiBnD,E,MAE9C,CACLzI,KAAK4L,gBAAkBqB,EACnB,IAAIjN,KAAK4L,gBAAiBnD,GAC1BzI,KAAK4L,gBAAgBkB,QAAQA,GAAWA,IAAWrE,G,CAEzDzI,KAAK6L,mB,CAGP,iBAAAA,GACE7L,KAAKwN,eAAe1M,KAAKd,KAAK4L,iBAC9B5L,KAAKG,YAAYuB,mBAAmB1B,KAAK4L,iBACzC5L,KAAKG,YAAYwB,Q,CAMnB,MAAAkB,GACE,IAAK7C,KAAKQ,OAASR,KAAKsM,eAAiB,EAAG,CAC1C,OAAO,I,CAET,OACEnJ,EAAA,OACEE,MAAOC,EACL,uBACA,uCAGDtD,KAAK6M,eAAe3E,KAAK4E,IACxB,MAAMW,EAAkBX,EAAOC,SAC3BD,EAAOC,SAASW,MAAMJ,GACpBtN,KAAK4L,gBAAgB2B,SAASD,EAAM7E,SAEtC,MAEJ,OACEtF,EAAA,OACEC,IAAK0J,EAAOrE,MACZpF,MAAOC,EAAW,kCAElBH,EAAA,SACEE,MAAOC,EACL,sBACA,4CAGFH,EAAA,SACEwK,QAAS3N,KAAK4L,gBAAgB2B,SAAST,EAAOrE,OAC9CmF,SAAWrN,GACTP,KAAKgN,qBACHF,EAAOrE,MACNlI,EAAMU,OAA4B0M,QACnC,MAGJvH,KAAK,aAENqH,EACCtK,EAAA,OACEE,MAAOC,EACL,gBACA,2CAGFH,EAAA,+BAGFA,EAAA,OACEE,MAAOC,EACL,iBACA,4CAGFH,EAAA,gCAGHnD,KAAK8L,YAAYgB,EAAOtJ,MAAOsJ,EAAOf,QAExCe,EAAOC,UAAYD,EAAOC,SAAS7F,OAAS,GAC3C/D,EAAC0D,EAAQ,KACNiG,EAAOC,SAAS7E,KAAKoF,GACpBnK,EAAA,SACEC,IAAKkK,EAAM7E,MACXpF,MAAOC,EACL,2BACA,2CAEFiC,MAAO,CACLsI,QAAS7N,KAAK4L,gBAAgB2B,SAAST,EAAOrE,OAC1C,OACA,SAGNtF,EAAA,SACEwK,QAAS3N,KAAK4L,gBAAgB2B,SAASD,EAAM7E,OAC7CmF,SAAWrN,GACTP,KAAKgN,qBACHM,EAAM7E,MACLlI,EAAMU,OAA4B0M,SAGvCvH,KAAK,aAEPjD,EAAA,OACEE,MAAOC,EACL,iBACA,4CAGFH,EAAA,gCAEDnD,KAAK8L,YACJwB,EAAM9J,MAAM+J,SAAS,KACjBD,EAAM9J,MAAMsK,MAAM,KAAKC,OAAST,EAAM9J,MACtC8J,EAAM9J,MACV8J,EAAMvB,WAMZ,I,aClPlB,MAAMiC,EAA4B,oyHAClC,MAAAC,EAAeD,E,MCsBFE,EAAgB,M,4JAwB3BlO,KAAAM,kBAAqBC,IACnB,MAAM4N,EAAQ5N,EAAMU,OACpBjB,KAAKoO,kBAAkBtN,KAAKqN,EAAM1F,MAAM,EAG1CzI,KAAAgB,iBAAoBT,IAClB,MAAM4N,EAAQ5N,EAAMU,OACpBjB,KAAKqO,WAAWvN,KAAKqN,EAAM1F,MAAM,EAGnCzI,KAAAsB,iBAAmB,KACjB,GAAItB,KAAKQ,QAAU,GAAI,CACrB,M,CAEFR,KAAKQ,MAAQ,GACb,GAAIR,KAAKuB,WAAY,CACnBvB,KAAKuB,WAAWT,M,qBAvCoC,G,WACxC,M,mBACQ,G,2BACQ,G,uBACJ,G,oBACH,G,qBACC,G,oBACD,G,kBACF,M,sBACI,e,4BACM,M,WACjB,G,WAMC,O,CAEjB,gBAAYgE,GACV,OAAO9E,KAAK4K,QAAU,O,CAuBxB,MAAA/H,GACE,MAAMyL,EAAqBtO,KAAK+C,uBAC5B,oBACA,oBAEJ,MAAMwL,EAAiBvO,KAAKwB,MACxBxB,KAAK8E,aACH,qBACA,oBACF9E,KAAK8E,aACH,gBACA,eAEN,MAAM0J,EAAwBvL,EAAkBjD,KAAK0D,cAErD,MAAM+K,EAAmB,CACvBC,SAAUF,EAAsBG,qBAAuB,QAEzD,OACExL,EAAA,OAAAC,IAAA,2CACEC,MAAOC,EACLgL,EACAtO,KAAK4O,cACL,2BAGD5O,KAAK+C,uBACJI,EAAC0D,EAAQ,KACP1D,EAAA,SACE0L,aAAa,MACbxL,MAAOC,EAAWiL,EAAgB,qBAClC/D,GAAG,uBACHoD,SAAU5N,KAAKM,kBAAkBwO,KAAK9O,MACtC+O,QAAS/O,KAAKgB,iBAAiB8N,KAAK9O,MACpCgP,YAAahP,KAAKiE,iBAClBsB,MAAOiJ,EACPpI,KAAK,OACLqC,MAAOzI,KAAKQ,QAEd2C,EAAA,aACG,wFAEgBsL,EAAiBC,gDAInC1O,KAAK2D,mBACJR,EAAA,6BACE8L,sBAAuBjP,KAAKiP,sBAC5BtL,kBAAmB3D,KAAK2D,kBACxBZ,uBAAwB/C,KAAK+C,yBAGhC/C,KAAKQ,MAAM0G,OAAS,GACnB/D,EAAA,kCACEV,aAAczC,KAAKyC,aACnBqB,aAAc9D,KAAKsB,iBACnByB,uBAAwB/C,KAAK+C,yBAGjCI,EAAA,0BACE3B,MAAOxB,KAAKwB,MACZyI,OAAQjK,KAAK4D,gBACbb,uBAAwB/C,KAAK+C,uBAC7BiH,MAAOhK,KAAK6D,kBAIhBV,EAAC0D,EAAQ,KACP1D,EAAA,0BACE3B,MAAOxB,KAAKwB,MACZyI,OAAQjK,KAAK4D,gBACbb,uBAAwB/C,KAAK+C,uBAC7BiH,MAAOhK,KAAK6D,iBAEdV,EAAA,SACE0L,aAAa,MACbxL,MAAOC,EAAWiL,EAAgB,qBAClC/D,GAAG,uBACHoD,SAAU5N,KAAKM,kBAAkBwO,KAAK9O,MACtC+O,QAAS/O,KAAKgB,iBAAiB8N,KAAK9O,MACpCgP,YAAahP,KAAKiE,iBAClBmC,KAAK,OACLqC,MAAOzI,KAAKQ,MACZ+E,MAAOiJ,IAETrL,EAAA,aACG,wFAEgBsL,EAAiBC,gDAInC1O,KAAK2D,mBACJR,EAAA,6BACE8L,sBAAuBjP,KAAKiP,sBAC5BtL,kBAAmB3D,KAAK2D,kBACxBZ,uBAAwB/C,KAAK+C,yBAGhC/C,KAAKQ,MAAM0G,OAAS,GACnB/D,EAAA,kCACEV,aAAczC,KAAKyC,aACnBqB,aAAc9D,KAAKsB,iBACnByB,uBAAwB/C,KAAK+C,0B,aC3K7C,MAAMmM,EAAmC,+oCACzC,MAAAC,EAAeD,E,MCOFE,EAAuB,M,yEAED,G,uBACL,e,4BACK,M,WAEhB,O,CAET,YAAAtK,GACN,OAAO9E,KAAK4K,QAAU,O,CAGxB,MAAA/H,GACE,OAAO7C,KAAK+C,uBACVI,EAAA,KACEE,MAAOC,EACLtD,KAAKwB,MACDxB,KAAK8E,aACH,4BACA,2BACF9E,KAAK8E,aACH,uBACA,sBACN9E,KAAKiP,sBACL,8BAGDjP,KAAK2D,mBAGRR,EAAA,KACEE,MAAOC,EACLtD,KAAKwB,MACDxB,KAAK8E,aACH,4BACA,2BACF9E,KAAK8E,aACH,uBACA,sBACN9E,KAAKiP,sBACL,8BAGDjP,KAAK2D,kB,aCnDd,MAAM0L,EAAgC,8MACtC,MAAAC,EAAeD,E,MCOFE,EAAoB,M,0DAEd,G,4BACgB,M,WACjB,G,WAEC,O,CAET,YAAAzK,GACN,OAAO9E,KAAK4K,QAAU,O,CAGxB,MAAA/H,GACE,OAAO7C,KAAKwB,MACV2B,EAAA,OACEE,MAAOC,EACLtD,KAAK+C,uBAAyB,eAAiB,eAC/C,qCAGD/C,KAAK8E,eACJ3B,EAAA,+BACE8G,OAAQjK,KAAKiK,OACb7D,KAAK,cACL4D,MAAOhK,KAAKgK,QAGd7G,EAAA,+BACE8G,OAAQjK,KAAKiK,OACb7D,KAAK,aACL4D,MAAOhK,KAAKgK,SAKlB7G,EAAA,OACEE,MAAOC,EACLtD,KAAK+C,uBAAyB,eAAiB,eAC/C,qCAGD/C,KAAK8E,eACJ3B,EAAA,+BACE8G,OAAQjK,KAAKiK,OACb7D,KAAK,eACL4D,MAAOhK,KAAKgK,QAGd7G,EAAA,+BACE8G,OAAQjK,KAAKiK,OACb7D,KAAK,cACL4D,MAAOhK,KAAKgK,Q,aC3DxB,MAAMwF,EAAiC,gSACvC,MAAAC,EAAeD,E,MCOFE,EAAqB,M,kDACD,G,gCAEd,O,CAET,YAAA5K,GACN,OAAO9E,KAAK4K,QAAU,O,CAGxB,MAAA/H,GACE,IAAK7C,KAAKwD,MAAO,CACf,OAAO,I,CAET,MAAMmM,EAAa3P,KAAK8E,eAAiB,aAAe,YACxD,OACE3B,EAAA,SACEE,MAAOC,EACLqM,EACA3P,KAAK4P,oBACL,2BAEFC,QAAQ,wBAEP7P,KAAKwD,M,aC/Bd,MAAMsM,EAAkC,wWACxC,MAAAC,EAAeD,E,MCWFE,EAAsB,M,yBAQjChQ,KAAAmM,kBAAoB,KAClBnM,KAAKsC,YAAclC,EAAoBmC,WAAWC,I,YAChDxC,KAAKyC,aAAeD,EAAMC,aAC1BzC,KAAKsM,eAAetE,GAAAV,EAAA9E,EAAM5B,iBAAa,MAAA0G,SAAA,SAAAA,EAAEC,QAAI,MAAAS,SAAA,SAAAA,EAAE+D,QAAS,EACxD/L,KAAKiQ,iBACFnI,GAAAC,EAAAvF,EAAM5B,iBAAa,MAAAmH,SAAA,SAAAA,EAAER,QAAI,MAAAO,SAAA,SAAAA,EAAEoI,aAAc,GAAK,KAC/CC,QAAQ,GACVnQ,KAAKQ,MAAQgC,EAAMhC,OAAS,EAAE,GAC9B,EAGJR,KAAA4C,qBAAuB,KACrB,GAAI5C,KAAKsC,YAAa,CACpBtC,KAAKsC,a,qBApBe,M,kBACA,E,kBACA,G,WACP,E,CAqBjB,MAAAO,GACE,IAAK7C,KAAKQ,OAASR,KAAKsM,eAAiB,EAAG,CAC1C,OAAO,I,CAET,MAAM8D,EAAmBC,EAAuBrQ,KAAKsM,cACrD,OACEnJ,EAAA,OACEE,MAAOC,EACL,uBACA,uCAGFH,EAAA,KACEE,MAAOC,EACL,qBACA,qCAGD8M,EAAgB,qBAAoBpQ,KAAKiQ,aAAY,M,mBCjDnDK,EAAwB,M,mCAMjC,c,WACc,G,YACC,E,CAEjB,MAAAzN,GACE,MAAMmH,MAAEA,EAAKC,OAAEA,GAAWjK,KAC1B,OAAQA,KAAKoG,MACX,IAAK,eACH,OACEjD,EAAA,OACE6G,MAAOA,EACPC,OAAQA,EACRC,QAAQ,YACRC,KAAK,OACLI,MAAM,6BAA4B,kBAClB,qBAEhBpH,EAAA,SAAOqH,GAAG,qBAAmB,iCAC7BrH,EAAA,QACEiH,EAAE,oNACFC,OAAO,UAAS,eACH,MAAK,iBACH,QAAO,kBACN,WAIxB,IAAK,cACH,OACElH,EAAA,OACE6G,MAAOA,EACPC,OAAQA,EACRC,QAAQ,YACRC,KAAK,OACLI,MAAM,6BAA4B,kBAClB,qBAEhBpH,EAAA,SAAOqH,GAAG,qBAAmB,gCAC7BrH,EAAA,QACEiH,EAAE,oNACFC,OAAO,UAAS,eACH,MAAK,iBACH,QAAO,kBACN,WAIxB,IAAK,cACH,OACElH,EAAA,OACE6G,MAAOA,EACPC,OAAQA,EACRC,QAAQ,YACRC,KAAK,OACLI,MAAM,6BAA4B,kBAClB,qBAEhBpH,EAAA,SAAOqH,GAAG,qBAAmB,uCAG7BrH,EAAA,QACEiH,EAAE,oNACFC,OAAO,UAAS,eACH,MAAK,iBACH,QAAO,kBACN,WAIxB,IAAK,aACH,OACElH,EAAA,OACE6G,MAAOA,EACPC,OAAQA,EACRC,QAAQ,YACRC,KAAK,OACLI,MAAM,6BAA4B,kBAClB,qBAEhBpH,EAAA,SAAOqH,GAAG,qBAAmB,sCAG7BrH,EAAA,QACEiH,EAAE,oNACFC,OAAO,UAAS,eACH,MAAK,iBACH,QAAO,kBACN,WAIxB,QACE,OAAO,K,GCxGf,MAAMkG,EAA6B,+wCACnC,MAAAC,EAAeD,E,MCgBFE,EAAe,M,oEAYlBzQ,KAAAG,YAAcC,EAAoBC,WAI1CL,KAAAiC,iBAAmB,KACjBjC,KAAKsC,YAAclC,EAAoBmC,WAAWC,I,UAChD,GAAIA,EAAMhC,MAAM0G,OAAS,EAAG,CAC1BlH,KAAKoH,YAAc,KACnBpH,KAAKsM,eAAevE,GAAAC,GAAAV,EAAA9E,EAAM5B,iBAAa,MAAA0G,SAAA,SAAAA,EAAEC,QAAI,MAAAS,SAAA,SAAAA,EAAEC,QAAI,MAAAF,SAAA,SAAAA,EAAEb,SAAU,C,CAEjElH,KAAKQ,MAAQgC,EAAMhC,KAAK,GACxB,EAGJR,KAAA4C,qBAAuB,KACrB,GAAI5C,KAAKsC,YAAa,CACpBtC,KAAKsC,a,GAIDtC,KAAA0Q,YAAcjP,UACpBzB,KAAKG,YAAYwQ,cAAc,CAAC3Q,KAAK4Q,UAAW5Q,KAAK6Q,UAErD,IACE,UAAW7Q,KAAKQ,QAAU,UAAYR,KAAKQ,MAAMG,SAAW,GAAI,OACxDX,KAAKG,YAAYwB,Q,EAEzB,MAAOH,GACPqD,QAAQrD,MAAM,iBAAkBA,E,iBAvClB,IAAIoH,MAAOkI,c,aACX,K,aAEC9Q,KAAK+Q,Q,iBACD,M,WACN,G,kBACO,E,eACH/Q,KAAKgR,O,CAoC1B,iBAAAC,CAAkB1Q,GAChBP,KAAK4Q,UAAYlI,OAAOwI,SACrB3Q,EAAMU,OAA4BwH,MACnC,IAEFzI,KAAK0Q,a,CAGP,eAAAS,CAAgB5Q,GACdP,KAAK6Q,QAAUnI,OAAOwI,SACnB3Q,EAAMU,OAA4BwH,MACnC,IAEFzI,KAAK0Q,a,CAGP,MAAA7N,GACE,IAAK7C,KAAKQ,OAASR,KAAKsM,eAAiB,EAAG,CAC1C,OAAO,I,CAGT,MAAM8E,EAAWpR,KAAKgR,QACtB,MAAMK,EAAWrR,KAAK+Q,QACtB,MAAMO,GACFtR,KAAK4Q,UAAYQ,IAAaC,EAAWD,GAAa,IAC1D,MAAMG,GACFvR,KAAK6Q,QAAUO,IAAaC,EAAWD,GAAa,IAExD,OACEjO,EAAA,OAAKE,MAAM,mBACTF,EAAA,OAAKE,MAAM,WACTF,EAAA,OACEE,MAAOC,EAAW,cAAe,mCACjCiC,MAAO,CACLiM,KAAM,GAAGF,QACTtH,MAAO,GAAGuH,EAAaD,QAG3BnO,EAAA,SACEE,MAAOC,EACL,4BACA,yCAEFmO,IAAKzR,KAAKgR,QAAU,EACpBU,IAAK1R,KAAKgR,QACVW,QAAUpR,GAAUP,KAAKiR,kBAAkB1Q,GAC3C6F,KAAK,QACLqC,MAAOzI,KAAK4Q,YAEdzN,EAAA,SACEE,MAAOC,EACL,4BACA,uCAEFmO,IAAKzR,KAAK+Q,QACVW,IAAK1R,KAAKgR,QAAU,EACpBW,QAAUpR,GAAUP,KAAKmR,gBAAgB5Q,GACzC6F,KAAK,QACLqC,MAAOzI,KAAK6Q,WAGhB1N,EAAA,OACEE,MAAOC,EACL,qBACA,4CAGFH,EAAA,QACEE,MAAOC,EACL,YACA,wCAGDtD,KAAK4Q,WAERzN,EAAA,QACEE,MAAOC,EAAW,YAAa,sCAE9BtD,KAAK6Q,U,aC3IlB,MAAMe,GAAmC,0fACzC,MAAAC,GAAeD,G,MCSFE,GAAuB,M,yBAY1B9R,KAAA0L,sBAA4C,KAC5C1L,KAAAG,YAAcC,EAAoBC,WAgC1CL,KAAA2L,oBAAsB,KACpB3L,KAAK+R,SAAW,MAChB/R,KAAKG,YAAY6R,gBAAgB,CAC/BC,KAAM,QACNC,KAAM,OACN,EAGIlS,KAAAmS,aAAe1Q,UACrBzB,KAAK+R,UAAY/R,KAAK+R,SAEtB,GAAI/R,KAAKoG,OAAS,OAAQ,CACxB,MAAM6L,EAAOjS,KAAK+R,SAAW,SAAW,QACxC/R,KAAKG,YAAY6R,gBAAgB,CAC/BC,Q,MAEG,GAAIjS,KAAKoG,OAAS,OAAQ,CAC/B,MAAM8L,EAAOlS,KAAK+R,SAAW,OAAS,MACtC/R,KAAKG,YAAY6R,gBAAgB,CAC/BE,Q,CAIJ,UACQlS,KAAKG,YAAYwB,Q,CACvB,MAAOH,GACPqD,QAAQrD,MAAM,iBAAkBA,E,aAjEJ,O,cAEZ,M,WACH,G,kBACO,C,CAMxB,gBAAAS,GACEjC,KAAKsC,YAAclC,EAAoBmC,WAAWC,I,UAChDxC,KAAKQ,MAAQgC,EAAMhC,OAAS,GAC5BR,KAAKsM,eAAevE,GAAAC,GAAAV,EAAA9E,EAAM5B,iBAAa,MAAA0G,SAAA,SAAAA,EAAEC,QAAI,MAAAS,SAAA,SAAAA,EAAEC,QAAI,MAAAF,SAAA,SAAAA,EAAEb,SAAU,CAAC,IAGlElH,KAAK0L,sBAAwBvD,SAASoE,cACpC,gCAEF,GAAIvM,KAAK0L,sBAAuB,CAC9B1L,KAAK0L,sBAAsBc,iBACzB,cACAxM,KAAK2L,oB,EAKX,oBAAA/I,GACE,GAAI5C,KAAKsC,YAAa,CACpBtC,KAAKsC,a,CAEP,GAAItC,KAAK0L,sBAAuB,CAC9B1L,KAAK0L,sBAAsBc,iBACzB,cACAxM,KAAK2L,oB,EAmCX,MAAA9I,GACE,IAAK7C,KAAKQ,OAASR,KAAKsM,eAAiB,EAAG,CAC1C,OAAO,I,CAET,MAAM8F,EAAuB,iBAAiBpS,KAAK+R,SAAW,SAAW,KACzE,MAAMM,EAAoB,gBAAgBrS,KAAK+R,SAAW,SAAW,KAErE,OACE5O,EAAA,UACEE,MAAOC,EACL8O,EACA,uCAEFlM,QAASlG,KAAKmS,aACd/L,KAAK,UAELjD,EAAA,OACEE,MAAOC,EAAW+O,EAAmB,+B","ignoreList":[]}
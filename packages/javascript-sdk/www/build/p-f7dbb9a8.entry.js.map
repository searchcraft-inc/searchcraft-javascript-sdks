{"version":3,"names":["scAutoSearchFormModuleCss","ScAutoSearchFormStyle0","ScAutoSearchForm","this","debounceTimeout","debounceDelay","componentDidLoad","searchcraft","SearchcraftCore","config","searchStore","initialize","useSearchcraftStore","getState","handleInputChange","event","console","log","query","detail","clearTimeout","querySubmit","emit","setTimeout","runSearch","handleClearInput","clearInput","error","searchResults","async","trim","setQuery","search","JSON","stringify","handleFormSubmit","preventDefault","apiKey","endpointURL","index","render","formClass","rightToLeftOrientation","h","key","class","onSubmit","labelForInput","placeholderValue","inputCaptionValue","onSearchInputChange","onClearInput"],"sources":["src/components/sc-auto-search-form/sc-auto-search-form.module.scss?tag=sc-auto-search-form&encapsulation=shadow","src/components/sc-auto-search-form/sc-auto-search-form.tsx"],"sourcesContent":[":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.formLTR {\n  text-align: left;\n}\n\n.formRTL {\n  text-align: right;\n}\n\n.searchContainer {\n  align-items: center;\n  display: flex;\n}","import {\n  Component,\n  Prop,\n  State,\n  Event,\n  type EventEmitter,\n  h,\n} from '@stencil/core';\nimport {\n  type CoreConfigSDK,\n  CoreSDK as SearchcraftCore,\n} from '@searchcraft/core';\n\nimport type { ScInputCustomEvent } from '@components/sc-input/sc-input';\nimport { useSearchcraftStore } from '@provider/store';\n\n@Component({\n  tag: 'sc-auto-search-form',\n  styleUrl: 'sc-auto-search-form.module.scss',\n  shadow: true,\n})\nexport class ScAutoSearchForm {\n  @Prop() autoSearchFormClass = '';\n  @Prop() clearInput: () => void = () => {}; // Default assignment ensures no undefined error\n  @Prop() config: CoreConfigSDK = {\n    apiKey: '',\n    endpointURL: '',\n    index: [],\n  };\n  @Prop() inputCaptionValue = '';\n  @Prop() labelForInput = 'Search';\n  @Prop() placeholderValue = 'Search here';\n  @Prop() rightToLeftOrientation = false;\n  @Prop() searchContainerClass = '';\n\n  /**\n   * Event emitted when the search query changes\n   */\n  @Event() querySubmit: EventEmitter<string>;\n\n  @State() error = false;\n  @State() query = '';\n  @State() searchResults = '';\n\n  private debounceTimeout: ReturnType<typeof setTimeout> | null = null;\n  private debounceDelay = 300; // 300ms debounce delay\n\n  componentDidLoad = () => {\n    const searchcraft = new SearchcraftCore(this.config);\n    this.searchStore.initialize(searchcraft, true);\n  };\n\n  // Initialize searchStore as a private field\n  private searchStore = useSearchcraftStore.getState();\n\n  /**\n   * Handles the input change event from sc-input\n   */\n  handleInputChange = (event: ScInputCustomEvent<string>) => {\n    console.log(event);\n    this.query = event.detail; // Update the query state with input value\n\n    if (this.debounceTimeout) {\n      clearTimeout(this.debounceTimeout); // Clear any existing timeout\n    }\n\n    // Emit querySubmit immediately for real-time updates\n    this.querySubmit.emit(this.query);\n\n    // Set a new debounce timeout to execute search after delay\n    this.debounceTimeout = setTimeout(() => {\n      this.runSearch(); // Execute search logic after typing stops\n    }, this.debounceDelay);\n  };\n\n  /**\n   * Handles the clear input event from sc-input\n   */\n  handleClearInput = () => {\n    this.query = '';\n    if (typeof this.clearInput === 'function') {\n      this.clearInput();\n    }\n\n    if (this.debounceTimeout) {\n      clearTimeout(this.debounceTimeout); // Clear the debounce timeout\n    }\n\n    // Reset error and search results\n    this.error = false;\n    this.searchResults = '';\n  };\n\n  /**\n   * Runs the search logic\n   */\n  private runSearch = async () => {\n    if (this.query.trim() === '') {\n      this.error = true;\n      this.searchResults = '';\n    } else {\n      this.error = false;\n      this.searchStore.setQuery(this.query); // Set the query in the searchStore\n      await this.searchStore.search(); // Perform the search\n      this.searchResults = JSON.stringify(this.searchStore.searchResults); // Store search results as JSON\n    }\n  };\n\n  /**\n   * Handles the form submission logic\n   */\n  handleFormSubmit = async (event: Event) => {\n    event.preventDefault();\n    await this.runSearch(); // Trigger search logic on form submit\n  };\n\n  render() {\n    const formClass = this.rightToLeftOrientation ? 'formRTL' : 'formLTR';\n\n    return (\n      <form class={`${formClass}`} onSubmit={this.handleFormSubmit}>\n        <label>{this.labelForInput}</label>\n        <div class='searchContainer'>\n          <sc-input\n            placeholder-value={this.placeholderValue}\n            query={this.query}\n            input-caption-value={this.inputCaptionValue}\n            right-to-left-orientation={this.rightToLeftOrientation}\n            onSearchInputChange={this.handleInputChange}\n            onClearInput={this.handleClearInput}\n          />\n        </div>\n        {this.error && <p class='error'>Please enter a search query.</p>}\n        {this.searchResults && <pre class='results'>{this.searchResults}</pre>}\n      </form>\n    );\n  }\n}\n"],"mappings":"6FAAA,MAAMA,EAA4B,uJAClC,MAAAC,EAAeD,E,MCoBFE,EAAgB,M,kEAuBnBC,KAAAC,gBAAwD,KACxDD,KAAAE,cAAgB,IAExBF,KAAAG,iBAAmB,KACjB,MAAMC,EAAc,IAAIC,EAAgBL,KAAKM,QAC7CN,KAAKO,YAAYC,WAAWJ,EAAa,KAAK,EAIxCJ,KAAAO,YAAcE,EAAoBC,WAK1CV,KAAAW,kBAAqBC,IACnBC,QAAQC,IAAIF,GACZZ,KAAKe,MAAQH,EAAMI,OAEnB,GAAIhB,KAAKC,gBAAiB,CACxBgB,aAAajB,KAAKC,gB,CAIpBD,KAAKkB,YAAYC,KAAKnB,KAAKe,OAG3Bf,KAAKC,gBAAkBmB,YAAW,KAChCpB,KAAKqB,WAAW,GACfrB,KAAKE,cAAc,EAMxBF,KAAAsB,iBAAmB,KACjBtB,KAAKe,MAAQ,GACb,UAAWf,KAAKuB,aAAe,WAAY,CACzCvB,KAAKuB,Y,CAGP,GAAIvB,KAAKC,gBAAiB,CACxBgB,aAAajB,KAAKC,gB,CAIpBD,KAAKwB,MAAQ,MACbxB,KAAKyB,cAAgB,EAAE,EAMjBzB,KAAAqB,UAAYK,UAClB,GAAI1B,KAAKe,MAAMY,SAAW,GAAI,CAC5B3B,KAAKwB,MAAQ,KACbxB,KAAKyB,cAAgB,E,KAChB,CACLzB,KAAKwB,MAAQ,MACbxB,KAAKO,YAAYqB,SAAS5B,KAAKe,aACzBf,KAAKO,YAAYsB,SACvB7B,KAAKyB,cAAgBK,KAAKC,UAAU/B,KAAKO,YAAYkB,c,GAOzDzB,KAAAgC,iBAAmBN,MAAOd,IACxBA,EAAMqB,uBACAjC,KAAKqB,WAAW,E,yBA3FM,G,gBACG,O,YACD,CAC9Ba,OAAQ,GACRC,YAAa,GACbC,MAAO,I,uBAEmB,G,mBACJ,S,sBACG,c,4BACM,M,0BACF,G,WAOd,M,WACA,G,mBACQ,E,CA0EzB,MAAAC,GACE,MAAMC,EAAYtC,KAAKuC,uBAAyB,UAAY,UAE5D,OACEC,EAAA,QAAAC,IAAA,2CAAMC,MAAO,GAAGJ,IAAaK,SAAU3C,KAAKgC,kBAC1CQ,EAAA,SAAAC,IAAA,4CAAQzC,KAAK4C,eACbJ,EAAA,OAAAC,IAAA,2CAAKC,MAAM,mBACTF,EAAA,YAAAC,IAAA,+DACqBzC,KAAK6C,iBACxB9B,MAAOf,KAAKe,MAAK,sBACIf,KAAK8C,kBAAiB,4BAChB9C,KAAKuC,uBAChCQ,oBAAqB/C,KAAKW,kBAC1BqC,aAAchD,KAAKsB,oBAGtBtB,KAAKwB,OAASgB,EAAA,KAAAC,IAAA,2CAAGC,MAAM,SAAO,gCAC9B1C,KAAKyB,eAAiBe,EAAA,OAAAC,IAAA,2CAAKC,MAAM,WAAW1C,KAAKyB,e","ignoreList":[]}
{"file":"sc-base-search-results.entry.esm.js","mappings":";;;;AAAA,MAAM,4BAA4B,GAAG,kRAAkR;;MCU1S,mBAAmB;;;qBACb,EAAE;6BAC2B,IAAI;;IAGlD,gBAAgB;;QAEd,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC,SAAS,CAAC,CAAC,KAAK;YACrD,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YACrC,IAAI,CAAC,aAAa,qBAAQ,KAAK,CAAC,aAAa,CAAE,CAAC;YAChD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;SAC1B,CAAC,CAAC;;QAGH,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,GAAG,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QAChE,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;IAED,MAAM;;QACJ,IAAI,EAAC,MAAA,IAAI,CAAC,aAAa,0CAAE,IAAI,CAAA,EAAE;YAC7B,OAAO,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;YACjD,OAAO,wCAAiC,CAAC;SAC1C;QACD,QACE,WAAK,KAAK,EAAC,kBAAkB,IAC1B,MAAA,MAAA,MAAA,IAAI,CAAC,aAAa,0CAAE,IAAI,0CAAE,IAAI;eAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK;gBACnD,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,QAAQ,CAAC;gBACjC,QACE,6BACE,GAAG,EAAE,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,IAAI,KAAK,EAAE,kBAChB,WAAW,iBACX,MAAM,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,wBACjC,MAAM,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,wBACpC,IAAI,eACb,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,yBACJ,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,oBACrB,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,uBACV,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,YAAY,GACvC,EACF;aACH,CAAC,EACD,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;YACpB,CAAA,MAAA,MAAA,MAAA,IAAI,CAAC,aAAa,0CAAE,IAAI,0CAAE,IAAI,0CAAE,MAAM,MAAK,CAAC,KAC1C,yCACiB,gCAAgC,IAAI,CAAC,KAAK,SAAS,GAClE,CACH,CACC,EACN;KACH;;;;;;","names":[],"sources":["src/components/sc-base-search-results/sc-base-search-results.module.scss?tag=sc-base-search-results&encapsulation=shadow","src/components/sc-base-search-results/sc-base-search-results.tsx"],"sourcesContent":[":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.resultsContainer {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 100px 20px;\n\n  & > p {\n    align-self: center;\n  }\n\n  & > div {\n    margin-bottom: 20px;\n    img {\n      height: 300px;\n      width: 200px;\n    }\n  }\n}\n","import { Component, h, State } from '@stencil/core';\nimport type { SearchResult } from '@searchcraft/core';\n\nimport { useSearchcraftStore } from '@provider/store';\n\n@Component({\n  tag: 'sc-base-search-results',\n  styleUrl: 'sc-base-search-results.module.scss',\n  shadow: true,\n})\nexport class ScBaseSearchResults {\n  @State() query = '';\n  @State() searchResults: SearchResult | null = null;\n  private unsubscribe: () => void;\n\n  componentDidLoad() {\n    // Subscribe to state changes\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      console.log('Store updated:', state);\n      this.searchResults = { ...state.searchResults };\n      this.query = state.query;\n    });\n\n    // Fetch initial state\n    const { searchResults, query } = useSearchcraftStore.getState();\n    console.log('Initial state:', searchResults, query);\n    this.searchResults = searchResults;\n    this.query = query;\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  render() {\n    if (!this.searchResults?.data) {\n      console.warn('No search results data available');\n      return <div>No results to display.</div>;\n    }\n    return (\n      <div class='resultsContainer'>\n        {this.searchResults?.data?.hits?.map((document, index) => {\n          const { doc: result } = document;\n          return (\n            <sc-base-search-result\n              key={`${result?.id}-${index}`}\n              button-label='View More'\n              callback-fn={() => console.log('interactive element')}\n              button-callback-fn={() => console.log('button callback')}\n              interactive-result={true}\n              image-src={result?.poster}\n              result-body-content={result?.overview}\n              result-heading={result?.title}\n              result-subheading={result?.release_date}\n            />\n          );\n        })}\n        {this.query.length > 0 &&\n          this.searchResults?.data?.hits?.length === 0 && (\n            <sc-error-message\n              error-message={`No search results found for \"${this.query}\" query`}\n            />\n          )}\n      </div>\n    );\n  }\n}\n"],"version":3}
{"version":3,"names":["searchcraftAutoSearchFormModuleCss","SearchcraftAutoSearchFormStyle0","SearchcraftAutoSearchForm","this","debounceTimeout","debounceDelay","searchStore","useSearchcraftStore","getState","handleInputChange","event","query","detail","setQuery","querySubmit","emit","handleInputKeyUp","target","clearTimeout","setTimeout","trim","runSearch","handleClearInput","clearInput","error","searchResults","async","search","JSON","stringify","handleFormSubmit","preventDefault","apiKey","endpointURL","index","componentDidLoad","searchcraft","SearchcraftCore","config","initialize","unsubscribe","subscribe","state","isRequesting","disconnectedCallback","render","formClass","rightToLeftOrientation","parsedCustomStyles","parseCustomStyles","customStylesForInput","h","key","class","onSubmit","label","labelForInput","customStyles","inputCaptionValue","inputIconHeight","inputIconWidth","onClearInput","onInputKeyUp","onSearchInputChange","placeholderValue","errorMessage","searchcraftBaseSearchResultModuleCss","SearchcraftBaseSearchResultStyle0","SearchcraftBaseSearchResult","buttonCallback","keyDownCallback","resultCallback","handleButtonClick","handleContainerClick","isInteractive","parseStyles","parse","console","isLightTheme","themeMode","styles","style","container","tabindex","onClick","onKeyDown","alt","imageDescription","src","imageSource","image","heading","headingText","subheading","subheadingText","primaryContent","secondaryContent","tertiaryContent","buttonText","button","type","searchcraftBaseSearchResultsModuleCss","SearchcraftBaseSearchResultsStyle0","SearchcraftBaseSearchResults","documentAttributesForDisplay","length","warn","hasSearched","Object","assign","timeAgo","timestamp","now","Date","inputTime","diffInSeconds","Math","floor","getTime","minutes","hours","days","years","parsedSearchKeys","parseSearchKeys","serializedStyles","customStylesForResults","serializeStyles","resultsComponents","_c","_b","_a","data","hits","map","document","doc","result","dynamicProperties","extractDynamicProperties","formatTime","value","Number","isNaN","document_id","log","finalComponents","placeAdAtStart","push","adInterval","forEach","component","placeAdAtEnd","_f","_e","_d","SearchcraftClearIconSet","width","height","viewBox","fill","xmlns","id","d","stroke","searchcraftClearInputButtonModuleCss","SearchcraftClearInputButtonStyle0","SearchcraftClearInputButton","handleClearClick","theme","classNames","searchcraftErrorMessageModuleCss","SearchcraftErrorMessageStyle0","SearchcraftErrorMessage","errorMessageStyle","searchcraftFiltersListModuleCss","SearchcraftFiltersListStyle0","SearchcraftFiltersList","handleFilterChange","checked","selectedFilters","add","delete","selectedFiltersArray","Array","from","filtersUpdated","setSelectedFilters","Set","connectedCallback","resultsCount","facets","populateFiltersFromFacets","newFilters","entries","section","counts","count","filterValue","originalFilterCounts","replace","updatedFilters","initialFilters","filter","some","initial","dynamicFilters","formatLabel","split","word","charAt","toUpperCase","slice","join","filtersToRender","initialFilter","isChecked","has","dynamicChildren","dynamicFilter","startsWith","children","onChange","childFilter","childLabel","pop","marginLeft","searchcraftInputModuleCss","SearchcraftInputStyle0","SearchcraftInput","input","searchInputChange","inputKeyUp","containerClassName","inputClassName","validatedCustomStyles","placeholderStyle","fontSize","placeholderFontSize","formClassName","Fragment","autoComplete","bind","onKeyUp","placeholder","inputCaptionClassName","searchcraftInputCaptionModuleCss","SearchcraftInputCaptionStyle0","SearchcraftInputCaption","searchcraftInputIconModuleCss","SearchcraftInputIconStyle0","SearchcraftInputIcon","searchcraftInputLabelModuleCss","SearchcraftInputLabelStyle0","SearchcraftInputLabel","labelStyle","inputLabelClassName","htmlFor","searchcraftResultsInfoModuleCss","SearchcraftResultsInfoStyle0","SearchcraftResultsInfo","responseTime","time_taken","toFixed","SearchcraftSearchIconSet","searchcraftSliderModuleCss","SearchcraftSliderStyle0","SearchcraftSlider","updateYears","setYearsRange","startYear","endYear","handleStartYearChange","parseInt","min","handleEndYearChange","max","getFullYear","maxYear","minYear","onInput","step","searchcraftSpinnerDarkModuleCss","SearchcraftSpinnerDarkStyle0","SearchcraftSpinnerDark","searchcraftSpinnerLightModuleCss","SearchcraftSpinnerLightStyle0","SearchcraftSpinnerLight","searchcraftToggleButtonModuleCss","SearchcraftToggleButtonStyle0","SearchcraftToggleButton","handleToggle","isActive","mode","setSearchParams","sort"],"sources":["src/components/searchcraft-auto-search-form/searchcraft-auto-search-form.module.scss?tag=searchcraft-auto-search-form&encapsulation=shadow","src/components/searchcraft-auto-search-form/searchcraft-auto-search-form.tsx","src/components/searchcraft-base-search-result/searchcraft-base-search-result.module.scss?tag=searchcraft-base-search-result&encapsulation=shadow","src/components/searchcraft-base-search-result/searchcraft-base-search-result.tsx","src/components/searchcraft-base-search-results/searchcraft-base-search-results.module.scss?tag=searchcraft-base-search-results&encapsulation=shadow","src/components/searchcraft-base-search-results/searchcraft-base-search-results.tsx","src/assets/searchcraft-clear-icon-set.tsx","src/components/searchcraft-clear-input-button/searchcraft-clear-input-button.module.scss?tag=searchcraft-clear-input-button&encapsulation=shadow","src/components/searchcraft-clear-input-button/searchcraft-clear-input-button.tsx","src/components/searchcraft-error-message/searchcraft-error-message.module.scss?tag=searchcraft-error-message&encapsulation=shadow","src/components/searchcraft-error-message/searchcraft-error-message.tsx","src/components/searchcraft-filters-list/searchcraft-filters-list.module.scss?tag=searchcraft-filters-list&encapsulation=shadow","src/components/searchcraft-filters-list/searchcraft-filters-list.tsx","src/components/searchcraft-input/searchcraft-input.module.scss?tag=searchcraft-input&encapsulation=shadow","src/components/searchcraft-input/searchcraft-input.tsx","src/components/searchcraft-input-caption/searchcraft-input-caption.module.scss?tag=searchcraft-input-caption&encapsulation=shadow","src/components/searchcraft-input-caption/searchcraft-input-caption.tsx","src/components/searchcraft-input-icon/searchcraft-input-icon.module.scss?tag=searchcraft-input-icon&encapsulation=shadow","src/components/searchcraft-input-icon/searchcraft-input-icon.tsx","src/components/searchcraft-input-label/searchcraft-input-label.module.scss?tag=searchcraft-input-label&encapsulation=shadow","src/components/searchcraft-input-label/searchcraft-input-label.tsx","src/components/searchcraft-results-info/searchcraft-results-info.module.scss?tag=searchcraft-results-info&encapsulation=shadow","src/components/searchcraft-results-info/searchcraft-results-info.tsx","src/assets/searchcraft-search-icon-set.tsx","src/components/searchcraft-slider/searchcraft-slider.module.scss?tag=searchcraft-slider&encapsulation=shadow","src/components/searchcraft-slider/searchcraft-slider.tsx","src/components/searchcraft-spinner-dark/searchcraft-spinner-dark.module.scss?tag=searchcraft-spinner-dark&encapsulation=shadow","src/components/searchcraft-spinner-dark/searchcraft-spinner-dark.tsx","src/components/searchcraft-spinner-light/searchcraft-spinner-light.module.scss?tag=searchcraft-spinner-light&encapsulation=shadow","src/components/searchcraft-spinner-light/searchcraft-spinner-light.tsx","src/components/searchcraft-toggle-button/searchcraft-toggle-button.module.scss?tag=searchcraft-toggle-button&encapsulation=shadow","src/components/searchcraft-toggle-button/searchcraft-toggle-button.tsx"],"sourcesContent":[":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.formLTR {\n  text-align: left;\n  width: 100%;\n}\n\n.formRTL {\n  text-align: right;\n  width: 100%;\n}","import {\n  Component,\n  Prop,\n  State,\n  Event,\n  type EventEmitter,\n  h,\n} from '@stencil/core';\nimport {\n  type CoreConfigSDK,\n  CoreSDK as SearchcraftCore,\n} from '@searchcraft/core';\n\nimport type { ScInputCustomEvent } from '@components/searchcraft-input/searchcraft-input';\nimport { parseCustomStyles } from '@utils/utils';\nimport { useSearchcraftStore } from '@provider/store';\n\n@Component({\n  tag: 'searchcraft-auto-search-form',\n  styleUrl: 'searchcraft-auto-search-form.module.scss',\n  shadow: true,\n})\nexport class SearchcraftAutoSearchForm {\n  @Prop() autoSearchFormClass = '';\n  @Prop() clearInput: () => void = () => {};\n  @Prop() config: CoreConfigSDK = {\n    apiKey: '',\n    endpointURL: '',\n    index: [],\n  };\n  @Prop() customStylesForInput: string | Record<string, string> = {};\n  @Prop() inputCaptionValue = '';\n  @Prop() inputIconHeight = 20;\n  @Prop() inputIconWidth = 20;\n  @Prop() labelForInput = '';\n  @Prop() placeholderValue = 'Search here';\n  @Prop() rightToLeftOrientation = false;\n  @Prop() searchContainerClass = '';\n\n  @Event() querySubmit: EventEmitter<string>;\n\n  @State() error = false;\n  @State() isRequesting = false;\n  @State() query = '';\n  @State() searchResults = '';\n\n  private debounceTimeout: ReturnType<typeof setTimeout> | null = null;\n  private debounceDelay = 0;\n  private searchStore = useSearchcraftStore.getState();\n  unsubscribe: () => void;\n\n  componentDidLoad() {\n    const searchcraft = new SearchcraftCore(this.config);\n    this.searchStore.initialize(searchcraft, true);\n\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      this.isRequesting = state.isRequesting;\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  handleInputChange = (event: ScInputCustomEvent<string>) => {\n    this.query = event.detail;\n    this.searchStore.setQuery(this.query); // Update query in the store\n    this.querySubmit.emit(this.query);\n  };\n\n  handleInputKeyUp = (event: ScInputCustomEvent<string>) => {\n    const target = event.detail;\n    this.query = target;\n    this.searchStore.setQuery(this.query); // Update query in the store\n    this.querySubmit.emit(this.query);\n\n    if (this.debounceTimeout) {\n      clearTimeout(this.debounceTimeout);\n    }\n\n    this.debounceTimeout = setTimeout(() => {\n      this.query.trim() !== '' && this.runSearch();\n    }, this.debounceDelay);\n  };\n\n  handleClearInput = () => {\n    this.query = '';\n    this.searchStore.setQuery(''); // Clear query in the store\n\n    if (typeof this.clearInput === 'function') {\n      this.clearInput();\n    }\n\n    if (this.debounceTimeout) {\n      clearTimeout(this.debounceTimeout);\n    }\n\n    this.error = false;\n    this.searchResults = '';\n  };\n\n  private runSearch = async () => {\n    if (this.query.trim() === '') {\n      this.error = true;\n      this.searchResults = '';\n    } else {\n      this.error = false;\n      this.searchStore.setQuery(this.query);\n\n      try {\n        await this.searchStore.search();\n        this.searchResults = JSON.stringify(this.searchStore.searchResults);\n      } catch (error) {\n        this.error = true;\n      }\n    }\n  };\n\n  handleFormSubmit = async (event: Event) => {\n    event.preventDefault();\n    await this.runSearch();\n  };\n\n  render() {\n    const formClass = this.rightToLeftOrientation ? 'formRTL' : 'formLTR';\n    const parsedCustomStyles = parseCustomStyles(this.customStylesForInput);\n    return (\n      <form class={`${formClass}`} onSubmit={this.handleFormSubmit}>\n        <searchcraft-input-label label={this.labelForInput} />\n        <searchcraft-input\n          customStyles={parsedCustomStyles}\n          input-caption-value={this.inputCaptionValue}\n          is-requesting={this.isRequesting}\n          input-icon-height={this.inputIconHeight}\n          input-icon-width={this.inputIconWidth}\n          onClearInput={this.handleClearInput}\n          onInputKeyUp={this.handleInputKeyUp}\n          onSearchInputChange={this.handleInputChange}\n          placeholder-value={this.placeholderValue}\n          query={this.query}\n          right-to-left-orientation={this.rightToLeftOrientation}\n        />\n        {this.error && (\n          <searchcraft-error-message errorMessage='Please enter a search query.' />\n        )}\n      </form>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin interactive-result-container-base {\n  align-items: flex-start;\n  border-radius: 16px;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  gap: 16px;\n  padding: 8px;\n\n  @media (min-width: 600px) {\n    flex-direction: row;\n  }\n}\n\n.interactiveResultContainerLight {\n  background-color: $light-search-result-container-background;\n  @include interactive-result-container-base;\n}\n\n.interactiveResultContainerDark {\n  background-color: $dark-search-result-container-background;\n  @include interactive-result-container-base;\n}\n\n.resultContainer {\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media (min-width: 600px) {\n    flex-direction: row;\n  }\n}\n\n.interactiveIconLarge {\n  display: inline-block;\n  position: absolute;\n  right: 5px;\n  top: 8px;\n\n\n  @media (max-width: 600px) {\n   display: none;\n  }\n}\n\n.interactiveIconSmall {\n  position: absolute;\n  right: 5px;\n  top: -2px;\n  display: inline-block;\n\n\n  @media (min-width: 600px) {\n   display: none;\n  }\n}\n\n.imageContainer {\n  max-width: 100%;\n}\n\n.contentContainer {\n  max-height: 100%;\n  max-width: 100%;\n\n  @media (min-width: 600px) {\n    max-width: 50%;\n  }\n}\n\n.secondaryContentContainer {\n  display: flex;\n\n}\n\n@mixin image-base {\n  aspect-ratio: 2 / 1;\n  border-radius: 8px;\n  max-height: 100%;\n  max-width: 100%;\n}\n\n.imageLight {\n  @include image-base;\n  border: 1px solid $light-search-result-image-border;\n}\n\n.imageDark {\n  @include image-base;\n  border: 1px solid $dark-search-result-image-border;\n}\n\n@mixin heading-base {\n  font-family: var(--font-stack);\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 20px;\n  margin-bottom: 4px;\n  margin-top: 0px;\n  position: relative;\n}\n\n.headingLight {\n  @include heading-base;\n  color: $light-search-result-heading-color;\n}\n\n.headingDark {\n  @include heading-base;\n  color: $dark-search-result-heading-color;\n}\n\n@mixin subheading-base {\n  font-family: var(--font-stack);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-bottom: 4px;\n  margin-top: 0px;\n}\n\n.subheadingLight {\n  @include subheading-base;\n  color: $light-search-result-subheading-color;\n}\n\n.subheadingDark {\n  @include subheading-base;\n  color: $dark-search-result-subheading-color\n}\n\n@mixin body-content-base {\n  font-family: var(--font-stack);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 20px;\n  margin-bottom: 4px;\n  margin-top: 0px;\n}\n\n.primaryContentLight {\n  @include body-content-base;\n  color: $light-search-result-body-content-color;\n}\n\n.primaryContentDark {\n  @include body-content-base;\n  color: $dark-search-result-body-content-color;\n}\n\n.secondaryContentLight {\n  @include body-content-base;\n  color: $light-search-result-body-content-color;\n}\n\n.secondaryContentLight::after {\n  content: \"•\";\n  color: $light-search-result-body-content-color;\n  font-size: 1em;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n\n.secondaryContentDark {\n  @include body-content-base;\n  color: $dark-search-result-body-content-color;\n}\n\n.tertiaryContentLight {\n  @include body-content-base;\n  color: $light-search-result-body-content-color;\n}\n\n.tertiaryContentDark {\n  @include body-content-base;\n  color: $dark-search-result-body-content-color;\n}","import { Component, Event, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-base-search-result',\n  styleUrl: 'searchcraft-base-search-result.module.scss',\n  shadow: true,\n})\nexport class SearchcraftBaseSearchResult {\n  @Prop() buttonText = ''; // Label for the button\n  @Prop() imageDescription = ''; // Alternative text for the image\n  @Prop() imageSource = ''; // Source URL for the image\n  @Prop() isInteractive = false; // Determines if the result is interactive\n  @Prop() primaryContent = ''; // Primary body content\n  @Prop() secondaryContent = ''; // Secondary body content\n  @Prop() tertiaryContent = ''; // Tertiary body content\n  @Prop() headingText = ''; // Text for the heading\n  @Prop() subheadingText = ''; // Text for the subheading\n  @Prop() themeMode: 'light' | 'dark' = 'light'; // Light or dark theme context\n  @Prop() customStyles = '{}'; // New string prop for serialized styles.\n\n  @Event() buttonCallback: () => void = () => {}; // Callback for button click\n  @Event() keyDownCallback: () => void = () => {}; // Callback for key down event\n  @Event() resultCallback: () => void = () => {}; // Callback for result container click\n\n  private handleButtonClick = () => {\n    this.buttonCallback();\n  };\n\n  private handleContainerClick = () => {\n    if (this.isInteractive) {\n      this.resultCallback();\n    }\n  };\n\n  private parseStyles(): Record<string, { [key: string]: string }> {\n    try {\n      return JSON.parse(this.customStyles);\n    } catch (error) {\n      console.error('Error parsing custom styles:', error);\n      return {};\n    }\n  }\n\n  render() {\n    const isLightTheme = this.themeMode === 'light';\n    const styles = this.parseStyles();\n\n    return (\n      <div\n        class={\n          this.isInteractive\n            ? isLightTheme\n              ? 'interactiveResultContainerLight'\n              : 'interactiveResultContainerDark'\n            : 'resultContainer'\n        }\n        style={styles.container || {}}\n        tabindex='0'\n        onClick={this.handleContainerClick}\n        onKeyDown={this.keyDownCallback}\n      >\n        <div class='imageContainer'>\n          <img\n            alt={this.imageDescription}\n            src={this.imageSource}\n            style={styles.image || {}}\n            class={isLightTheme ? 'imageLight' : 'imageDark'}\n          />\n        </div>\n        <div class='contentContainer'>\n          <h2\n            style={styles.heading || {}}\n            class={isLightTheme ? 'headingLight' : 'headingDark'}\n          >\n            {this.headingText}\n          </h2>\n          <h3\n            style={styles.subheading || {}}\n            class={isLightTheme ? 'subheadingLight' : 'subheadingDark'}\n          >\n            {this.subheadingText}\n          </h3>\n          <p\n            style={styles.primaryContent || {}}\n            class={isLightTheme ? 'primaryContentLight' : 'primaryContentDark'}\n          >\n            {this.primaryContent}\n          </p>\n          <div class='secondaryContentContainer'>\n            <p\n              style={styles.secondaryContent || {}}\n              class={\n                isLightTheme ? 'secondaryContentLight' : 'secondaryContentDark'\n              }\n            >\n              {this.secondaryContent}\n            </p>\n            <p\n              style={styles.tertiaryContent || {}}\n              class={\n                isLightTheme ? 'tertiaryContentLight' : 'tertiaryContentDark'\n              }\n            >\n              {this.tertiaryContent}\n            </p>\n          </div>\n          {this.buttonText && (\n            <button\n              onClick={this.handleButtonClick}\n              style={styles.button || {}}\n              type='button'\n            >\n              {this.buttonText}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n",":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.resultsContainer {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 16px 20px;\n\n  & > p {\n    align-self: center;\n  }\n\n  & > div {\n    margin-bottom: 20px;\n    img {\n      height: 300px;\n      width: 200px;\n    }\n  }\n}\n\n.adSection {\n  align-items: center;\n  background-color: #F1F1F1;\n  border: 1px solid #DCDDDE;\n  border-radius: 16px;\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  justify-content: center;\n  margin: auto;\n  min-height: 150px;\n  text-align: center;\n  width: 100%;\n\n  p {\n    margin-top: 5px;\n  }\n}\n\n.emptyState {\n  text-align: center;\n}\n\n.errorMessageContainer {\n  text-align: center;\n}\n","import { Component, h, Prop, State } from '@stencil/core';\nimport type { SearchcraftResponse } from '@searchcraft/core';\n\nimport { useSearchcraftStore } from '@provider/store';\nimport {\n  extractDynamicProperties,\n  parseSearchKeys,\n  serializeStyles,\n} from '@utils/utils';\n\n@Component({\n  tag: 'searchcraft-base-search-results',\n  styleUrl: 'searchcraft-base-search-results.module.scss',\n  shadow: true,\n})\nexport class SearchcraftBaseSearchResults {\n  @State() query = '';\n  @State() searchResults: SearchcraftResponse | null = null;\n  @State() hasSearched = false;\n\n  @Prop() documentAttributesForDisplay = '';\n  @Prop() customStylesForResults:\n    | string\n    | Record<string, Record<string, string>> = {};\n  @Prop() placeAdAtStart = true;\n  @Prop() placeAdAtEnd = false;\n  @Prop() adInterval = 4;\n  @Prop() formatTime = true;\n  @Prop() fallbackElement: HTMLElement | null = null;\n\n  private unsubscribe: () => void;\n\n  componentDidLoad() {\n    if (\n      !this.documentAttributesForDisplay ||\n      this.documentAttributesForDisplay.length === 0\n    ) {\n      console.warn('No document attributes provided; using empty keys array.');\n      this.documentAttributesForDisplay = '';\n    }\n\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      if (state.query.length > 0) {\n        this.hasSearched = true;\n      }\n      this.searchResults = { ...state.searchResults };\n      this.query = state.query;\n    });\n\n    const { searchResults, query } = useSearchcraftStore.getState();\n    this.searchResults = searchResults;\n    this.query = query;\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  timeAgo(timestamp: string): string {\n    const now = new Date();\n    const inputTime = new Date(timestamp);\n    const diffInSeconds = Math.floor(\n      (now.getTime() - inputTime.getTime()) / 1000,\n    );\n\n    const minutes = Math.floor(diffInSeconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const years = Math.floor(days / 365);\n\n    if (minutes < 60) {\n      return `${minutes}m ago`;\n    }\n    if (hours < 24) {\n      return `${hours}h ago`;\n    }\n    if (days < 365) {\n      return `${days}d ago`;\n    }\n    return `${years}y ago`;\n  }\n\n  render() {\n    if (!this.hasSearched) {\n      return (\n        <div class='emptyState'>\n          <slot />\n        </div>\n      );\n    }\n\n    const parsedSearchKeys = parseSearchKeys(this.documentAttributesForDisplay);\n    const serializedStyles =\n      typeof this.customStylesForResults === 'string'\n        ? this.customStylesForResults\n        : serializeStyles(this.customStylesForResults);\n\n    const resultsComponents = this.searchResults?.data?.hits?.map(\n      (document, index) => {\n        const { doc: result } = document;\n        const dynamicProperties = extractDynamicProperties(\n          result,\n          parsedSearchKeys,\n        );\n\n        // Apply timeAgo formatting if formatTime is true\n        if (this.formatTime) {\n          for (const key of parsedSearchKeys) {\n            if (dynamicProperties[key]) {\n              const value = dynamicProperties[key];\n              // Check if the value is a valid ISO timestamp\n              if (\n                typeof value === 'string' &&\n                !Number.isNaN(Date.parse(value))\n              ) {\n                dynamicProperties[key] = this.timeAgo(value);\n              }\n            }\n          }\n        }\n\n        return (\n          <searchcraft-base-search-result\n            key={`${document.document_id}-${index}`}\n            button-callback={() => console.log('button callback')}\n            result-callback={() => console.log('interactive element')}\n            keydown-callback={() => console.log('keydown')}\n            is-interactive={true}\n            heading-text={dynamicProperties[parsedSearchKeys[0]]}\n            subheading-text={dynamicProperties[parsedSearchKeys[1]]}\n            primary-content={dynamicProperties[parsedSearchKeys[2]]}\n            secondary-content={dynamicProperties[parsedSearchKeys[3]]}\n            tertiary-content={dynamicProperties[parsedSearchKeys[4]]}\n            image-source={\n              dynamicProperties[parsedSearchKeys[parsedSearchKeys.length - 1]]\n            }\n            custom-styles={serializedStyles}\n          />\n        );\n      },\n    );\n\n    const finalComponents: JSX.Element[] = [];\n\n    if (this.placeAdAtStart) {\n      finalComponents.push(\n        <div key='ad-section-start' class='adSection'>\n          <span>##</span>\n          <p> Ad Impressions</p>\n        </div>,\n      );\n    }\n\n    if (this.adInterval > 0) {\n      resultsComponents.forEach((component, index) => {\n        finalComponents.push(component);\n        if ((index + 1) % this.adInterval === 0) {\n          finalComponents.push(\n            <div key={`ad-section-${index + 1}`} class='adSection'>\n              <span>##</span>\n              <p> Ad Impressions</p>\n            </div>,\n          );\n        }\n      });\n    } else {\n      finalComponents.push(...resultsComponents);\n    }\n\n    if (this.placeAdAtEnd) {\n      finalComponents.push(\n        <div key='ad-section-end' class='adSection'>\n          <span>##</span>\n          <p> Ad Impressions</p>\n        </div>,\n      );\n    }\n\n    return (\n      <div class='resultsContainer'>\n        {finalComponents}\n        {this.query.length > 0 &&\n          this.searchResults?.data?.hits?.length === 0 && (\n            <div class='errorMessageContainer'>\n              <searchcraft-error-message\n                error-message={`No search results found for \"${this.query}\" query`}\n              />\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-clear-icon-set',\n  shadow: true,\n})\nexport class SearchcraftClearIconSet {\n  /**\n   * Type of the icon to display.\n   * Options: 'clear-light', 'clear-dark', 'arrow-light', 'arrow-dark'\n   */\n  @Prop() type: 'clear-light' | 'clear-dark' | 'arrow-light' | 'arrow-dark' =\n    'clear-light';\n\n  render() {\n    switch (this.type) {\n      case 'clear-light':\n        return (\n          <svg\n            width='22'\n            height='22'\n            viewBox='0 0 22 22'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='icon-title'\n          >\n            <title id='icon-title'>Searchcraft Clear Input Icon Light</title>\n            <path\n              d='M14 8L8 14M8 8L14 14M21 11C21 16.5228 16.5228 21 11 21C5.47715 21 1 16.5228 1 11C1 5.47715 5.47715 1 11 1C16.5228 1 21 5.47715 21 11Z'\n              stroke='black'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'clear-dark':\n        return (\n          <svg\n            width='22'\n            height='22'\n            viewBox='0 0 22 22'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='icon-title'\n          >\n            <title id='icon-title'>Searchcraft Clear Input Icon Dark</title>\n            <path\n              d='M14 8L8 14M8 8L14 14M21 11C21 16.5228 16.5228 21 11 21C5.47715 21 1 16.5228 1 11C1 5.47715 5.47715 1 11 1C16.5228 1 21 5.47715 21 11Z'\n              stroke='white'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'arrow-light':\n        return (\n          <svg\n            width='20'\n            height='21'\n            viewBox='0 0 20 21'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='icon-title'\n          >\n            <title id='icon-title'>Searchcraft Arrow Right Icon Light</title>\n            <path\n              d='M7.5 15.0444L12.5 10.0444L7.5 5.04443'\n              stroke='#737373'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'arrow-dark':\n        return (\n          <svg\n            width='8'\n            height='12'\n            viewBox='0 0 8 12'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='icon-title'\n          >\n            <title id='icon-title'>Searchcraft Arrow Right Icon Dark</title>\n            <path\n              d='M1.5 11L6.5 6L1.5 1'\n              stroke='#BFBFBF'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n\n      default:\n        return null;\n    }\n  }\n}\n",":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.inputClearButtonLTR {\n  align-items: center;\n  background: none;\n  border: none;\n  display: flex;\n  height: 20px;\n  justify-content: center;\n  padding: 0;\n  position: absolute;\n  right: 25px;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 20px;\n}\n\n.inputClearButtonRTL {\n  align-items: center;\n  background: none;\n  border: none;\n  display: flex;\n  height: 20px;\n  justify-content: center;\n  left: 25px;\n  padding: 0;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 20px;\n}","import {\n  Component,\n  Event,\n  type EventEmitter,\n  Prop,\n  h,\n  State,\n} from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-clear-input-button',\n  styleUrl: 'searchcraft-clear-input-button.module.scss',\n  shadow: true,\n})\nexport class SearchcraftClearInputButton {\n  @Prop() isRequesting? = false;\n  @Prop() rightToLeftOrientation = false;\n\n  // Updated `clearInput` to an EventEmitter\n  @Event() clearInput: EventEmitter<void>;\n\n  @State() theme = 'light';\n\n  private isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  // Added a click handler to emit the event\n  private handleClearClick = (event: MouseEvent) => {\n    event.preventDefault(); // Prevent default if necessary\n    this.clearInput.emit(); // Emit the event\n  };\n\n  render() {\n    return this.rightToLeftOrientation ? (\n      <button\n        class={classNames('inputClearButtonRTL', '.sc-clear-input-button-rtl')}\n        onClick={this.handleClearClick}\n        type='button'\n      >\n        {this.isRequesting ? (\n          this.isLightTheme ? (\n            <searchcraft-spinner-light />\n          ) : (\n            <searchcraft-spinner-dark />\n          )\n        ) : this.isLightTheme ? (\n          <searchcraft-clear-icon-set type='clear-light' />\n        ) : (\n          <searchcraft-clear-icon-set type='clear-dark' />\n        )}\n      </button>\n    ) : (\n      <button\n        class={classNames('inputClearButtonLTR', '.sc-clear-input-button-ltr')}\n        onClick={this.handleClearClick}\n        type='button'\n      >\n        {this.isRequesting ? (\n          this.isLightTheme ? (\n            <searchcraft-spinner-light />\n          ) : (\n            <searchcraft-spinner-dark />\n          )\n        ) : this.isLightTheme ? (\n          <searchcraft-clear-icon-set type='clear-light' />\n        ) : (\n          <searchcraft-clear-icon-set type='clear-dark' />\n        )}\n      </button>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin error-message-base {\n  font-family: var(--font-stack);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-top: 4px;\n}\n\n.errorMessageLight {\n  @include error-message-base;\n  color: $light-input-caption-color-error;\n}\n\n.errorMessageDark {\n  @include error-message-base;\n  color: $dark-input-caption-color-error;\n}","import { Component, Prop, h } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-error-message',\n  styleUrl: 'searchcraft-error-message.module.scss',\n  shadow: true,\n})\nexport class SearchcraftErrorMessage {\n  /**\n   * The error message to display. Defaults to a standard message if not provided.\n   */\n  @Prop() errorMessage?: string;\n\n  /**\n   * The theme, which determines the style (light or dark).\n   */\n  @Prop() theme: 'light' | 'dark' = 'light';\n\n  render() {\n    const errorMessageStyle =\n      this.theme === 'light' ? 'errorMessageLight' : 'errorMessageDark';\n\n    return (\n      <p class={classNames(errorMessageStyle)}>\n        {this.errorMessage || 'Search term is required.'}\n      </p>\n    );\n  }\n}\n",".filtersList {\n  padding: 16px;\n  width: 100%;\n}\n\n.checkboxLabel {\n  align-items: center;\n  color: #292929;\n  display: flex;\n  font-size: 14px;\n  font-weight: 600;\n  gap: 12px;\n}\n\n.checkboxLabel input[type=\"checkbox\"] {\n  align-items: center;\n  appearance: none;\n  background-color:#EDEDED;\n  border: 1px solid #D9D9D9;\n  cursor: pointer;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  width: 24px;\n}\n\n.checkboxLabel input[type=\"checkbox\"]:checked {\n  background-color: #000;\n}\n\n.checkboxLabel input[type=\"checkbox\"]:checked::before {\n  color: #fff;\n  content: '✔';\n  font-size: 14px;\n}\n\n.remainingFilterListCheckbox {\n  margin-left: 16px;\n}\n\n.childCheckboxLabel {\n  align-items: center;\n  color: #292929;\n  display: flex;\n  font-size: 14px;\n  font-weight: 600;\n  gap: 12px;\n}\n\n.childCheckboxLabel input[type=\"checkbox\"] {\n  align-items: center;\n  appearance: none;\n  background-color:#EDEDED;\n  border: 1px solid #D9D9D9;\n  cursor: pointer;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  width: 24px;\n}\n\n.childCheckboxLabel input[type=\"checkbox\"]:checked {\n  background-color: #000;\n}\n\n.childCheckboxLabel input[type=\"checkbox\"]:checked::before {\n  color: #fff;\n  content: '✔';\n  font-size: 14px;\n}","import {\n  Component,\n  h,\n  State,\n  Prop,\n  Event,\n  type EventEmitter,\n} from '@stencil/core';\nimport { useSearchcraftStore } from '@provider/store';\nimport type { Facets } from '@searchcraft/core';\n\n@Component({\n  tag: 'searchcraft-filters-list',\n  styleUrl: 'searchcraft-filters-list.module.scss',\n  shadow: true,\n})\nexport class SearchcraftFiltersList {\n  @Prop() filters: Array<{ label: string; value: string }> = [];\n  @Event() filtersUpdated: EventEmitter<string[]>;\n\n  @State() dynamicFilters: Array<{ label: string; value: string }> = [];\n  @State() initialFilters: Array<{ label: string; value: string }> = [];\n  @State() isRequesting = false;\n  @State() selectedFilters: Set<string> = new Set();\n  @State() originalFilterCounts: Record<string, string> = {};\n  @State() query = '';\n  @State() resultsCount = 0;\n\n  private searchStore = useSearchcraftStore.getState();\n  unsubscribe: () => void;\n\n  connectedCallback() {\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      this.isRequesting = state.isRequesting;\n      this.query = state.query || '';\n      this.resultsCount = state.searchResults?.data?.hits?.length || 0;\n\n      const facets = state.searchResults?.data.facets;\n      if (facets) {\n        this.populateFiltersFromFacets(facets);\n      }\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  populateFiltersFromFacets(facets: Facets) {\n    const newFilters = Object.entries(facets.section?.counts || {}).map(\n      ([key, count]) => {\n        const filterValue = key;\n        this.originalFilterCounts[filterValue] = `${count}`;\n        return {\n          label: `${key.replace(/^\\//, '')} (${count})`,\n          value: filterValue,\n        };\n      },\n    );\n\n    // Update dynamic filters while preserving the initial filters\n    const updatedFilters = [\n      ...this.initialFilters,\n      ...newFilters.filter(\n        (filter) =>\n          !this.initialFilters.some(\n            (initial) => initial.value === filter.value,\n          ),\n      ),\n    ];\n\n    this.dynamicFilters = updatedFilters;\n\n    // Store the initial filters only once\n    if (this.initialFilters.length === 0) {\n      this.initialFilters = [...updatedFilters];\n    }\n  }\n\n  handleFilterChange = (value: string, checked: boolean) => {\n    if (checked) {\n      this.selectedFilters.add(value);\n    } else {\n      this.selectedFilters.delete(value);\n    }\n\n    const selectedFiltersArray = Array.from(this.selectedFilters);\n\n    this.filtersUpdated.emit(selectedFiltersArray);\n    this.searchStore.setSelectedFilters(selectedFiltersArray);\n    this.searchStore.search();\n  };\n\n  formatLabel(label: string): string {\n    return label\n      .replace(/-/g, ' ') // Replace dashes with spaces\n      .split(' ') // Split words\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1)) // Capitalize the first letter\n      .join(' '); // Join words back into a single string\n  }\n\n  render() {\n    if (!this.query || this.resultsCount === 0) {\n      return null;\n    }\n\n    const filtersToRender = this.initialFilters.map((initialFilter) => {\n      const isChecked = this.selectedFilters.has(initialFilter.value);\n      const dynamicChildren = this.dynamicFilters.filter(\n        (dynamicFilter) =>\n          dynamicFilter.value.startsWith(initialFilter.value) &&\n          dynamicFilter.value !== initialFilter.value, // Exclude parent itself\n      );\n      return {\n        ...initialFilter,\n        isChecked,\n        children: dynamicChildren,\n      };\n    });\n\n    return (\n      <div class='filtersList'>\n        {filtersToRender.map((filter) => (\n          <div key={filter.value}>\n            {/* Render the parent filter */}\n            <label class='checkboxLabel'>\n              <input\n                class='filterCheckbox'\n                checked={filter.isChecked}\n                onChange={(event: Event) =>\n                  this.handleFilterChange(\n                    filter.value,\n                    (event.target as HTMLInputElement).checked,\n                  )\n                }\n                type='checkbox'\n                value={filter.value}\n              />\n              {this.formatLabel(filter.label)}\n            </label>\n\n            {/* Render dynamic child filters underneath the checked parent */}\n            {filter.isChecked &&\n              filter.children.map((childFilter) => {\n                const childLabel = childFilter.label.split('/').pop(); // Get only the part after the last '/'\n                return (\n                  <label\n                    class='childCheckboxLabel'\n                    key={childFilter.value}\n                    style={{ marginLeft: '20px' }} // Add indentation for child filters\n                  >\n                    <input\n                      class='childFilterCheckbox'\n                      checked={this.selectedFilters.has(childFilter.value)}\n                      onChange={(event: Event) =>\n                        this.handleFilterChange(\n                          childFilter.value,\n                          (event.target as HTMLInputElement).checked,\n                        )\n                      }\n                      type='checkbox'\n                      value={childFilter.value}\n                    />\n                    {this.formatLabel(childLabel || '')}\n                  </label>\n                );\n              })}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin input-container-base {\n  position: relative;\n  width: 100%;\n}\n\n@mixin input-base {\n  border: none;\n  border-radius: 8px;\n  font-family: var(--font-stack);\n  outline: none;\n  padding-bottom: 15px;\n  padding-top: 15px;\n  width: 100%;\n\n  &::placeholder {\n    font-family: var(--font-stack);\n    font-size: 16px;\n  }\n}\n\n@mixin input-base-light {\n  @include input-base;\n  background-color: $light-input-background-color;\n  color: $light-input-label-color;\n\n  &::placeholder {\n    color: $light-input-placeholder-color;\n  }\n\n  &:focus {\n    outline: 2px solid $light-input-outline-focus;\n  }\n}\n\n@mixin input-base-dark {\n  @include input-base;\n  background-color: $dark-input-background-color;\n  color: $dark-input-label-color;\n\n  &::placeholder {\n    color: $dark-input-placeholder-color;\n  }\n\n  &:focus {\n    outline: 2px solid $dark-input-outline-focus;\n  }\n}\n\n@mixin input-error-base-light {\n  @include input-base-light;\n  outline: 2px solid $light-input-error-outline;\n\n  &:focus-visible {\n    outline: 2px solid $light-input-error-outline,\n  }\n}\n\n@mixin input-error-base-dark {\n  @include input-base-dark;\n  outline: 2px solid $dark-input-error-outline;\n\n  &:focus-visible {\n    outline: 2px solid $dark-input-error-outline;\n  }\n}\n\n.inputContainerLTR {\n  @include input-container-base;\n}\n\n.inputContainerRTL {\n  @include input-container-base;\n  margin-left: 8px;\n}\n\n@mixin align-LTR {\n  margin-right: 8px;\n  padding-left: 36px;\n  padding-right: 16px;\n}\n\n.inputLightLTR {\n  @include input-base-light;\n  @include align-LTR;\n}\n\n.inputDarkLTR {\n  @include input-base-dark;\n  @include align-LTR;\n}\n\n.inputErrorLightLTR {\n  @include input-error-base-light;\n  @include align-LTR;\n}\n\n.inputErrorDarkLTR {\n  @include input-error-base-dark;\n  @include align-LTR;\n}\n\n@mixin align-RTL {\n  margin-left: 8px;\n  padding-left: 16px;\n  padding-right: 36px;\n  text-align: right;\n}\n\n.inputLightRTL {\n  @include input-base-light;\n  @include align-RTL;\n}\n\n.inputDarkRTL {\n  @include input-base-dark;\n  @include align-RTL;\n}\n\n.inputErrorLightRTL {\n  @include input-error-base-light;\n  @include align-RTL;\n}\n\n.inputErrorDarkRTL {\n  @include input-error-base-dark;\n  @include align-RTL;\n}\n\n.inputWrapper {\n  align-items: center;\n  display: flex;\n  position: relative;\n  width: 100%;\n}\n","import {\n  Component,\n  h,\n  Prop,\n  State,\n  Event,\n  Fragment,\n  type EventEmitter,\n} from '@stencil/core';\nimport classNames from 'classnames';\n\nimport { parseCustomStyles } from '@utils/utils';\n\nexport interface ScInputCustomEvent<T> extends CustomEvent<T> {\n  detail: T;\n  target: HTMLSearchcraftInputElement;\n}\n\n@Component({\n  tag: 'searchcraft-input',\n  styleUrl: 'searchcraft-input.module.scss',\n  shadow: true,\n})\nexport class SearchcraftInput {\n  @Prop() customStyles: string | Record<string, string> = {};\n  @Prop() error = false;\n  @Prop() formClassName = '';\n  @Prop() inputCaptionClassName = '';\n  @Prop() inputCaptionValue = '';\n  @Prop() inputClassName = '';\n  @Prop() inputIconHeight = 20;\n  @Prop() inputIconWidth = 20;\n  @Prop() isRequesting = false;\n  @Prop() placeholderValue = 'Enter Search';\n  @Prop() rightToLeftOrientation = false;\n  @Prop() query = '';\n\n  @Event() clearInput: EventEmitter<void>;\n  @Event() searchInputChange: EventEmitter<string>;\n  @Event() inputKeyUp: EventEmitter<string>;\n\n  @State() theme = 'light';\n\n  private get isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  handleInputChange(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.searchInputChange.emit(input.value);\n  }\n\n  handleInputKeyUp(event: KeyboardEvent) {\n    const input = event.target as HTMLInputElement;\n    this.inputKeyUp.emit(input.value);\n  }\n\n  handleClearInput() {\n    if (this.clearInput) {\n      this.clearInput.emit();\n    }\n  }\n\n  render() {\n    const containerClassName = this.rightToLeftOrientation\n      ? 'inputContainerRTL'\n      : 'inputContainerLTR';\n\n    const inputClassName = classNames(\n      this.error\n        ? this.isLightTheme\n          ? 'inputErrorLightRTL'\n          : 'inputErrorDarkRTL'\n        : this.isLightTheme\n          ? 'inputLightLTR'\n          : 'inputDarkLTR',\n      'searchcraft-input',\n    );\n\n    const validatedCustomStyles = parseCustomStyles(this.customStyles);\n\n    const placeholderStyle = {\n      fontSize: validatedCustomStyles.placeholderFontSize || '16px',\n    };\n    return (\n      <div\n        class={classNames(\n          containerClassName,\n          this.formClassName,\n          'searchcraft-input-form',\n        )}\n      >\n        {this.rightToLeftOrientation ? (\n          <Fragment>\n            <input\n              autoComplete='off'\n              class={classNames(inputClassName, 'searchcraft-input')}\n              id='searchcraft-input-id'\n              onChange={this.handleInputChange.bind(this)}\n              onKeyUp={this.handleInputKeyUp.bind(this)}\n              placeholder={this.placeholderValue}\n              type='text'\n              value={this.query}\n              style={validatedCustomStyles}\n            />\n            <style>\n              {`\n                #searchcraft-input-id::placeholder {\n                  font-size: ${placeholderStyle.fontSize};\n                }\n              `}\n            </style>\n            {this.inputCaptionValue && (\n              <searchcraft-input-caption\n                inputCaptionClassName={this.inputCaptionClassName}\n                inputCaptionValue={this.inputCaptionValue}\n                rightToLeftOrientation={this.rightToLeftOrientation}\n              />\n            )}\n            {this.query.length > 0 && (\n              <searchcraft-clear-input-button\n                isRequesting={this.isRequesting}\n                onClearInput={this.handleClearInput}\n                rightToLeftOrientation={this.rightToLeftOrientation}\n              />\n            )}\n            <searchcraft-input-icon\n              error={this.error}\n              height={this.inputIconHeight}\n              rightToLeftOrientation={this.rightToLeftOrientation}\n              width={this.inputIconWidth}\n            />\n          </Fragment>\n        ) : (\n          <Fragment>\n            <searchcraft-input-icon\n              error={this.error}\n              height={this.inputIconHeight}\n              rightToLeftOrientation={this.rightToLeftOrientation}\n              width={this.inputIconWidth}\n            />\n            <input\n              autoComplete='off'\n              class={classNames(inputClassName, 'searchcraft-input')}\n              id='searchcraft-input-id'\n              onChange={this.handleInputChange.bind(this)}\n              onKeyUp={this.handleInputKeyUp.bind(this)}\n              placeholder={this.placeholderValue}\n              type='text'\n              value={this.query}\n              style={validatedCustomStyles}\n            />\n            <style>\n              {`\n                #searchcraft-input-id::placeholder {\n                  font-size: ${placeholderStyle.fontSize};\n                }\n              `}\n            </style>\n            {this.inputCaptionValue && (\n              <searchcraft-input-caption\n                inputCaptionClassName={this.inputCaptionClassName}\n                inputCaptionValue={this.inputCaptionValue}\n                rightToLeftOrientation={this.rightToLeftOrientation}\n              />\n            )}\n            {this.query.length > 0 && (\n              <searchcraft-clear-input-button\n                isRequesting={this.isRequesting}\n                onClearInput={this.handleClearInput}\n                rightToLeftOrientation={this.rightToLeftOrientation}\n              />\n            )}\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin input-caption-base {\n  font-family: var(--font-stack);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-top: 4px;\n}\n\n@mixin input-caption-base-light {\n  @include input-caption-base;\n  color: $light-input-caption-color;\n}\n\n@mixin input-caption-base-dark {\n  @include input-caption-base;\n  color: $dark-input-caption-color;\n}\n\n.inputCaptionLightLTR {\n  @include input-caption-base-light;\n}\n\n.inputCaptionDarkLTR {\n  @include input-caption-base-dark;\n}\n\n.inputCaptionErrorLightLTR {\n  @include input-caption-base;\n  color: $light-input-caption-color-error;\n}\n\n.inputCaptionErrorDarkLTR {\n  @include input-caption-base;\n  color: $dark-input-caption-color-error;\n}\n\n.inputCaptionLightRTL {\n  @include input-caption-base-light;\n  text-align: right;\n}\n\n.inputCaptionDarkRTL {\n  @include input-caption-base-dark;\n  text-align: right;\n}\n\n.inputCaptionErrorLightRTL {\n  @include input-caption-base;\n  color: $light-input-caption-color-error;\n  text-align: right;\n}\n\n.inputCaptionErrorDarkRTL {\n  @include input-caption-base;\n  color: $dark-input-caption-color-error;\n  text-align: right;\n}","import { Component, Prop, h, State } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-input-caption',\n  styleUrl: 'searchcraft-input-caption.module.scss',\n  shadow: true,\n})\nexport class SearchcraftInputCaption {\n  @Prop() error?: boolean;\n  @Prop() inputCaptionClassName? = '';\n  @Prop() inputCaptionValue = 'Enter Search';\n  @Prop() rightToLeftOrientation = false;\n  @State() theme = 'light';\n\n  private isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  render() {\n    return this.rightToLeftOrientation ? (\n      <p\n        class={classNames(\n          this.error\n            ? this.isLightTheme\n              ? 'inputCaptionErrorLightRTL'\n              : 'inputCaptionErrorDarkRTL'\n            : this.isLightTheme\n              ? 'inputCaptionLightRTL'\n              : 'inputCaptionDarkRTL',\n          this.inputCaptionClassName,\n          '.searchcraft-input-caption',\n        )}\n      >\n        {this.inputCaptionValue}\n      </p>\n    ) : (\n      <p\n        class={classNames(\n          this.error\n            ? this.isLightTheme\n              ? 'inputCaptionErrorLightLTR'\n              : 'inputCaptionErrorDarkLTR'\n            : this.isLightTheme\n              ? 'inputCaptionLightLTR'\n              : 'inputCaptionDarkLTR',\n          this.inputCaptionClassName,\n          '.searchcraft-input-caption',\n        )}\n      >\n        {this.inputCaptionValue}\n      </p>\n    );\n  }\n}\n",":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.inputIconLTR {\n  left: 15px;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n.inputIconRTL {\n  position: absolute;\n  right: 15px;\n  top: 50%;\n  transform: translateY(-50%);\n}","import { Component, Prop, h, State } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-input-icon',\n  styleUrl: 'searchcraft-input-icon.module.scss',\n  shadow: true,\n})\nexport class SearchcraftInputIcon {\n  /**\n   * Determines if an error icon should be displayed.\n   */\n  @Prop() error?: boolean;\n\n  /**\n   * Determines if the layout should be right-to-left.\n   */\n  @Prop() rightToLeftOrientation = false;\n  @Prop() height = 20;\n  @Prop() width = 20;\n\n  @State() theme = 'light';\n\n  private isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  render() {\n    return this.error ? (\n      <div\n        class={this.rightToLeftOrientation ? 'inputIconRTL' : 'inputIconLTR'}\n      >\n        {this.isLightTheme() ? (\n          <searchcraft-search-icon-set\n            height={this.height}\n            type='error-light'\n            width={this.width}\n          />\n        ) : (\n          <searchcraft-search-icon-set\n            height={this.height}\n            type='error-dark'\n            width={this.width}\n          />\n        )}\n      </div>\n    ) : (\n      <div\n        class={this.rightToLeftOrientation ? 'inputIconRTL' : 'inputIconLTR'}\n      >\n        {this.isLightTheme() ? (\n          <searchcraft-search-icon-set\n            height={this.height}\n            type='search-light'\n            width={this.width}\n          />\n        ) : (\n          <searchcraft-search-icon-set\n            height={this.height}\n            type='search-dark'\n            width={this.width}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin input-label-base {\n  font-family: var(--font-stack);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-top: 4px;\n}\n\n.labelLight {\n  @include input-label-base;\n  color: $light-input-label-color;\n}\n\n.labelDark {\n  @include input-label-base;\n  color: $dark-input-label-color;\n}","import { Component, Prop, h, State } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-input-label',\n  styleUrl: 'searchcraft-input-label.module.scss',\n  shadow: true,\n})\nexport class SearchcraftInputLabel {\n  @Prop() inputLabelClassName? = '';\n  @Prop() label?: string; // Make label optional\n  @State() theme = 'light';\n\n  private isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  render() {\n    // Render nothing if no label prop is provided\n    if (!this.label) {\n      return null;\n    }\n\n    const labelStyle = this.isLightTheme() ? 'labelLight' : 'labelDark';\n\n    return (\n      <label\n        class={classNames(labelStyle, this.inputLabelClassName)}\n        htmlFor='searchcraft-input-id'\n      >\n        {this.label}\n      </label>\n    );\n  }\n}\n",".container {\n  display: flex;\n  justify-content: flex-start;\n}\n\n.resultsInfo {\n  color: #292929;\n  font-family: 'Brygada 1918';\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 20px;\n}","import { Component, h, State } from '@stencil/core';\nimport { useSearchcraftStore } from '@provider/store';\n\n@Component({\n  tag: 'searchcraft-results-info',\n  styleUrl: 'searchcraft-results-info.module.scss',\n  shadow: true,\n})\nexport class SearchcraftResultsInfo {\n  @State() isRequesting = false;\n  @State() resultsCount = 0;\n  @State() responseTime = '';\n  @State() query = ''; // Track the query\n\n  unsubscribe: () => void;\n\n  connectedCallback() {\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      this.isRequesting = state.isRequesting;\n      this.resultsCount = state.searchResults?.data?.count || 0;\n      this.responseTime = (\n        (state.searchResults?.data?.time_taken || 0) * 1000\n      ).toFixed(2);\n      this.query = state.query || ''; // Update query from store\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  render() {\n    if (!this.query || this.resultsCount === 0) {\n      return null;\n    }\n\n    return (\n      <div class='container'>\n        {this.isRequesting ? (\n          <p>Loading...</p>\n        ) : (\n          <p class='resultsInfo'>\n            {this.resultsCount} results found in {this.responseTime}ms\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-search-icon-set',\n  shadow: true,\n})\nexport class SearchcraftSearchIconSet {\n  /**\n   * Type of the icon to display.\n   * Options: 'search-light', 'search-dark', 'error-light', 'error-dark'\n   */\n  @Prop() type: 'search-light' | 'search-dark' | 'error-light' | 'error-dark' =\n    'search-dark';\n  @Prop() width = 20;\n  @Prop() height = 20;\n\n  render() {\n    const { width, height } = this;\n    switch (this.type) {\n      case 'search-light':\n        return (\n          <svg\n            width={width}\n            height={height}\n            viewBox='0 0 20 20'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='searchcraft-title'\n          >\n            <title id='searchcraft-title'>Searchcraft Search Icon Light</title>\n            <path\n              d='M17.5 17.5L13.875 13.875M15.8333 9.16667C15.8333 12.8486 12.8486 15.8333 9.16667 15.8333C5.48477 15.8333 2.5 12.8486 2.5 9.16667C2.5 5.48477 5.48477 2.5 9.16667 2.5C12.8486 2.5 15.8333 5.48477 15.8333 9.16667Z'\n              stroke='#404040'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'search-dark':\n        return (\n          <svg\n            width={width}\n            height={height}\n            viewBox='0 0 18 18'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='searchcraft-title'\n          >\n            <title id='searchcraft-title'>Searchcraft Search Icon Dark</title>\n            <path\n              d='M16.5 16.5L12.875 12.875M14.8333 8.16667C14.8333 11.8486 11.8486 14.8333 8.16667 14.8333C4.48477 14.8333 1.5 11.8486 1.5 8.16667C1.5 4.48477 4.48477 1.5 8.16667 1.5C11.8486 1.5 14.8333 4.48477 14.8333 8.16667Z'\n              stroke='#E6E6E6'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'error-light':\n        return (\n          <svg\n            width={width}\n            height={height}\n            viewBox='0 0 20 20'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='searchcraft-title'\n          >\n            <title id='searchcraft-title'>\n              Searchcraft Error Search Icon Light\n            </title>\n            <path\n              d='M17.5 17.5L13.875 13.875M15.8333 9.16667C15.8333 12.8486 12.8486 15.8333 9.16667 15.8333C5.48477 15.8333 2.5 12.8486 2.5 9.16667C2.5 5.48477 5.48477 2.5 9.16667 2.5C12.8486 2.5 15.8333 5.48477 15.8333 9.16667Z'\n              stroke='#737373'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'error-dark':\n        return (\n          <svg\n            width={width}\n            height={height}\n            viewBox='0 0 18 18'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='searchcraft-title'\n          >\n            <title id='searchcraft-title'>\n              Searchcraft Error Search Icon Dark\n            </title>\n            <path\n              d='M16.5 16.5L12.875 12.875M14.8333 8.16667C14.8333 11.8486 11.8486 14.8333 8.16667 14.8333C4.48477 14.8333 1.5 11.8486 1.5 8.16667C1.5 4.48477 4.48477 1.5 8.16667 1.5C11.8486 1.5 14.8333 4.48477 14.8333 8.16667Z'\n              stroke='#BFBFBF'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      default:\n        return null;\n    }\n  }\n}\n",".slider-container {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-family: Arial, sans-serif;\n  align-items: center;\n}\n\nlabel {\n  font-size: 14px;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.range-container {\n  display: flex;\n  width: 100%;\n  align-items: center;\n}\n\n.range-slider {\n  width: 100%;\n  height: 4px;\n  background: #ddd;\n  border-radius: 2px;\n  outline: none;\n  margin: 0 -1px;\n  position: relative;\n}\n\n.range-slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 20px;\n  height: 20px;\n  background-color: #FFF;\n  border-radius: 50%;\n  border: 1px solid #E6E6E6;\n  cursor: pointer;\n  position: relative;\n}\n\n.range-slider::-moz-range-thumb {\n  width: 20px;\n  height: 20px;\n  background-color: #FFF;\n  border-radius: 50%;\n  border: 1px solid #E6E6E6;\n  cursor: pointer;\n}\n\n.range-slider:before {\n  content: '';\n  position: absolute;\n  height: 4px;\n  background-color: #FFF;\n  border-radius: 2px;\n  left: 0;\n  right: 0;\n  z-index: -1;\n}\n\n.year-labels {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 10px;\n  font-size: 12px;\n  color: #555;\n}\n\n.year-label {\n  min-width: 30px;\n  text-align: center;\n}","import { Component, h, State, Prop } from '@stencil/core';\nimport { useSearchcraftStore } from '@provider/store';\n\n@Component({\n  tag: 'searchcraft-slider',\n  styleUrl: 'searchcraft-slider.module.scss',\n  shadow: true,\n})\nexport class SearchcraftSlider {\n  @Prop() minYear = 2000;\n  @Prop() maxYear = new Date().getFullYear();\n\n  @State() endYear = this.maxYear;\n  @State() query = '';\n  @State() startYear = this.minYear;\n  @State() hasSearched = false;\n  unsubscribe: () => void;\n  private searchStore = useSearchcraftStore.getState();\n  @State() resultsCount = 0; // Track the count of search results\n\n  componentDidLoad() {\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      if (state.query.length > 0) {\n        this.hasSearched = true;\n        this.resultsCount = state.searchResults?.data?.hits?.length || 0;\n      }\n      this.query = state.query;\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  private updateYears = async () => {\n    this.searchStore.setYearsRange([this.startYear, this.endYear]);\n\n    try {\n      if (typeof this.query === 'string' && this.query.trim() !== '') {\n        await this.searchStore.search();\n      } else {\n        console.warn('Query is missing or empty, skipping search request.');\n      }\n    } catch (error) {\n      console.error('Search failed:', error);\n    }\n  };\n\n  private handleStartYearChange = (event: InputEvent) => {\n    const value = Number.parseInt((event.target as HTMLInputElement).value, 10);\n    this.startYear = Math.min(value, this.endYear);\n    this.updateYears();\n  };\n\n  private handleEndYearChange = (event: InputEvent) => {\n    const value = Number.parseInt((event.target as HTMLInputElement).value, 10);\n    this.endYear = Math.max(value, this.startYear);\n    this.updateYears();\n  };\n\n  render() {\n    if (!this.query || this.resultsCount === 0) {\n      return null;\n    }\n    return (\n      <div class='slider-container'>\n        <label>Filter by Year</label>\n        <div class='range-container'>\n          <input\n            class='range-slider'\n            max={this.maxYear}\n            min={this.minYear}\n            onInput={this.handleStartYearChange}\n            step='1'\n            type='range'\n            value={this.startYear}\n          />\n          <input\n            class='range-slider'\n            max={this.maxYear}\n            min={this.minYear}\n            onInput={this.handleEndYearChange}\n            step='1'\n            type='range'\n            value={this.endYear}\n          />\n        </div>\n        <div class='year-labels'>\n          <span class='year-label'>{this.startYear}</span>\n          <span class='year-label'>{this.endYear}</span>\n        </div>\n      </div>\n    );\n  }\n}\n","$spinner-size: 20px;\n\n.spinnerContainer {\n  background-color: transparent;\n  height: $spinner-size;\n  width: $spinner-size;\n}\n\n.spinnerDark {\n  height: 100%;\n  width: 100%;\n  background: conic-gradient(#000 50%, #FFFFFF);\n  clip-path: circle(50%);\n  mask-image: radial-gradient(circle at center, rgba(0,0,0,0) calc($spinner-size/3), rgba(0,0,0,1) calc($spinner-size/3));\n  animation: spinning 1s linear infinite;\n}\n\n.spinnerLight {\n  height: 100%;\n  width: 100%;\n  background: conic-gradient(#737373 50%, #FFFFFF);\n  clip-path: circle(50%);\n  mask-image: radial-gradient(circle at center, rgba(0,0,0,0) calc($spinner-size/3), rgba(0,0,0,1) calc($spinner-size/3));\n  animation: spinning 1s linear infinite;\n}\n\n@keyframes spinning {\n  0% { transform: rotate(0deg); }\n  50% {transform: rotate(180deg);}\n  100% { transform: rotate(360deg); }\n}","import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-spinner-dark',\n  styleUrl: 'searchcraft-spinner-dark.module.scss',\n  shadow: true,\n})\nexport class SearchcraftSpinnerDark {\n  render() {\n    return (\n      <div class='spinnerContainer'>\n        <div class='spinnerDark' />\n      </div>\n    );\n  }\n}\n","$spinner-size: 20px;\n\n.spinnerContainer {\n  background-color: transparent;\n  height: $spinner-size;\n  width: $spinner-size;\n}\n\n.spinnerLight {\n  height: 100%;\n  width: 100%;\n  background: conic-gradient(#737373 50%, #FFFFFF);\n  clip-path: circle(50%);\n  mask-image: radial-gradient(circle at center, rgba(0,0,0,0) calc($spinner-size/3), rgba(0,0,0,1) calc($spinner-size/3));\n  animation: spinning 1s linear infinite;\n}\n\n@keyframes spinning {\n  0% { transform: rotate(0deg); }\n  50% {transform: rotate(180deg);}\n  100% { transform: rotate(360deg); }\n}","import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-spinner-light',\n  styleUrl: 'searchcraft-spinner-light.module.scss',\n  shadow: true,\n})\nexport class SearchcraftSpinnerLight {\n  render() {\n    return (\n      <div class='spinnerContainer'>\n        <div class='spinnerLight' />\n      </div>\n    );\n  }\n}\n",".toggle-container {\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  color: #333;\n}\n\n.toggle-wrapper {\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.05);\n  margin-left: 10px;\n  border: none;\n  border-radius: 16px;\n  width: 44px;\n  height: 26px;\n  background: #ddd;\n  position: relative;\n  cursor: pointer;\n}\n\n.toggle-wrapper.active {\n  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.05);\n  background: #007DB3;\n}\n\n.toggle-wrapper .toggle-switch {\n  width: 18px;\n  height: 18px;\n  background: #fff;\n  border-radius: 50%;\n  position: absolute;\n  top: calc(50% - 18px/2);\n  left: 4px;\n  transition: transform 0.3s ease;\n}\n\n.toggle-wrapper .toggle-switch.active {\n  transform: translateX(16px);\n}\n","import { Component, h, Prop, State } from '@stencil/core';\nimport { useSearchcraftStore } from '@provider/store';\n\n@Component({\n  tag: 'searchcraft-toggle-button',\n  styleUrl: 'searchcraft-toggle-button.module.scss',\n  shadow: true,\n})\nexport class SearchcraftToggleButton {\n  /**\n   * Type of the toggle - determines what it controls\n   * 'mode': toggles between 'fuzzy' and 'normal'\n   * 'sort': toggles between 'asc' and 'desc'\n   */\n  @Prop() type: 'mode' | 'sort' = 'mode';\n\n  @State() isActive = false;\n  @State() query = ''; // Track the query\n  @State() resultsCount = 0; // Track the count of search results\n\n  private unsubscribe: () => void;\n  private searchStore = useSearchcraftStore.getState();\n\n  componentDidLoad() {\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      this.query = state.query || '';\n      this.resultsCount = state.searchResults?.data?.hits?.length || 0;\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  private handleToggle = async () => {\n    this.isActive = !this.isActive;\n\n    if (this.type === 'mode') {\n      const mode = this.isActive ? 'normal' : 'fuzzy';\n      this.searchStore.setSearchParams({\n        mode,\n      });\n    } else if (this.type === 'sort') {\n      const sort = this.isActive ? 'desc' : 'asc';\n      this.searchStore.setSearchParams({\n        sort,\n      });\n    }\n\n    try {\n      await this.searchStore.search();\n    } catch (error) {\n      console.error('Search failed:', error);\n    }\n  };\n\n  render() {\n    // Render only if there's a query and results exist\n    if (!this.query || this.resultsCount === 0) {\n      return null;\n    }\n\n    const label =\n      this.type === 'mode'\n        ? 'Exact Match'\n        : this.type === 'sort'\n          ? 'Most Recent'\n          : '';\n\n    return (\n      <div class='toggle-container'>\n        <span>{label}</span>\n        <button\n          class={`toggle-wrapper ${this.isActive ? 'active' : ''}`}\n          onClick={this.handleToggle}\n          type='button'\n        >\n          <div class={`toggle-switch ${this.isActive ? 'active' : ''}`} />\n        </button>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}
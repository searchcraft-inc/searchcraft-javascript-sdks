{"version":3,"names":["searchcraftAutoSearchFormModuleCss","SearchcraftAutoSearchFormStyle0","SearchcraftAutoSearchForm","this","debounceTimeout","debounceDelay","searchStore","useSearchcraftStore","getState","handleInputChange","event","query","detail","querySubmit","emit","clearTimeout","setTimeout","console","log","runSearch","handleClearInput","clearInput","error","searchResults","async","trim","setQuery","search","JSON","stringify","handleFormSubmit","preventDefault","apiKey","endpointURL","index","componentDidLoad","searchcraft","SearchcraftCore","config","initialize","render","formClass","rightToLeftOrientation","parsedCustomStyles","parseCustomStyles","customStylesForInput","h","key","class","onSubmit","label","labelForInput","customStyles","inputCaptionValue","onClearInput","onSearchInputChange","placeholderValue","errorMessage","searchcraftBaseSearchResultModuleCss","SearchcraftBaseSearchResultStyle0","SearchcraftBaseSearchResult","buttonCallback","keyDownCallback","resultCallback","handleButtonClick","handleContainerClick","isInteractive","isLightTheme","themeMode","containerStyle","Object","assign","id","onClick","onKeyDown","style","tabindex","type","alt","imageDescription","src","imageSource","headingText","subheadingText","primaryContent","secondaryContent","tertiaryContent","buttonText","searchcraftBaseSearchResultsModuleCss","SearchcraftBaseSearchResultsStyle0","SearchcraftBaseSearchResults","searchKeys","length","warn","unsubscribe","subscribe","state","disconnectedCallback","_a","data","parsedSearchKeys","parseSearchKeys","customStylesForResults","_d","_c","_b","hits","map","document","doc","result","dynamicProperties","extractDynamicProperties","customElement","hostElement","querySelector","customElementClone","cloneNode","removeAttribute","setAttribute","outerHTML","_g","_f","_e","name","SearchcraftClearIconSet","width","height","viewBox","fill","xmlns","d","stroke","searchcraftClearInputButtonModuleCss","SearchcraftClearInputButtonStyle0","SearchcraftClearInputButton","handleClearClick","theme","classNames","isRequesting","searchcraftErrorMessageModuleCss","SearchcraftErrorMessageStyle0","SearchcraftErrorMessage","errorMessageStyle","searchcraftInputModuleCss","SearchcraftInputStyle0","SearchcraftInput","input","target","searchInputChange","value","containerClassName","inputClassName","validatedCustomStyles","placeholderStyle","fontSize","placeholderFontSize","formClassName","Fragment","onChange","bind","placeholder","inputCaptionClassName","searchcraftInputCaptionModuleCss","SearchcraftInputCaptionStyle0","SearchcraftInputCaption","searchcraftInputIconModuleCss","SearchcraftInputIconStyle0","SearchcraftInputIcon","searchcraftInputLabelModuleCss","SearchcraftInputLabelStyle0","SearchcraftInputLabel","labelStyle","inputLabelClassName","htmlFor","SearchcraftSearchIconSet","searchcraftSpinnerDarkModuleCss","SearchcraftSpinnerDarkStyle0","SearchcraftSpinnerDark","searchcraftSpinnerLightModuleCss","SearchcraftSpinnerLightStyle0","SearchcraftSpinnerLight"],"sources":["src/components/searchcraft-auto-search-form/searchcraft-auto-search-form.module.scss?tag=searchcraft-auto-search-form&encapsulation=shadow","src/components/searchcraft-auto-search-form/searchcraft-auto-search-form.tsx","src/components/searchcraft-base-search-result/searchcraft-base-search-result.module.scss?tag=searchcraft-base-search-result&encapsulation=shadow","src/components/searchcraft-base-search-result/searchcraft-base-search-result.tsx","src/components/searchcraft-base-search-results/searchcraft-base-search-results.module.scss?tag=searchcraft-base-search-results&encapsulation=shadow","src/components/searchcraft-base-search-results/searchcraft-base-search-results.tsx","src/assets/searchcraft-clear-icon-set.tsx","src/components/searchcraft-clear-input-button/searchcraft-clear-input-button.module.scss?tag=searchcraft-clear-input-button&encapsulation=shadow","src/components/searchcraft-clear-input-button/searchcraft-clear-input-button.tsx","src/components/searchcraft-error-message/searchcraft-error-message.module.scss?tag=searchcraft-error-message&encapsulation=shadow","src/components/searchcraft-error-message/searchcraft-error-message.tsx","src/components/searchcraft-input/searchcraft-input.module.scss?tag=searchcraft-input&encapsulation=shadow","src/components/searchcraft-input/searchcraft-input.tsx","src/components/searchcraft-input-caption/searchcraft-input-caption.module.scss?tag=searchcraft-input-caption&encapsulation=shadow","src/components/searchcraft-input-caption/searchcraft-input-caption.tsx","src/components/searchcraft-input-icon/searchcraft-input-icon.module.scss?tag=searchcraft-input-icon&encapsulation=shadow","src/components/searchcraft-input-icon/searchcraft-input-icon.tsx","src/components/searchcraft-input-label/searchcraft-input-label.module.scss?tag=searchcraft-input-label&encapsulation=shadow","src/components/searchcraft-input-label/searchcraft-input-label.tsx","src/assets/searchcraft-search-icon-set.tsx","src/components/searchcraft-spinner-dark/searchcraft-spinner-dark.module.scss?tag=searchcraft-spinner-dark&encapsulation=shadow","src/components/searchcraft-spinner-dark/searchcraft-spinner-dark.tsx","src/components/searchcraft-spinner-light/searchcraft-spinner-light.module.scss?tag=searchcraft-spinner-light&encapsulation=shadow","src/components/searchcraft-spinner-light/searchcraft-spinner-light.tsx"],"sourcesContent":[":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.formLTR {\n  text-align: left;\n  width: 100%;\n}\n\n.formRTL {\n  text-align: right;\n  width: 100%;\n}\n\n.searchContainer {\n  align-items: center;\n  display: flex;\n  width: 100%;\n}","import {\n  Component,\n  Prop,\n  State,\n  Event,\n  type EventEmitter,\n  h,\n} from '@stencil/core';\nimport {\n  type CoreConfigSDK,\n  CoreSDK as SearchcraftCore,\n} from '@searchcraft/core';\n\nimport type { ScInputCustomEvent } from '@components/searchcraft-input/searchcraft-input';\nimport { parseCustomStyles } from '@utils/utils';\nimport { useSearchcraftStore } from '@provider/store';\n\n@Component({\n  tag: 'searchcraft-auto-search-form',\n  styleUrl: 'searchcraft-auto-search-form.module.scss',\n  shadow: true,\n})\nexport class SearchcraftAutoSearchForm {\n  @Prop() autoSearchFormClass = '';\n  @Prop() clearInput: () => void = () => {};\n  @Prop() config: CoreConfigSDK = {\n    apiKey: '',\n    endpointURL: '',\n    index: [],\n  };\n  @Prop() customStylesForInput: string | Record<string, string> = {};\n  @Prop() inputCaptionValue = '';\n  @Prop() labelForInput = '';\n  @Prop() placeholderValue = 'Search here';\n  @Prop() rightToLeftOrientation = false;\n  @Prop() searchContainerClass = '';\n\n  @Event() querySubmit: EventEmitter<string>;\n\n  @State() error = false;\n  @State() query = '';\n  @State() searchResults = '';\n\n  private debounceTimeout: ReturnType<typeof setTimeout> | null = null;\n  private debounceDelay = 300; // 300ms debounce delay\n  private searchStore = useSearchcraftStore.getState();\n\n  componentDidLoad() {\n    const searchcraft = new SearchcraftCore(this.config);\n    this.searchStore.initialize(searchcraft, true);\n    console.log('Component initialized');\n  }\n\n  handleInputChange = (event: ScInputCustomEvent<string>) => {\n    this.query = event.detail;\n    this.querySubmit.emit(this.query);\n\n    // Clear the previous debounce timeout\n    if (this.debounceTimeout) {\n      clearTimeout(this.debounceTimeout);\n    }\n\n    // Set a new debounce timeout\n    this.debounceTimeout = setTimeout(() => {\n      console.log('Debounced search triggered');\n      this.runSearch();\n    }, this.debounceDelay);\n  };\n\n  handleClearInput = () => {\n    this.query = '';\n    console.log('Input cleared');\n\n    if (typeof this.clearInput === 'function') {\n      this.clearInput();\n    }\n\n    if (this.debounceTimeout) {\n      clearTimeout(this.debounceTimeout);\n    }\n\n    this.error = false;\n    this.searchResults = '';\n  };\n\n  private runSearch = async () => {\n    if (this.query.trim() === '') {\n      this.error = true;\n      this.searchResults = '';\n    } else {\n      this.error = false;\n      this.searchStore.setQuery(this.query);\n\n      try {\n        await this.searchStore.search();\n        this.searchResults = JSON.stringify(this.searchStore.searchResults);\n      } catch (error) {\n        this.error = true;\n      }\n    }\n  };\n\n  handleFormSubmit = async (event: Event) => {\n    event.preventDefault();\n    await this.runSearch();\n  };\n\n  render() {\n    const formClass = this.rightToLeftOrientation ? 'formRTL' : 'formLTR';\n    const parsedCustomStyles = parseCustomStyles(this.customStylesForInput);\n    return (\n      <form class={`${formClass}`} onSubmit={this.handleFormSubmit}>\n        <searchcraft-input-label label={this.labelForInput} />\n        <div class='searchContainer'>\n          <searchcraft-input\n            customStyles={parsedCustomStyles}\n            input-caption-value={this.inputCaptionValue}\n            onClearInput={this.handleClearInput}\n            onSearchInputChange={this.handleInputChange}\n            placeholder-value={this.placeholderValue}\n            query={this.query}\n            right-to-left-orientation={this.rightToLeftOrientation}\n          />\n        </div>\n        {this.error && (\n          <searchcraft-error-message errorMessage='Please enter a search query.' />\n        )}\n      </form>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin interactive-result-container-base {\n  align-items: flex-start;\n  border-radius: 16px;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  gap: 16px;\n  padding: 8px;\n\n  @media (min-width: 600px) {\n    flex-direction: row;\n  }\n}\n\n.interactiveResultContainerLight {\n  background-color: $light-search-result-container-background;\n  @include interactive-result-container-base;\n}\n\n.interactiveResultContainerDark {\n  background-color: $dark-search-result-container-background;\n  @include interactive-result-container-base;\n}\n\n.resultContainer {\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media (min-width: 600px) {\n    flex-direction: row;\n  }\n}\n\n.interactiveIconLarge {\n  display: inline-block;\n  position: absolute;\n  right: 5px;\n  top: 8px;\n\n\n  @media (max-width: 600px) {\n   display: none;\n  }\n}\n\n.interactiveIconSmall {\n  position: absolute;\n  right: 5px;\n  top: -2px;\n  display: inline-block;\n\n\n  @media (min-width: 600px) {\n   display: none;\n  }\n}\n\n.imageContainer {\n  max-height: 540px;\n  max-width: 100%;\n\n  @media (min-width: 600px) {\n    max-height: 100%;\n    max-width: 50%;\n  }\n}\n\n.contentContainer {\n  max-height: 100%;\n  max-width: 100%;\n\n  @media (min-width: 600px) {\n    max-width: 50%;\n  }\n}\n\n@mixin image-base {\n  aspect-ratio: 2 / 1;\n  border-radius: 8px;\n  max-height: 100%;\n  max-width: 100%;\n}\n\n.imageLight {\n  @include image-base;\n  border: 1px solid $light-search-result-image-border;\n}\n\n.imageDark {\n  @include image-base;\n  border: 1px solid $dark-search-result-image-border;\n}\n\n@mixin heading-base {\n  font-family: var(--font-stack);\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 20px;\n  margin-bottom: 4px;\n  margin-top: 0px;\n  position: relative;\n}\n\n.headingLight {\n  @include heading-base;\n  color: $light-search-result-heading-color;\n}\n\n.headingDark {\n  @include heading-base;\n  color: $dark-search-result-heading-color;\n}\n\n@mixin subheading-base {\n  font-family: var(--font-stack);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-bottom: 4px;\n  margin-top: 0px;\n}\n\n.subheadingLight {\n  @include subheading-base;\n  color: $light-search-result-subheading-color;\n}\n\n.subheadingDark {\n  @include subheading-base;\n  color: $dark-search-result-subheading-color\n}\n\n@mixin body-content-base {\n  font-family: var(--font-stack);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 20px;\n  margin-bottom: 4px;\n  margin-top: 0px;\n}\n\n.primaryContentLight {\n  @include body-content-base;\n  color: $light-search-result-body-content-color;\n}\n\n.primaryContentDark {\n  @include body-content-base;\n  color: $dark-search-result-body-content-color;\n}\n\n.secondaryContentLight {\n  @include body-content-base;\n  color: $light-search-result-body-content-color;\n}\n\n.secondaryContentDark {\n  @include body-content-base;\n  color: $dark-search-result-body-content-color;\n}\n\n.tertiaryContentLight {\n  @include body-content-base;\n  color: $light-search-result-body-content-color;\n}\n\n.tertiaryContentDark {\n  @include body-content-base;\n  color: $dark-search-result-body-content-color;\n}","import { Component, Event, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-base-search-result',\n  styleUrl: 'searchcraft-base-search-result.module.scss',\n  shadow: true,\n})\nexport class SearchcraftBaseSearchResult {\n  @Prop() buttonText = ''; // Label for the button\n  @Prop() imageDescription = ''; // Alternative text for the image\n  @Prop() imageSource = ''; // Source URL for the image\n  @Prop() isInteractive = false; // Determines if the result is interactive\n  @Prop() primaryContent = ''; // Primary body content\n  @Prop() secondaryContent = ''; // Secondary body content\n  @Prop() tertiaryContent = ''; // Tertiary body content\n  @Prop() headingText = ''; // Text for the heading\n  @Prop() subheadingText = ''; // Text for the subheading\n  @Prop() themeMode: 'light' | 'dark' = 'light'; // Light or dark theme context\n  @Prop() customStyles: Record<string, string> = {}; // Custom styles passed from parent\n\n  @Event() buttonCallback: () => void = () => {}; // Callback for button click\n  @Event() keyDownCallback: () => void = () => {}; // Callback for key down event\n  @Event() resultCallback: () => void = () => {}; // Callback for result container click\n\n  private handleButtonClick = () => {\n    this.buttonCallback();\n  };\n\n  private handleContainerClick = () => {\n    if (this.isInteractive) {\n      this.resultCallback();\n    }\n  };\n\n  render() {\n    const isLightTheme = this.themeMode === 'light';\n    const containerStyle = { ...this.customStyles };\n    return (\n      <div\n        class={\n          this.isInteractive\n            ? isLightTheme\n              ? 'interactiveResultContainerLight'\n              : 'interactiveResultContainerDark'\n            : 'resultContainer'\n        }\n        id='searchcraft-item'\n        onClick={this.handleContainerClick}\n        onKeyDown={this.keyDownCallback}\n        style={containerStyle}\n        tabindex='0'\n      >\n        {this.isInteractive && (\n          <div class='interactiveIconLarge'>\n            {isLightTheme ? (\n              <searchcraft-clear-icon-set type='arrow-light' />\n            ) : (\n              <searchcraft-clear-icon-set type='arrow-dark' />\n            )}\n          </div>\n        )}\n        <div class='imageContainer'>\n          <img\n            alt={this.imageDescription}\n            class={isLightTheme ? 'imageLight' : 'imageDark'}\n            src={this.imageSource}\n          />\n        </div>\n        <div class='contentContainer'>\n          <h2 class={isLightTheme ? 'headingLight' : 'headingDark'}>\n            {this.headingText}\n            {this.isInteractive && (\n              <div class='interactiveIconSmall'>\n                {isLightTheme ? (\n                  <searchcraft-clear-icon-set type='arrow-light' />\n                ) : (\n                  <searchcraft-clear-icon-set type='arrow-dark' />\n                )}\n              </div>\n            )}\n          </h2>\n          <h3 class={isLightTheme ? 'subheadingLight' : 'subheadingDark'}>\n            {this.subheadingText}\n          </h3>\n          <p\n            class={isLightTheme ? 'primaryContentLight' : 'primaryContentDark'}\n          >\n            {this.primaryContent}\n          </p>\n          <p\n            class={\n              isLightTheme ? 'secondaryContentLight' : 'secondaryContentDark'\n            }\n          >\n            {this.secondaryContent}\n          </p>\n          <p\n            class={\n              isLightTheme ? 'tertiaryContentLight' : 'tertiaryContentDark'\n            }\n          >\n            {this.tertiaryContent}\n          </p>\n          {this.buttonText && (\n            <button onClick={this.handleButtonClick} type='button'>\n              {this.buttonText}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n",":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.resultsContainer {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 100px 20px;\n\n  & > p {\n    align-self: center;\n  }\n\n  & > div {\n    margin-bottom: 20px;\n    img {\n      height: 300px;\n      width: 200px;\n    }\n  }\n}\n","import { Component, h, Prop, State, Element } from '@stencil/core';\nimport type { SearchcraftResponse } from '@searchcraft/core';\n\nimport { useSearchcraftStore } from '@provider/store';\nimport {\n  extractDynamicProperties,\n  parseCustomStyles,\n  parseSearchKeys,\n} from '@utils/utils';\n\n@Component({\n  tag: 'searchcraft-base-search-results',\n  styleUrl: 'searchcraft-base-search-results.module.scss',\n  shadow: true,\n})\nexport class SearchcraftBaseSearchResults {\n  @State() query = '';\n  @State() searchResults: SearchcraftResponse | null = null;\n\n  /**\n   * Array of keys to dynamically extract properties from each document.\n   * Must be explicitly set by the parent component.\n   */\n  @Prop() searchKeys = '';\n\n  /**\n   * Custom styles to apply to search results.\n   * Expected format: JSON string, e.g., '{\"borderRadius\": \"10px\", \"padding\": \"16px\"}'\n   */\n  @Prop() customStylesForResults: string | Record<string, string> = {};\n\n  @Element() hostElement: HTMLElement; // Reference to the host element\n\n  private unsubscribe: () => void;\n\n  componentDidLoad() {\n    // Initialize searchKeys if not provided\n    if (!this.searchKeys || this.searchKeys.length === 0) {\n      console.warn('No searchKeys provided; using empty keys array.');\n      this.searchKeys = ''; // Ensure it's explicitly set as an empty array\n    }\n\n    // Subscribe to state changes\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      this.searchResults = { ...state.searchResults };\n      this.query = state.query;\n    });\n\n    // Fetch initial state\n    const { searchResults, query } = useSearchcraftStore.getState();\n    this.searchResults = searchResults;\n    this.query = query;\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  render() {\n    if (!this.searchResults?.data) {\n      console.warn('No search results data available');\n      return <div>No results to display.</div>;\n    }\n\n    const parsedSearchKeys = parseSearchKeys(this.searchKeys);\n    const parsedCustomStyles = parseCustomStyles(this.customStylesForResults);\n    return (\n      <div class='resultsContainer'>\n        {this.searchResults?.data?.hits?.map((document, index) => {\n          const { doc: result } = document;\n          const dynamicProperties = extractDynamicProperties(\n            result,\n            parsedSearchKeys,\n          );\n\n          // Render the custom element if present, otherwise fallback to default\n          const customElement = this.hostElement.querySelector(\n            '[slot=\"result-template\"]',\n          );\n          if (customElement) {\n            // Clone the custom element and pass data to it\n            const customElementClone = customElement.cloneNode(\n              true,\n            ) as HTMLElement;\n            customElementClone.removeAttribute('slot'); // Remove the slot attribute\n            customElementClone.setAttribute(\n              'data-result',\n              JSON.stringify(result),\n            );\n            return (\n              <div key={`${dynamicProperties.id}-${index}`}>\n                {customElementClone.outerHTML}\n              </div>\n            );\n          }\n          // Fallback to the default element\n          return (\n            <searchcraft-base-search-result\n              key={`${dynamicProperties.id}-${index}`}\n              button-callback={() => console.log('button callback')}\n              result-callback={() => console.log('interactive element')}\n              keydown-callback={() => console.log('keydown')}\n              is-interactive={true}\n              heading-text={dynamicProperties[parsedSearchKeys[0]]}\n              subheading-text={dynamicProperties[parsedSearchKeys[1]]}\n              primary-content={dynamicProperties[parsedSearchKeys[2]]}\n              secondary-content={dynamicProperties[parsedSearchKeys[3]]}\n              tertiary-content={dynamicProperties[parsedSearchKeys[4]]}\n              image-source={\n                dynamicProperties[parsedSearchKeys[parsedSearchKeys.length - 1]]\n              }\n              customStyles={parsedCustomStyles}\n            />\n          );\n        })}\n\n        {this.query.length > 0 &&\n          this.searchResults?.data?.hits?.length === 0 && (\n            <searchcraft-error-message\n              error-message={`No search results found for \"${this.query}\" query`}\n            />\n          )}\n\n        {/* Slot for custom element */}\n        <slot name='result-template' />\n      </div>\n    );\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-clear-icon-set',\n  shadow: true,\n})\nexport class SearchcraftClearIconSet {\n  /**\n   * Type of the icon to display.\n   * Options: 'clear-light', 'clear-dark', 'arrow-light', 'arrow-dark'\n   */\n  @Prop() type: 'clear-light' | 'clear-dark' | 'arrow-light' | 'arrow-dark' =\n    'clear-light';\n\n  render() {\n    switch (this.type) {\n      case 'clear-light':\n        return (\n          <svg\n            width='22'\n            height='22'\n            viewBox='0 0 22 22'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='icon-title'\n          >\n            <title id='icon-title'>Searchcraft Clear Input Icon Light</title>\n            <path\n              d='M14 8L8 14M8 8L14 14M21 11C21 16.5228 16.5228 21 11 21C5.47715 21 1 16.5228 1 11C1 5.47715 5.47715 1 11 1C16.5228 1 21 5.47715 21 11Z'\n              stroke='black'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'clear-dark':\n        return (\n          <svg\n            width='22'\n            height='22'\n            viewBox='0 0 22 22'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='icon-title'\n          >\n            <title id='icon-title'>Searchcraft Clear Input Icon Dark</title>\n            <path\n              d='M14 8L8 14M8 8L14 14M21 11C21 16.5228 16.5228 21 11 21C5.47715 21 1 16.5228 1 11C1 5.47715 5.47715 1 11 1C16.5228 1 21 5.47715 21 11Z'\n              stroke='white'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'arrow-light':\n        return (\n          <svg\n            width='20'\n            height='21'\n            viewBox='0 0 20 21'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='icon-title'\n          >\n            <title id='icon-title'>Searchcraft Arrow Right Icon Light</title>\n            <path\n              d='M7.5 15.0444L12.5 10.0444L7.5 5.04443'\n              stroke='#737373'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'arrow-dark':\n        return (\n          <svg\n            width='8'\n            height='12'\n            viewBox='0 0 8 12'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='icon-title'\n          >\n            <title id='icon-title'>Searchcraft Arrow Right Icon Dark</title>\n            <path\n              d='M1.5 11L6.5 6L1.5 1'\n              stroke='#BFBFBF'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n\n      default:\n        return null;\n    }\n  }\n}\n",":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.inputClearButtonLTR {\n  align-items: center;\n  background: none;\n  border: none;\n  display: flex;\n  height: 20px;\n  justify-content: center;\n  padding: 0;\n  position: absolute;\n  right: 25px;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 20px;\n}\n\n.inputClearButtonRTL {\n  align-items: center;\n  background: none;\n  border: none;\n  display: flex;\n  height: 20px;\n  justify-content: center;\n  left: 25px;\n  padding: 0;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 20px;\n}","import {\n  Component,\n  Event,\n  type EventEmitter,\n  Prop,\n  h,\n  State,\n} from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-clear-input-button',\n  styleUrl: 'searchcraft-clear-input-button.module.scss',\n  shadow: true,\n})\nexport class SearchcraftClearInputButton {\n  @Prop() isRequesting? = false;\n  @Prop() rightToLeftOrientation = false;\n\n  // Updated `clearInput` to an EventEmitter\n  @Event() clearInput: EventEmitter<void>;\n\n  @State() theme = 'light';\n\n  private isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  // Added a click handler to emit the event\n  private handleClearClick = (event: MouseEvent) => {\n    event.preventDefault(); // Prevent default if necessary\n    this.clearInput.emit(); // Emit the event\n  };\n\n  render() {\n    return this.rightToLeftOrientation ? (\n      <button\n        class={classNames('inputClearButtonRTL', '.sc-clear-input-button-rtl')}\n        onClick={this.handleClearClick}\n        type='button'\n      >\n        {this.isRequesting ? (\n          this.isLightTheme ? (\n            <searchcraft-spinner-light />\n          ) : (\n            <searchcraft-spinner-dark />\n          )\n        ) : this.isLightTheme ? (\n          <searchcraft-clear-icon-set type='clear-light' />\n        ) : (\n          <searchcraft-clear-icon-set type='clear-dark' />\n        )}\n      </button>\n    ) : (\n      <button\n        class={classNames('inputClearButtonLTR', '.sc-clear-input-button-ltr')}\n        onClick={this.handleClearClick}\n        type='button'\n      >\n        {this.isRequesting ? (\n          this.isLightTheme ? (\n            <searchcraft-spinner-light />\n          ) : (\n            <searchcraft-spinner-dark />\n          )\n        ) : this.isLightTheme ? (\n          <searchcraft-clear-icon-set type='clear-light' />\n        ) : (\n          <searchcraft-clear-icon-set type='clear-dark' />\n        )}\n      </button>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin error-message-base {\n  font-family: var(--font-stack);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-top: 4px;\n}\n\n.errorMessageLight {\n  @include error-message-base;\n  color: $light-input-caption-color-error;\n}\n\n.errorMessageDark {\n  @include error-message-base;\n  color: $dark-input-caption-color-error;\n}","import { Component, Prop, h } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-error-message',\n  styleUrl: 'searchcraft-error-message.module.scss',\n  shadow: true,\n})\nexport class SearchcraftErrorMessage {\n  /**\n   * The error message to display. Defaults to a standard message if not provided.\n   */\n  @Prop() errorMessage?: string;\n\n  /**\n   * The theme, which determines the style (light or dark).\n   */\n  @Prop() theme: 'light' | 'dark' = 'light';\n\n  render() {\n    const errorMessageStyle =\n      this.theme === 'light' ? 'errorMessageLight' : 'errorMessageDark';\n\n    return (\n      <p class={classNames(errorMessageStyle)}>\n        {this.errorMessage || 'Search term is required.'}\n      </p>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin input-container-base {\n  position: relative;\n  width: 100%;\n}\n\n@mixin input-base {\n  border: none;\n  border-radius: 8px;\n  font-family: var(--font-stack);\n  outline: none;\n  padding-bottom: 15px;\n  padding-top: 15px;\n  width: 100%;\n\n  &::placeholder {\n    font-family: var(--font-stack);\n    font-size: 16px;\n  }\n}\n\n@mixin input-base-light {\n  @include input-base;\n  background-color: $light-input-background-color;\n  color: $light-input-label-color;\n\n  &::placeholder {\n    color: $light-input-placeholder-color;\n  }\n\n  &:focus {\n    outline: 2px solid $light-input-outline-focus;\n  }\n}\n\n@mixin input-base-dark {\n  @include input-base;\n  background-color: $dark-input-background-color;\n  color: $dark-input-label-color;\n\n  &::placeholder {\n    color: $dark-input-placeholder-color;\n  }\n\n  &:focus {\n    outline: 2px solid $dark-input-outline-focus;\n  }\n}\n\n@mixin input-error-base-light {\n  @include input-base-light;\n  outline: 2px solid $light-input-error-outline;\n\n  &:focus-visible {\n    outline: 2px solid $light-input-error-outline,\n  }\n}\n\n@mixin input-error-base-dark {\n  @include input-base-dark;\n  outline: 2px solid $dark-input-error-outline;\n\n  &:focus-visible {\n    outline: 2px solid $dark-input-error-outline;\n  }\n}\n\n.inputContainerLTR {\n  @include input-container-base;\n}\n\n.inputContainerRTL {\n  @include input-container-base;\n  margin-left: 8px;\n}\n\n@mixin align-LTR {\n  margin-right: 8px;\n  padding-left: 36px;\n  padding-right: 16px;\n}\n\n.inputLightLTR {\n  @include input-base-light;\n  @include align-LTR;\n}\n\n.inputDarkLTR {\n  @include input-base-dark;\n  @include align-LTR;\n}\n\n.inputErrorLightLTR {\n  @include input-error-base-light;\n  @include align-LTR;\n}\n\n.inputErrorDarkLTR {\n  @include input-error-base-dark;\n  @include align-LTR;\n}\n\n@mixin align-RTL {\n  margin-left: 8px;\n  padding-left: 16px;\n  padding-right: 36px;\n  text-align: right;\n}\n\n.inputLightRTL {\n  @include input-base-light;\n  @include align-RTL;\n}\n\n.inputDarkRTL {\n  @include input-base-dark;\n  @include align-RTL;\n}\n\n.inputErrorLightRTL {\n  @include input-error-base-light;\n  @include align-RTL;\n}\n\n.inputErrorDarkRTL {\n  @include input-error-base-dark;\n  @include align-RTL;\n}\n\n.inputWrapper {\n  align-items: center;\n  display: flex;\n  position: relative;\n  width: 100%;\n}\n","import {\n  Component,\n  h,\n  Prop,\n  State,\n  Event,\n  Fragment,\n  type EventEmitter,\n} from '@stencil/core';\nimport classNames from 'classnames';\n\nimport { parseCustomStyles } from '@utils/utils';\n\nexport interface ScInputCustomEvent<T> extends CustomEvent<T> {\n  detail: T;\n  target: HTMLSearchcraftInputElement;\n}\n\n@Component({\n  tag: 'searchcraft-input',\n  styleUrl: 'searchcraft-input.module.scss',\n  shadow: true,\n})\nexport class SearchcraftInput {\n  @Prop() customStyles: string | Record<string, string> = {};\n  @Prop() error = false;\n  @Prop() formClassName = '';\n  @Prop() inputCaptionClassName = '';\n  @Prop() inputCaptionValue = '';\n  @Prop() inputClassName = '';\n  @Prop() placeholderValue = 'Enter Search';\n  @Prop() rightToLeftOrientation = false;\n  @Prop() query = '';\n\n  @Event() clearInput: EventEmitter<void>;\n  @Event() searchInputChange: EventEmitter<string>;\n\n  @State() theme = 'light';\n\n  private get isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  handleInputChange(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.searchInputChange.emit(input.value);\n  }\n\n  handleClearInput() {\n    if (this.clearInput) {\n      this.clearInput.emit();\n    }\n  }\n\n  render() {\n    const containerClassName = this.rightToLeftOrientation\n      ? 'inputContainerRTL'\n      : 'inputContainerLTR';\n\n    const inputClassName = classNames(\n      this.error\n        ? this.isLightTheme\n          ? 'inputErrorLightRTL'\n          : 'inputErrorDarkRTL'\n        : this.isLightTheme\n          ? 'inputLightLTR'\n          : 'inputDarkLTR',\n      'searchcraft-input',\n    );\n\n    const validatedCustomStyles = parseCustomStyles(this.customStyles);\n\n    const placeholderStyle = {\n      fontSize: validatedCustomStyles.placeholderFontSize || '16px',\n    };\n    return (\n      <div\n        class={classNames(\n          containerClassName,\n          this.formClassName,\n          'searchcraft-input-form',\n        )}\n      >\n        {this.rightToLeftOrientation ? (\n          <Fragment>\n            <input\n              class={classNames(inputClassName, 'searchcraft-input')}\n              id='searchcraft-input-id'\n              onChange={this.handleInputChange.bind(this)}\n              placeholder={this.placeholderValue}\n              type='text'\n              value={this.query}\n              style={validatedCustomStyles}\n            />\n            <style>\n              {`\n                #searchcraft-input-id::placeholder {\n                  font-size: ${placeholderStyle.fontSize};\n                }\n              `}\n            </style>\n            {this.inputCaptionValue && (\n              <searchcraft-input-caption\n                inputCaptionClassName={this.inputCaptionClassName}\n                inputCaptionValue={this.inputCaptionValue}\n                rightToLeftOrientation={this.rightToLeftOrientation}\n              />\n            )}\n            {this.query.length > 0 && (\n              <searchcraft-clear-input-button\n                onClearInput={this.handleClearInput}\n                rightToLeftOrientation={this.rightToLeftOrientation}\n              />\n            )}\n            <searchcraft-input-icon\n              error={this.error}\n              rightToLeftOrientation={this.rightToLeftOrientation}\n            />\n          </Fragment>\n        ) : (\n          <div class='inputWrapper'>\n            <searchcraft-input-icon\n              error={this.error}\n              rightToLeftOrientation={this.rightToLeftOrientation}\n            />\n            <input\n              class={classNames(inputClassName, 'searchcraft-input')}\n              id='searchcraft-input-id'\n              onChange={this.handleInputChange.bind(this)}\n              placeholder={this.placeholderValue}\n              type='text'\n              value={this.query}\n              style={validatedCustomStyles}\n            />\n            <style>\n              {`\n                #searchcraft-input-id::placeholder {\n                  font-size: ${placeholderStyle.fontSize};\n                }\n              `}\n            </style>\n            {this.inputCaptionValue && (\n              <searchcraft-input-caption\n                inputCaptionClassName={this.inputCaptionClassName}\n                inputCaptionValue={this.inputCaptionValue}\n                rightToLeftOrientation={this.rightToLeftOrientation}\n              />\n            )}\n            {this.query.length > 0 && (\n              <searchcraft-clear-input-button\n                onClearInput={this.handleClearInput}\n                rightToLeftOrientation={this.rightToLeftOrientation}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin input-caption-base {\n  font-family: var(--font-stack);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-top: 4px;\n}\n\n@mixin input-caption-base-light {\n  @include input-caption-base;\n  color: $light-input-caption-color;\n}\n\n@mixin input-caption-base-dark {\n  @include input-caption-base;\n  color: $dark-input-caption-color;\n}\n\n.inputCaptionLightLTR {\n  @include input-caption-base-light;\n}\n\n.inputCaptionDarkLTR {\n  @include input-caption-base-dark;\n}\n\n.inputCaptionErrorLightLTR {\n  @include input-caption-base;\n  color: $light-input-caption-color-error;\n}\n\n.inputCaptionErrorDarkLTR {\n  @include input-caption-base;\n  color: $dark-input-caption-color-error;\n}\n\n.inputCaptionLightRTL {\n  @include input-caption-base-light;\n  text-align: right;\n}\n\n.inputCaptionDarkRTL {\n  @include input-caption-base-dark;\n  text-align: right;\n}\n\n.inputCaptionErrorLightRTL {\n  @include input-caption-base;\n  color: $light-input-caption-color-error;\n  text-align: right;\n}\n\n.inputCaptionErrorDarkRTL {\n  @include input-caption-base;\n  color: $dark-input-caption-color-error;\n  text-align: right;\n}","import { Component, Prop, h, State } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-input-caption',\n  styleUrl: 'searchcraft-input-caption.module.scss',\n  shadow: true,\n})\nexport class SearchcraftInputCaption {\n  @Prop() error?: boolean;\n  @Prop() inputCaptionClassName? = '';\n  @Prop() inputCaptionValue = 'Enter Search';\n  @Prop() rightToLeftOrientation = false;\n  @State() theme = 'light';\n\n  private isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  render() {\n    return this.rightToLeftOrientation ? (\n      <p\n        class={classNames(\n          this.error\n            ? this.isLightTheme\n              ? 'inputCaptionErrorLightRTL'\n              : 'inputCaptionErrorDarkRTL'\n            : this.isLightTheme\n              ? 'inputCaptionLightRTL'\n              : 'inputCaptionDarkRTL',\n          this.inputCaptionClassName,\n          '.searchcraft-input-caption',\n        )}\n      >\n        {this.inputCaptionValue}\n      </p>\n    ) : (\n      <p\n        class={classNames(\n          this.error\n            ? this.isLightTheme\n              ? 'inputCaptionErrorLightLTR'\n              : 'inputCaptionErrorDarkLTR'\n            : this.isLightTheme\n              ? 'inputCaptionLightLTR'\n              : 'inputCaptionDarkLTR',\n          this.inputCaptionClassName,\n          '.searchcraft-input-caption',\n        )}\n      >\n        {this.inputCaptionValue}\n      </p>\n    );\n  }\n}\n",":root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n.inputIconLTR {\n  height: 20px;\n  left: 15px;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 20px;\n}\n\n.inputIconRTL {\n  height: 20px;\n  position: absolute;\n  right: 15px;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 20px;\n}","import { Component, Prop, h, State } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-input-icon',\n  styleUrl: 'searchcraft-input-icon.module.scss',\n  shadow: true,\n})\nexport class SearchcraftInputIcon {\n  @Prop() error?: boolean;\n  @Prop() rightToLeftOrientation = false;\n  @State() theme = 'light';\n\n  private isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  render() {\n    return this.error ? (\n      <div\n        class={this.rightToLeftOrientation ? 'inputIconRTL' : 'inputIconLTR'}\n      >\n        {this.isLightTheme ? (\n          <searchcraft-search-icon-set type='error-light' />\n        ) : (\n          <searchcraft-search-icon-set type='error-dark' />\n        )}\n      </div>\n    ) : (\n      <div\n        class={this.rightToLeftOrientation ? 'inputIconRTL' : 'inputIconLTR'}\n      >\n        {this.isLightTheme ? (\n          <searchcraft-search-icon-set type='search-light' />\n        ) : (\n          <searchcraft-search-icon-set type='search-dark' />\n        )}\n      </div>\n    );\n  }\n}\n","@import '../../utils/theme';\n\n:root {\n  --font-stack: Helvetica, Arial, sans-serif;\n}\n\n@mixin input-label-base {\n  font-family: var(--font-stack);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-top: 4px;\n}\n\n.labelLight {\n  @include input-label-base;\n  color: $light-input-label-color;\n}\n\n.labelDark {\n  @include input-label-base;\n  color: $dark-input-label-color;\n}","import { Component, Prop, h, State } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'searchcraft-input-label',\n  styleUrl: 'searchcraft-input-label.module.scss',\n  shadow: true,\n})\nexport class SearchcraftInputLabel {\n  @Prop() inputLabelClassName? = '';\n  @Prop() label?: string; // Make label optional\n  @State() theme = 'light';\n\n  private isLightTheme() {\n    return this.theme === 'light';\n  }\n\n  render() {\n    // Render nothing if no label prop is provided\n    if (!this.label) {\n      return null;\n    }\n\n    const labelStyle = this.isLightTheme() ? 'labelLight' : 'labelDark';\n\n    return (\n      <label\n        class={classNames(labelStyle, this.inputLabelClassName)}\n        htmlFor='searchcraft-input-id'\n      >\n        {this.label}\n      </label>\n    );\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-search-icon-set',\n  shadow: true,\n})\nexport class SearchcraftSearchIconSet {\n  /**\n   * Type of the icon to display.\n   * Options: ''search-light', search-dark', 'error-light', 'error-dark'\n   */\n  @Prop() type: 'search-light' | 'search-dark' | 'error-light' | 'error-dark' =\n    'search-dark';\n\n  render() {\n    switch (this.type) {\n      case 'search-light':\n        return (\n          <svg\n            width='20'\n            height='20'\n            viewBox='0 0 20 20'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='searchcraft-title'\n          >\n            <title id='searchcraft-title'>Searchcraft Search Icon Light</title>\n            <path\n              d='M17.5 17.5L13.875 13.875M15.8333 9.16667C15.8333 12.8486 12.8486 15.8333 9.16667 15.8333C5.48477 15.8333 2.5 12.8486 2.5 9.16667C2.5 5.48477 5.48477 2.5 9.16667 2.5C12.8486 2.5 15.8333 5.48477 15.8333 9.16667Z'\n              stroke='#404040'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'search-dark':\n        return (\n          <svg\n            width='18'\n            height='18'\n            viewBox='0 0 18 18'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='searchcraft-title'\n          >\n            <title id='searchcraft-title'>Searchcraft Search Icon Dark</title>\n            <path\n              d='M16.5 16.5L12.875 12.875M14.8333 8.16667C14.8333 11.8486 11.8486 14.8333 8.16667 14.8333C4.48477 14.8333 1.5 11.8486 1.5 8.16667C1.5 4.48477 4.48477 1.5 8.16667 1.5C11.8486 1.5 14.8333 4.48477 14.8333 8.16667Z'\n              stroke='#E6E6E6'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'error-light':\n        return (\n          <svg\n            width='20'\n            height='20'\n            viewBox='0 0 20 20'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='searchcraft-title'\n          >\n            <title id='searchcraft-title'>\n              Searchcraft Error Search Icon Light\n            </title>\n            <path\n              d='M17.5 17.5L13.875 13.875M15.8333 9.16667C15.8333 12.8486 12.8486 15.8333 9.16667 15.8333C5.48477 15.8333 2.5 12.8486 2.5 9.16667C2.5 5.48477 5.48477 2.5 9.16667 2.5C12.8486 2.5 15.8333 5.48477 15.8333 9.16667Z'\n              stroke='#737373'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      case 'error-dark':\n        return (\n          <svg\n            width='18'\n            height='18'\n            viewBox='0 0 18 18'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            aria-labelledby='searchcraft-title'\n          >\n            <title id='searchcraft-title'>\n              Searchcraft Error Search Icon Dark\n            </title>\n            <path\n              d='M16.5 16.5L12.875 12.875M14.8333 8.16667C14.8333 11.8486 11.8486 14.8333 8.16667 14.8333C4.48477 14.8333 1.5 11.8486 1.5 8.16667C1.5 4.48477 4.48477 1.5 8.16667 1.5C11.8486 1.5 14.8333 4.48477 14.8333 8.16667Z'\n              stroke='#BFBFBF'\n              stroke-width='1.5'\n              stroke-linecap='round'\n              stroke-linejoin='round'\n            />\n          </svg>\n        );\n      default:\n        return null;\n    }\n  }\n}\n","$spinner-size: 20px;\n\n.spinnerContainer {\n  background-color: transparent;\n  height: $spinner-size;\n  width: $spinner-size;\n}\n\n.spinnerDark {\n  height: 100%;\n  width: 100%;\n  background: conic-gradient(#000 50%, #FFFFFF);\n  clip-path: circle(50%);\n  mask-image: radial-gradient(circle at center, rgba(0,0,0,0) calc($spinner-size/3), rgba(0,0,0,1) calc($spinner-size/3));\n  animation: spinning 1s linear infinite;\n}\n\n.spinnerLight {\n  height: 100%;\n  width: 100%;\n  background: conic-gradient(#737373 50%, #FFFFFF);\n  clip-path: circle(50%);\n  mask-image: radial-gradient(circle at center, rgba(0,0,0,0) calc($spinner-size/3), rgba(0,0,0,1) calc($spinner-size/3));\n  animation: spinning 1s linear infinite;\n}\n\n@keyframes spinning {\n  0% { transform: rotate(0deg); }\n  50% {transform: rotate(180deg);}\n  100% { transform: rotate(360deg); }\n}","import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-spinner-dark',\n  styleUrl: 'searchcraft-spinner-dark.module.scss',\n  shadow: true,\n})\nexport class SearchcraftSpinnerDark {\n  render() {\n    return (\n      <div class='spinnerContainer'>\n        <div class='spinnerDark' />\n      </div>\n    );\n  }\n}\n","$spinner-size: 20px;\n\n.spinnerContainer {\n  background-color: transparent;\n  height: $spinner-size;\n  width: $spinner-size;\n}\n\n.spinnerLight {\n  height: 100%;\n  width: 100%;\n  background: conic-gradient(#737373 50%, #FFFFFF);\n  clip-path: circle(50%);\n  mask-image: radial-gradient(circle at center, rgba(0,0,0,0) calc($spinner-size/3), rgba(0,0,0,1) calc($spinner-size/3));\n  animation: spinning 1s linear infinite;\n}\n\n@keyframes spinning {\n  0% { transform: rotate(0deg); }\n  50% {transform: rotate(180deg);}\n  100% { transform: rotate(360deg); }\n}","import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'searchcraft-spinner-light',\n  styleUrl: 'searchcraft-spinner-light.module.scss',\n  shadow: true,\n})\nexport class SearchcraftSpinnerLight {\n  render() {\n    return (\n      <div class='spinnerContainer'>\n        <div class='spinnerLight' />\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}
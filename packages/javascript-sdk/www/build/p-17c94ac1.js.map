{"version":3,"names":["parseCustomStyles","styles","JSON","parse","error","console","parseSearchKeys","searchKeys","parsedKeys","Array","isArray","every","key","warn","extractDynamicProperties","document","keys","extractedProperties","forEach","serializeStyles","stringify"],"sources":["src/utils/utils.ts"],"sourcesContent":["export function parseCustomStyles(\n  styles: string | Record<string, string>,\n): Record<string, string> {\n  if (typeof styles === 'string') {\n    try {\n      return JSON.parse(styles);\n    } catch (error) {\n      console.error('Invalid customStyles format:', styles);\n      return {};\n    }\n  }\n  return styles || {};\n}\n\nexport function parseSearchKeys(searchKeys: string): string[] {\n  try {\n    // Attempt to parse the string as JSON\n    const parsedKeys = JSON.parse(searchKeys);\n    if (\n      Array.isArray(parsedKeys) &&\n      parsedKeys.every((key) => typeof key === 'string')\n    ) {\n      return parsedKeys; // Return the array if it's valid\n    }\n    console.warn(\n      'searchKeys must be a JSON array of strings. Defaulting to an empty array.',\n    );\n    return [];\n  } catch (error) {\n    console.error('Failed to parse searchKeys:', error);\n    return []; // Return an empty array in case of a parsing error\n  }\n}\n\nexport function extractDynamicProperties(\n  document: Record<string, string | number>,\n  keys: string[],\n) {\n  const extractedProperties: Record<string, string | number> = {};\n  keys.forEach((key) => {\n    extractedProperties[key] = document[key] || '';\n  });\n  return extractedProperties;\n}\n\nexport function serializeStyles(\n  styles: Record<string, Record<string, string>>,\n): string {\n  try {\n    return JSON.stringify(styles);\n  } catch (error) {\n    console.error('Error serializing styles:', error);\n    return '{}';\n  }\n}\n"],"mappings":"SAAgBA,EACdC,GAEA,UAAWA,IAAW,SAAU,CAC9B,IACE,OAAOC,KAAKC,MAAMF,E,CAClB,MAAOG,GACPC,QAAQD,MAAM,+BAAgCH,GAC9C,MAAO,E,EAGX,OAAOA,GAAU,EACnB,C,SAEgBK,EAAgBC,GAC9B,IAEE,MAAMC,EAAaN,KAAKC,MAAMI,GAC9B,GACEE,MAAMC,QAAQF,IACdA,EAAWG,OAAOC,UAAeA,IAAQ,WACzC,CACA,OAAOJ,C,CAETH,QAAQQ,KACN,6EAEF,MAAO,E,CACP,MAAOT,GACPC,QAAQD,MAAM,8BAA+BA,GAC7C,MAAO,E,CAEX,C,SAEgBU,EACdC,EACAC,GAEA,MAAMC,EAAuD,GAC7DD,EAAKE,SAASN,IACZK,EAAoBL,GAAOG,EAASH,IAAQ,EAAE,IAEhD,OAAOK,CACT,C,SAEgBE,EACdlB,GAEA,IACE,OAAOC,KAAKkB,UAAUnB,E,CACtB,MAAOG,GACPC,QAAQD,MAAM,4BAA6BA,GAC3C,MAAO,I,CAEX,Q","ignoreList":[]}
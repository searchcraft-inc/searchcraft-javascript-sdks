{"version":3,"names":["patchBrowser","importMeta","url","opts","resourcesUrl","URL","href","promiseResolve","then","async","options","globalScripts","bootstrapLazy","config","errorMessage","labelForInput","rightToLeftOrientation","error","query","searchResults","iconElement","iconOnly","iconPosition","label","isRequesting","theme","buttonCallbackFn","buttonLabel","callbackFn","imageAltText","imageSrc","interactiveResult","keyDownCallbackFn","resultBodyContent","resultHeading","resultSubheading","inputLabelClassName","formClassName","inputCaptionClassName","inputCaptionValue","inputClassName","placeholderValue","autoSearchFormClass","clearInput","searchContainerClass"],"sources":["../../node_modules/@stencil/core/internal/client/patch-browser.js","@lazy-browser-entrypoint?app-data=conditional"],"sourcesContent":["/*\n Stencil Client Patch Browser v4.22.3 | MIT Licensed | https://stenciljs.com\n */\n\n// src/client/client-patch-browser.ts\nimport { BUILD, NAMESPACE } from \"@stencil/core/internal/app-data\";\nimport { consoleDevInfo, doc, H, promiseResolve } from \"@stencil/core\";\nvar patchBrowser = () => {\n  if (BUILD.isDev && !BUILD.isTesting) {\n    consoleDevInfo(\"Running in development mode.\");\n  }\n  if (BUILD.cloneNodeFix) {\n    patchCloneNodeFix(H.prototype);\n  }\n  const scriptElm = BUILD.scriptDataOpts ? Array.from(doc.querySelectorAll(\"script\")).find(\n    (s) => new RegExp(`/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) || s.getAttribute(\"data-stencil-namespace\") === NAMESPACE\n  ) : null;\n  const importMeta = import.meta.url;\n  const opts = BUILD.scriptDataOpts ? (scriptElm || {})[\"data-opts\"] || {} : {};\n  if (importMeta !== \"\") {\n    opts.resourcesUrl = new URL(\".\", importMeta).href;\n  }\n  return promiseResolve(opts);\n};\nvar patchCloneNodeFix = (HTMLElementPrototype) => {\n  const nativeCloneNodeFn = HTMLElementPrototype.cloneNode;\n  HTMLElementPrototype.cloneNode = function(deep) {\n    if (this.nodeName === \"TEMPLATE\") {\n      return nativeCloneNodeFn.call(this, deep);\n    }\n    const clonedNode = nativeCloneNodeFn.call(this, false);\n    const srcChildNodes = this.childNodes;\n    if (deep) {\n      for (let i = 0; i < srcChildNodes.length; i++) {\n        if (srcChildNodes[i].nodeType !== 2) {\n          clonedNode.appendChild(srcChildNodes[i].cloneNode(true));\n        }\n      }\n    }\n    return clonedNode;\n  };\n};\nexport {\n  patchBrowser\n};\n","export { setNonce } from '@stencil/core';\nimport { bootstrapLazy } from '@stencil/core';\nimport { patchBrowser } from '@stencil/core/internal/client/patch-browser';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\npatchBrowser().then(async (options) => {\n  await globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n});\n"],"mappings":"0HAOA,IAAIA,EAAe,KAUjB,MAAMC,cAAyBC,IAC/B,MAAMC,EAAqE,GAC3E,GAAIF,IAAe,GAAI,CACrBE,EAAKC,aAAe,IAAIC,IAAI,IAAKJ,GAAYK,IACjD,CACE,OAAOC,EAAeJ,EAAK,EClB7BH,IAAeQ,MAAKC,MAAOC,UACnBC,IACN,OAAOC,EAAc,yCAAuC,CAAAC,OAAA,KAAAC,aAAA,oBAAAC,cAAA,sBAAAC,uBAAA,gCAAAC,MAAA,KAAAC,MAAA,KAAAC,cAAA,oCAAAD,MAAA,KAAAC,cAAA,uBAAAC,YAAA,KAAAC,SAAA,gBAAAC,aAAA,oBAAAC,MAAA,IAAAC,aAAA,KAAAC,MAAA,mCAAAC,iBAAA,KAAAC,YAAA,mBAAAC,WAAA,KAAAC,aAAA,qBAAAC,SAAA,gBAAAC,kBAAA,yBAAAC,kBAAA,KAAAC,kBAAA,0BAAAC,cAAA,qBAAAC,iBAAA,wBAAAV,MAAA,2BAAAW,oBAAA,6BAAAb,MAAA,IAAAE,MAAA,sBAAAR,MAAA,IAAAoB,cAAA,sBAAAC,sBAAA,+BAAAC,kBAAA,0BAAAC,eAAA,uBAAAC,iBAAA,wBAAAzB,uBAAA,gCAAAE,MAAA,IAAAO,MAAA,8BAAAX,aAAA,oBAAAW,MAAA,wDAAAD,aAAA,oBAAAR,uBAAA,gCAAAS,MAAA,8BAAAR,MAAA,IAAAqB,sBAAA,+BAAAC,kBAAA,0BAAAvB,uBAAA,gCAAAS,MAAA,2BAAAR,MAAA,IAAAD,uBAAA,gCAAAS,MAAA,kDAAAiB,oBAAA,6BAAAC,WAAA,KAAA9B,OAAA,KAAA0B,kBAAA,0BAAAxB,cAAA,sBAAA0B,iBAAA,wBAAAzB,uBAAA,gCAAA4B,qBAAA,6BAAA3B,MAAA,KAAAC,MAAA,KAAAC,cAAA,kDAAAT,EAAA","ignoreList":[]}
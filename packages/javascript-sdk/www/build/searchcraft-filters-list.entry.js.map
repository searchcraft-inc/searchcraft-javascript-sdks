{"file":"searchcraft-filters-list.entry.esm.js","mappings":"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","names":[],"sources":["src/components/searchcraft-filters-list/searchcraft-filters-list.module.scss?tag=searchcraft-filters-list&encapsulation=shadow","src/components/searchcraft-filters-list/searchcraft-filters-list.tsx"],"sourcesContent":[".filtersList {\n  width: 100%;\n}\n\n.checkboxLabel {\n  align-items: center;\n  color: #292929;\n  display: flex;\n  font-family: 'Source Sans Pro';\n  font-size: 14px;\n  font-weight: 600;\n  gap: 14px;\n  position: relative;\n  -webkit-font-smoothing: antialiased;\n}\n\n.checkboxLabel input[type=\"checkbox\"] {\n  align-items: center;\n  appearance: none;\n  background-color: #EDEDED;\n  border: 1px solid #D9D9D9;\n  cursor: pointer;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  width: 24px;\n}\n\n.checkboxLabel input[type=\"checkbox\"]:checked {\n  background-color: #000;\n  position: relative;\n}\n\n.checkboxLabel input[type=\"checkbox\"]:checked + .checkContainer {\n  display: block;\n}\n\n.remainingFilterListCheckbox {\n  margin-left: 16px;\n}\n\n.childCheckboxLabel {\n  align-items: center;\n  color: #292929;\n  display: flex;\n  font-family: 'Source Sans Pro';\n  font-size: 14px;\n  font-weight: 600;\n  gap: 12px;\n  position: relative;\n}\n\n.childCheckboxLabel input[type=\"checkbox\"] {\n  align-items: center;\n  appearance: none;\n  background-color: #EDEDED;\n  border: 1px solid #D9D9D9;\n  cursor: pointer;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  position: relative;\n  width: 24px;\n  -webkit-font-smoothing: antialiased;\n}\n\n.childCheckboxLabel input[type=\"checkbox\"]:checked {\n  background-color: #000;\n  position: relative;\n}\n\n.childCheckboxLabel input[type=\"checkbox\"]:checked + .checkContainer {\n  display: block;\n}\n\n.checkContainer {\n  display: none;\n  height: 16px;\n  width: 16px;\n  position: absolute;\n  top: 10px;\n  left: 7px;\n}","import {\n  Component,\n  h,\n  State,\n  Prop,\n  Event,\n  type EventEmitter,\n} from '@stencil/core';\n\nimport type { Facets } from '@searchcraft/core';\n\nimport { useSearchcraftStore } from '@provider/store';\n\nimport { flattenFacets } from '@utils/utils';\n\n@Component({\n  tag: 'searchcraft-filters-list',\n  styleUrl: 'searchcraft-filters-list.module.scss',\n  shadow: true,\n})\nexport class SearchcraftFiltersList {\n  @Prop() filters: Array<{ label: string; value: string }> = [];\n\n  @Event() filtersUpdated: EventEmitter<string[]>;\n\n  @State() dynamicFilters: Array<{ label: string; value: string }> = [];\n  @State() isRequesting = false;\n  @State() query = '';\n  @State() resultsCount = 0;\n  @State() selectedFilters: Set<string> = new Set();\n\n  private searchStore = useSearchcraftStore.getState();\n  unsubscribe: () => void;\n\n  connectedCallback() {\n    const state = this.searchStore;\n\n    if (state.searchResults?.data.facets) {\n      this.populateFiltersFromFacets(state.searchResults.data.facets);\n    }\n\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      if (!state.query || state.query.trim().length === 0) {\n        if (this.selectedFilters.size > 0) {\n          this.selectedFilters.clear();\n          this.filtersUpdated.emit([]);\n          if (this.searchStore.selectedFilters.length > 0) {\n            this.searchStore.setSelectedFilters([]);\n          }\n        }\n      }\n      this.query = state.query || '';\n      this.isRequesting = state.isRequesting;\n      this.resultsCount = state.searchResults?.data?.hits?.length || 0;\n\n      if (state.searchResults?.data.facets) {\n        this.populateFiltersFromFacets(state.searchResults.data.facets);\n      }\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  populateFiltersFromFacets(facets: Facets) {\n    const newFilters = flattenFacets(facets[0]?.section || []);\n    const filtersMap = new Map<string, { label: string; value: string }>();\n\n    this.dynamicFilters.forEach((filter) => {\n      const key = filter.value.split('/').pop() || '';\n      filtersMap.set(key, filter);\n    });\n\n    newFilters.forEach((filter) => {\n      const key = filter.value.split('/').pop() || '';\n      const existingFilter = filtersMap.get(key);\n\n      if (\n        !existingFilter ||\n        filter.value.length < existingFilter.value.length\n      ) {\n        filtersMap.set(key, filter);\n      }\n    });\n\n    this.dynamicFilters = Array.from(filtersMap.values());\n  }\n\n  handleFilterChange = (value: string, checked: boolean) => {\n    if (checked) {\n      this.selectedFilters.add(value);\n    } else {\n      this.selectedFilters.delete(value);\n    }\n    const deduplicatedFilters = this.deduplicatePaths(\n      Array.from(this.selectedFilters),\n    );\n\n    this.filtersUpdated.emit(deduplicatedFilters);\n    this.searchStore.setSelectedFilters(deduplicatedFilters);\n    this.searchStore.search();\n  };\n\n  deduplicatePaths(filters: string[]): string[] {\n    const pathMap = new Map<string, string>();\n\n    filters.forEach((path) => {\n      const key = path.split('/').pop() || '';\n      const existingPath = pathMap.get(key);\n\n      if (!existingPath || path.length < existingPath.length) {\n        pathMap.set(key, path);\n      }\n    });\n\n    return Array.from(pathMap.values());\n  }\n\n  formatLabel(label: string): string {\n    return label\n      .replace(/-/g, ' ')\n      .split(' ')\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  }\n\n  render() {\n    if (!this.query || this.resultsCount === 0) {\n      return null;\n    }\n\n    const filtersToRender = this.dynamicFilters.filter(\n      (filter) => !filter.value.includes('/', filter.value.indexOf('/') + 1),\n    );\n\n    return (\n      <div class='filtersList'>\n        {filtersToRender.map((filter) => {\n          const isChecked = this.selectedFilters.has(filter.value);\n          const children = this.dynamicFilters.filter(\n            (child) =>\n              child.value.startsWith(`${filter.value}/`) &&\n              child.value !== filter.value,\n          );\n\n          return (\n            <div key={filter.value}>\n              <label class='checkboxLabel'>\n                <input\n                  class='filterCheckbox'\n                  checked={isChecked}\n                  onChange={(event: Event) =>\n                    this.handleFilterChange(\n                      filter.value,\n                      (event.target as HTMLInputElement).checked,\n                    )\n                  }\n                  type='checkbox'\n                />\n                <div class='checkContainer'>\n                  <searchcraft-check-icon />\n                </div>\n                {this.formatLabel(filter.label)}\n              </label>\n              {children.map((child) => {\n                const isChildChecked = this.selectedFilters.has(child.value);\n                return (\n                  <label\n                    class='childCheckboxLabel'\n                    key={child.value}\n                    style={{ marginLeft: '20px' }}\n                  >\n                    <input\n                      class='childFilterCheckbox'\n                      checked={isChildChecked}\n                      onChange={(event: Event) =>\n                        this.handleFilterChange(\n                          child.value,\n                          (event.target as HTMLInputElement).checked,\n                        )\n                      }\n                      type='checkbox'\n                    />\n                    <div class='checkContainer'>\n                      <searchcraft-check-icon />\n                    </div>\n                    {this.formatLabel(child.label.split('/').pop() || '')}\n                  </label>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n"],"version":3}
{"file":"searchcraft-filters-list.entry.esm.js","mappings":"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","names":[],"sources":["src/components/searchcraft-filters-list/searchcraft-filters-list.module.scss?tag=searchcraft-filters-list&encapsulation=shadow","src/components/searchcraft-filters-list/searchcraft-filters-list.tsx"],"sourcesContent":[".filtersList {\n  padding: 16px;\n}\n\n.checkboxLabel {\n  align-items: center;\n  color: #292929;\n  display: flex;\n  font-size: 14px;\n  font-weight: 600;\n  gap: 12px;\n}\n\n.checkboxLabel input[type=\"checkbox\"] {\n  align-items: center;\n  appearance: none;\n  background-color:#EDEDED;\n  border: 1px solid #D9D9D9;\n  cursor: pointer;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  width: 24px;\n}\n\n.checkboxLabel input[type=\"checkbox\"]:checked {\n  background-color: #000;\n}\n\n.checkboxLabel input[type=\"checkbox\"]:checked::before {\n  color: #fff;\n  content: 'âœ”';\n  font-size: 14px;\n}","import {\n  Component,\n  h,\n  State,\n  Prop,\n  Event,\n  type EventEmitter,\n} from '@stencil/core';\nimport { useSearchcraftStore } from '@provider/store';\nimport type { Facets } from '@searchcraft/core';\n\n@Component({\n  tag: 'searchcraft-filters-list',\n  styleUrl: 'searchcraft-filters-list.module.scss',\n  shadow: true,\n})\nexport class SearchcraftFiltersList {\n  @Prop() filters: Array<{ label: string; value: string }> = [];\n  @Event() filtersUpdated: EventEmitter<string[]>;\n\n  @State() selectedFilters: Set<string> = new Set();\n  @State() dynamicFilters: Array<{ label: string; value: string }> = [];\n\n  private searchStore = useSearchcraftStore.getState();\n  unsubscribe: () => void;\n\n  connectedCallback() {\n    this.unsubscribe = useSearchcraftStore.subscribe((state) => {\n      const facets = state.searchResults?.data.facets;\n      if (facets) {\n        this.populateFiltersFromFacets(facets);\n      }\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  populateFiltersFromFacets(facets: Facets) {\n    const newFilters = Object.entries(facets).flatMap(([facetKey, facetData]) =>\n      Object.entries(facetData.counts).map(([value, count]) => ({\n        label: `${facetKey}: ${value.replace(/^\\//, '')} (${count})`,\n        value: `${facetKey}:${value}`,\n      })),\n    );\n    this.dynamicFilters = newFilters;\n  }\n\n  handleFilterChange = (value: string, checked: boolean) => {\n    if (checked) {\n      this.selectedFilters.add(value);\n    } else {\n      this.selectedFilters.delete(value);\n    }\n\n    const selectedFiltersArray = Array.from(this.selectedFilters);\n\n    const filtersToRender =\n      this.dynamicFilters.length > 0 ? this.dynamicFilters : this.filters;\n\n    // Construct the original data dynamically from filtersToRender\n    const originalData = {\n      section: {\n        counts: filtersToRender.reduce(\n          (countsAcc, filter) => {\n            const [, facetValue] = filter.value.split(':');\n            countsAcc[`${facetValue}`] = Number.parseInt(\n              (filter.label.match(/\\((\\d+)\\)$/) || [])[1] || '0',\n              10,\n            );\n            return countsAcc;\n          },\n          {} as Record<string, number>,\n        ),\n      },\n    };\n\n    const checkedCategories = selectedFiltersArray.map(\n      (filter) => filter.split(':')[1],\n    );\n    const filteredCounts = Object.keys(originalData.section.counts)\n      .filter((key) => checkedCategories.includes(key))\n      .reduce(\n        (acc, key) => {\n          acc[key] = originalData.section.counts[key];\n          return acc;\n        },\n        {} as Record<string, number>,\n      );\n    const filteredData = {\n      section: {\n        counts: filteredCounts,\n      },\n    };\n\n    // Transform the filtered data into the facets structure\n    const transformedFacets: Facets = {\n      section: {\n        counts: filteredData.section.counts,\n      },\n    };\n\n    // Emit the updated selected filters and update the search store\n    this.filtersUpdated.emit(selectedFiltersArray);\n    this.searchStore.setFacets(transformedFacets);\n    this.searchStore.search();\n  };\n\n  render() {\n    const filtersToRender =\n      this.dynamicFilters.length > 0 ? this.dynamicFilters : this.filters;\n\n    return (\n      <div class='filtersList'>\n        {filtersToRender.map((filter) => {\n          const filterLabel = filter.label.split(':')[1] || filter.label;\n          return (\n            <label class='checkboxLabel' key={filter.label}>\n              <input\n                class='filterListCheckbox'\n                onChange={(event: Event) =>\n                  this.handleFilterChange(\n                    filter.value,\n                    (event.target as HTMLInputElement).checked,\n                  )\n                }\n                type='checkbox'\n                value={filter.value}\n              />\n              {filterLabel}\n            </label>\n          );\n        })}\n      </div>\n    );\n  }\n}\n"],"version":3}